bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  1;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  -  1;	      int    costEvaluations    =    parameters.getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
2	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  2;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  2;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  -  2;	      int    costEvaluations    =    parameters.getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
3	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  cols;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  -  cols;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  -  cols;	      int    costEvaluations    =    parameters.getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
4	[BUG]  [BUGGY]  return  parameters.length;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  int  cols  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	3	None	add
5	[BUG]  [BUGGY]  return  parameters.length;  int  maxCostEval  =  parameters.length;  [CE]  unreachable  statement  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  int  maxCostEval  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    int  maxCostEval  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	3	None	add
6	[BUG]  [BUGGY]  return  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]        EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    if(parameters!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
7	[BUG]  [BUGGY]  return  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]          EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    if(parameters!=  null)  {  for(int  i  =  0;  i  <  parameters.length;  i++)  {  parameters[i]  =  parameters[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
8	[BUG]  [BUGGY]  return  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }  [CE]  illegal  start  of  expression  [FE]            EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  if(parameters!=  null)  {  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    if(parameters!=  null)  {  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  parameters[i]  =  parameters[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
9	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations()  -  1;  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations()  -  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations()  -  1;	      int    costEvaluations    =    getMeanEvaluations();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
10	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations().length;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations().length;	      int    costEvaluations    =    getMeanEvaluations();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
11	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length()  -  2;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.length()  -  2;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length()  -  2;	      int    costEvaluations    =    parameters.length();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
12	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length()  -  1;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.length()  -  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length()  -  1;	      int    costEvaluations    =    parameters.length();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
13	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length()  +  1;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.length()  +  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length()  +  1;	      int    costEvaluations    =    parameters.length();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
14	[BUG]  [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    int  costEvaluations  *  2;	  	non-compiled	[CE]  ';'  expected	5	None	add
15	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	  	non-compiled	[CE]  ';'  expected	5	None	add
16	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	5	None	add
17	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	5	None	add
18	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	5	None	add
19	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  -  1;	  return    parameters.length;    	compilable	  [FE]  EstimationException  	4	7	replace
20	[BUG]  [BUGGY]  return  parameters.length  -  1;  [FE]  EstimationException  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  -  1;	  return    parameters.length;    	compilable	  [FE]  EstimationException  	4	7	replace
21	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  -  2;	  return    parameters.length;    	compilable	  [FE]  EstimationException  	4	8	replace
22	[BUG]  [BUGGY]  return  parameters.length  -  2;  [FE]  EstimationException  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  -  2;	  return    parameters.length;    	compilable	  [FE]  EstimationException  	4	8	replace
23	[BUG]  [BUGGY]  return  this.results.length;  [CE]  cannot  find  symbol  results  [FE]        EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.results.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.results.length;	  return    parameters.length;    	non-compiled	[CE]  cannot  find  symbol  results	4	None	replace
24	[BUG]  [BUGGY]  return  this.resultEvaluations.length;  [CE]  cannot  find  symbol  resultEvaluations  [FE]          EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.resultEvaluations.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.resultEvaluations.length;	  return    parameters.length;    	non-compiled	[CE]  cannot  find  symbol  resultEvaluations	4	None	replace
25	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.get( "cost ",  jacobianEvaluations);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost ",  jacobianEvaluations);	      int    costEvaluations    =    parameters.get(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
26	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "CostEvaluations ");  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.get( "CostEvaluations ");  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "CostEvaluations ");	      int    costEvaluations    =    parameters.get(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
27	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations ");  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.get( "cost-evaluations ");  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost-evaluations ");	      int    costEvaluations    =    parameters.get(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
28	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  parameters);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  parameters);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(maxCostEval,  parameters);	      int    costEvaluations    =    getMeanEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
29	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings);  [CE]  cannot  find  symbol  remainings  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainings);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainings);	      int    costEvaluations    =    getMeanEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol  remainings	18	None	replace
30	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations(  jacobianEvaluations);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(  jacobianEvaluations);	      int    costEvaluations    =    getMeanEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
31	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  residuals);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  residuals);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(maxCostEval,  residuals);	      int    costEvaluations    =    getMeanEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
32	[BUG]  [BUGGY]  int  costEvaluations  =  getRowEvaluations();  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getRowEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getRowEvaluations();	      int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
33	[BUG]  [BUGGY]  int  costEvaluations  =  getMeasurements();  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeasurements();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeasurements();	      int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
34	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations()  -  1;  [CE]  missing  return  statement  [FE]        StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getCostEvaluations()  -  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations()  -  1;	      int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  missing  return  statement	13	None	replace
35	[BUG]  [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  -  1;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    int  costEvaluations  -  1;	  	non-compiled	[CE]  ';'  expected	15	None	add
36	[BUG]  [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
37	[BUG]  [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	15	None	add
38	[BUG]  [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    int  costEvaluations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	15	None	add
39	[BUG]  [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.length  -  2;  [CE]  unreachable  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  parameters.length  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    int  costEvaluations  =  parameters.length  -  2;	  	non-compiled	[CE]  unreachable  statement	15	None	add
40	[BUG]  [BUGGY]  return  this.costEvaluations;  this.costEvaluations;  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  this.costEvaluations;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    this.costEvaluations;	  	non-compiled	[CE]  not  a  statement	1	None	add
41	[BUG]  [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  parameters.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
42	[BUG]  [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations;  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    int  costEvaluations  =  this.costEvaluations;	  	non-compiled	[CE]  unreachable  statement	1	None	add
43	[BUG]  [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	1	None	add
44	[BUG]  [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	1	None	add
45	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	      	non-compiled	[CE]  not  a  statement	7	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i];  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	      	non-compiled	[CE]  ';'  expected	7	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0,  cols  =  parameters.length;  i  <  cols.length;  i++)  {  EstimatedParameter[]  parameters  =  parameter.getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  =  parameters[i]	      	non-compiled	[CE]  ';'  expected	7	None	replace
48	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  -  1;	  return    this.costEvaluations;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
49	[BUG]  [BUGGY]  return  this.costEvaluations  -  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  -  1;	  return    this.costEvaluations;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  +  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  +  1;	  return    this.costEvaluations;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
51	[BUG]  [BUGGY]  return  this.costEvaluations  +  1;  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  +  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  +  1;	  return    this.costEvaluations;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  *  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  2;	  return    this.costEvaluations;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
53	[BUG]  [BUGGY]  return  this.costEvaluations  *  2;  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  *  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  2;	  return    this.costEvaluations;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
54	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  /  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  /  2;	  return    this.costEvaluations;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
55	[BUG]  [BUGGY]  return  this.costEvaluations  /  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  /  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  /  2;	  return    this.costEvaluations;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
56	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  -  1;  [CE]  missing  return  statement  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  -  1;	      int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	9	None	replace
57	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  -  2;  [CE]  missing  return  statement  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.length  -  2;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  -  2;	      int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	9	None	replace
58	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.length  +  1;  [CE]  missing  return  statement  [FE]        EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.length  +  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.length  +  1;	      int    costEvaluations    =    parameters.length;    	non-compiled	[CE]  missing  return  statement	9	None	replace
59	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	20	None	add
60	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  *  parameters.length;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  *  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length;    int  costEvaluations  *  parameters.length;	  	non-compiled	[CE]  ';'  expected	20	None	add
61	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length;  int  cols  =  parameters.length;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length;  int  cols  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length;    int  cols  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	20	None	add
62	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.length;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length;  int  maxCostEval  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length;    int  maxCostEval  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	20	None	add
63	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  *  costEvaluations;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  *  costEvaluations;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	21	2	replace
65	[BUG]  [BUGGY]  return  parameters.length  *  costEvaluations;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  *  costEvaluations;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  *  costEvaluations;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	21	2	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  parameters.length  -  1;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	21	2	replace
67	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  parameters.length  -  1;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	21	2	replace
68	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  /  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  parameters.length;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	1	replace
69	[BUG]  [BUGGY]  return  costEvaluations  /  parameters.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  /  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  parameters.length;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	1	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  parameters.length  -  2;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	21	2	replace
71	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  parameters.length  -  2;	  return    costEvaluations    *    parameters.length;    	compilable	  [FE]  AssertionFailedError  	21	2	replace
72	[BUG]  [BUGGY]      int  costEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]    StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  int  costEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    getCostEvaluations();    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	12	None	add
73	[BUG]  [BUGGY]      int  costEvaluations  =  getCostEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  Integer  costEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    getCostEvaluations();    Integer  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	12	None	add
74	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	        int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();	  	compilable	  [FE]  StackOverflowError  	12	12	add
75	[BUG]  [BUGGY]      int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  int  costsEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    getCostEvaluations();    int  costsEvaluations  =  getCostEvaluations();	  	compilable	  [FE]  StackOverflowError  	12	12	add
76	[BUG]  [BUGGY]      int  costEvaluations  =  getCostEvaluations();  float  costEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]          StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  float  costEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    getCostEvaluations();    float  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	12	None	add
77	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.size()  -  2;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.size()  -  2;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.size()  -  2;	      int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
78	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.size()  -  1;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.size()  -  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.size()  -  1;	      int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
79	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  /  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  1;	  return    costEvaluations    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
80	[BUG]  [BUGGY]  return  costEvaluations  /  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  /  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  1;	  return    costEvaluations    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
81	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  1;	  return    costEvaluations    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
82	[BUG]  [BUGGY]  return  costEvaluations  *  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  1;	  return    costEvaluations    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
83	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  -  2;	  return    costEvaluations    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
84	[BUG]  [BUGGY]  return  costEvaluations  -  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  -  2;	  return    costEvaluations    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
85	[BUG]  [BUGGY]      int  costEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  parameters.length;  int  costEvaluations  =  parameters.length;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    parameters.length;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	8	None	add
86	[BUG]  [BUGGY]      int  costEvaluations  =  parameters.length;  Integer  costEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  parameters.length;  Integer  costEvaluations  =  parameters.length;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    parameters.length;    Integer  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	8	None	add
87	[BUG]  [BUGGY]      int  costEvaluations  =  parameters.length;  Int  costEvaluations  =  parameters.length;  [CE]  cannot  find  symbol  [FE]        EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  parameters.length;  Int  costEvaluations  =  parameters.length;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    parameters.length;    Int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
88	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]          EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	        int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;	  	compilable	  [FE]  EstimationException  	8	3	add
89	[BUG]  [BUGGY]      int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [FE]  EstimationException  [FE]          EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  parameters.length;  int  costsEvaluations  =  parameters.length;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    parameters.length;    int  costsEvaluations  =  parameters.length;	  	compilable	  [FE]  EstimationException  	8	3	add
90	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  /  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  /  2;	  return    costEvaluations    *    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
91	[BUG]  [BUGGY]  return  costEvaluations  /  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  /  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  /  2;	  return    costEvaluations    *    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  +  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  +  1;	  return    costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	6	2	replace
93	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  +  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  +  1;	  return    costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	6	2	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  +  0;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  +  0;	  return    costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	6	2	replace
95	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  +  0;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  +  0;	  return    costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	6	2	replace
96	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  -  1;	  return    costEvaluations    *    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
97	[BUG]  [BUGGY]  return  costEvaluations  *  2  -  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  -  1;	  return    costEvaluations    *    2;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
98	[BUG]  [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  =  parameters.length;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    int  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	5	None	add
99	[BUG]  [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  =  parameters.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    int  costEvaluations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
100	[BUG]  [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2  =  parameters.length;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  int  costEvaluations  *  2  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    int  costEvaluations  *  2  =  parameters.length;	  	non-compiled	[CE]  ';'  expected	5	None	add
101	[BUG]  [BUGGY]  return  costEvaluations  *  2;  Integer  costEvaluations  *  2;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  Integer  costEvaluations  *  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    Integer  costEvaluations  *  2;	  	non-compiled	[CE]  ';'  expected	5	None	add
102	[BUG]  [BUGGY]  return  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  incompatible  types	15	None	add
103	[BUG]  [BUGGY]  return  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [CE]  cannot  find  symbol  results  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    ArrayIndexOutOfBoundsException  costEvaluations  =  new  ArrayIndexOutOfBoundsException(results.length);	  	non-compiled	[CE]  cannot  find  symbol  results	15	None	add
104	[BUG]  [BUGGY]  return  parameters  *  costEvaluations.length;  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters  *  costEvaluations.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  costEvaluations.length;	  return    costEvaluations    *    parameters.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	21	None	replace
105	[BUG]  [BUGGY]  return  parameters  *  cost.length;  [CE]  double  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters  *  cost.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  cost.length;	  return    costEvaluations    *    parameters.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
106	[BUG]  [BUGGY]  return  parameters  *  costEvaluations;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters  *  costEvaluations;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters  *  costEvaluations;	  return    costEvaluations    *    parameters.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	21	None	replace
107	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getMeasures();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.getMeasures();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getMeasures();	      int    costEvaluations    =    parameters.getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
108	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getMeasurements();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.getMeasurements();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getMeasurements();	      int    costEvaluations    =    parameters.getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
109	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.size()  +  1;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.size()  +  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.size()  +  1;	      int    costEvaluations    =    parameters.size();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
110	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(maxCostEval,  jacobianEvaluations);	      int    costEvaluations    =    getMeanEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
111	[BUG]  [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  [CE]  int  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    int  costEvaluations  =  this.costEvaluations.size();	  	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	add
112	[BUG]  [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations.length;  [CE]  int  cannot  be  dereferenced  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  this.costEvaluations.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    int  costEvaluations  =  this.costEvaluations.length;	  	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	add
113	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations()  +  1;  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getCostEvaluations()  +  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations()  +  1;	      int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  missing  return  statement	13	None	replace
114	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "cost ").intValue();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.get( "cost ").intValue();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "cost ").intValue();	      int    costEvaluations    =    parameters.get(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
115	[BUG]  [BUGGY]  return  parameters.length;  int  parameters  =  parameters.length;  [CE]  int  cannot  be  dereferenced  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  int  parameters  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    int  parameters  =  parameters.length;	  	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	add
116	[BUG]  [BUGGY]  return  parameters.length;  int  maxCostEval  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  int  maxCostEval  =  parameters.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    int  maxCostEval  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
117	[BUG]  [BUGGY]  return  parameters.length;  int  parameters.length  =  parameters.length;  [CE]  ';'  expected  [FE]        EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  int  parameters.length  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    int  parameters.length  =  parameters.length;	  	non-compiled	[CE]  ';'  expected	3	None	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  +  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  +  1;	  return    parameters.length;    	compilable	  [FE]  AssertionFailedError  	4	2	replace
119	[BUG]  [BUGGY]  return  parameters.length  +  1;  [FE]  AssertionFailedError  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  +  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  +  1;	  return    parameters.length;    	compilable	  [FE]  AssertionFailedError  	4	2	replace
120	[BUG]  [BUGGY]  [FE]  EstimationException  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  /  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  parameters.length  /  2;	  return    parameters.length;    	compilable	  [FE]  EstimationException  	4	8	replace
121	[BUG]  [BUGGY]  return  parameters.length  /  2;  [FE]  EstimationException  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length  /  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  parameters.length  /  2;	  return    parameters.length;    	compilable	  [FE]  EstimationException  	4	8	replace
122	[BUG]  [BUGGY]  int  rows  =  parameters.size();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  rows  =  parameters.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  rows  =  parameters.size();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
123	[BUG]  [BUGGY]  int[]  rows  =  getRows();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int[]  rows  =  getRows();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int[]  rows  =  getRows();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
124	[BUG]  [BUGGY]  int  results  =  parameters.length;  [CE]  missing  return  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  results  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  results  =  parameters.length;	      	non-compiled	[CE]  missing  return  statement	7	None	replace
125	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  -  2;	  return    this.costEvaluations;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
126	[BUG]  [BUGGY]  return  this.costEvaluations  -  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  -  2;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  -  2;	  return    this.costEvaluations;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  costEvaluations  *  2  +  parameters.length;	  return    costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	6	2	replace
128	[BUG]  [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2  +  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  costEvaluations  *  2  +  parameters.length;	  return    costEvaluations    *    2;    	compilable	  [FE]  AssertionFailedError  	6	2	replace
129	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.length  -  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  parameters.length  -  1;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length;    int  costEvaluations  =  parameters.length  -  1;	  	non-compiled	[CE]  unreachable  statement	20	None	add
130	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	  	non-compiled	[CE]  not  a  statement	5	None	add
131	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  costEvaluations	  	non-compiled	[CE]  not  a  statement	5	None	add
132	[BUG]  [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  measurements[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  2;  for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  measurements[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    2;    for(int  i  =  0;  i  <  parameters.length;  i++)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  measurements[i]	  	non-compiled	[CE]  not  a  statement	5	None	add
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {	      	non-compiled	[CE]  ']'  expected	7	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedMeasurement[]  measurements[i]  =  parameters[i].getCostEvaluations();  for(int  cols  =  0;  cols  <  measurements.length;  cols++)  {  parameters[	      	non-compiled	[CE]  ']'  expected	7	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	for(int  i  =  0;  i  <  parameters.length;  ++i)  {  EstimatedParameter[]  parameters  =  parameters[i].getParameters();  for(int  i  =  0;  i  <  parameters.length;  ++i)  {  parameters[i]	      	non-compiled	[CE]  not  a  statement	7	None	replace
136	[BUG]  [BUGGY]      int  costEvaluations  =  parameters.length;  float  costEvaluations  =  parameters.length;  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  parameters.length;  float  costEvaluations  =  parameters.length;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    parameters.length;    float  costEvaluations  =  parameters.length;	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	8	None	add
137	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  +  1;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.getCostEvaluations()  +  1;  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.getCostEvaluations()  +  1;	      int    costEvaluations    =    parameters.getCostEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
138	[BUG]  [BUGGY]  return  parameters.length;  int  maxCostEvalations  =  parameters.length;  [CE]  unreachable  statement  [FE]    EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  int  maxCostEvalations  =  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    int  maxCostEvalations  =  parameters.length;	  	non-compiled	[CE]  unreachable  statement	3	None	add
139	[BUG]  [BUGGY]  return  parameters.length;  int  maxCostEvalations  =  parameters.size();  [CE]  cannot  find  symbol  [FE]      EstimationException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  parameters.length;  int  maxCostEvalations  =  parameters.size();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    parameters.length;    int  maxCostEvalations  =  parameters.size();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  *  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	add	return  this.costEvaluations  *  parameters.length;	  return    this.costEvaluations;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
141	[BUG]  [BUGGY]  return  this.costEvaluations  *  parameters.length;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations  *  parameters.length;  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return  this.costEvaluations  *  parameters.length;	  return    this.costEvaluations;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
142	[BUG]  [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval);  [CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;  [FE]    StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getCostEvaluations(maxCostEval);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getCostEvaluations(maxCostEval);	      int    costEvaluations    =    getCostEvaluations();    	non-compiled	[CE]  method  getCostEvaluations  in  class  AbstractEstimator  cannot  be  applied  to  given  types;	13	None	replace
143	[BUG]  [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  *  parameters.length;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    *    parameters.length;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	20	None	add
144	[BUG]  [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainders);  [CE]  cannot  find  symbol  remainders  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  getMeanEvaluations(remainders);  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  getMeanEvaluations(remainders);	      int    costEvaluations    =    getMeanEvaluations(maxCostEval);    	non-compiled	[CE]  cannot  find  symbol  remainders	18	None	replace
145	[BUG]  [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  getCostEvaluations();  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  getCostEvaluations();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  unreachable  statement	15	None	add
146	[BUG]  [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  costEvaluations  -  1;  int  costEvaluations  =  getMeanEvaluations();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    costEvaluations    -    1;    int  costEvaluations  =  getMeanEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
147	[BUG]  [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  getMeanEvaluations();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  return  this.costEvaluations;  int  costEvaluations  =  getMeanEvaluations();  [BUGGY]    }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	return    this.costEvaluations;    int  costEvaluations  =  getMeanEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
148	[BUG]  [BUGGY]      int  costEvaluations  =  getCostEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  Int  costEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    getCostEvaluations();    Int  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
149	[BUG]  [BUGGY]      int  costEvaluations  =  getCostEvaluations();  boolean  costEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]      StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  boolean  costEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    getCostEvaluations();    boolean  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	12	None	add
150	[BUG]  [BUGGY]      int  costEvaluations  =  getCostEvaluations();  double  costEvaluations  =  getCostEvaluations();  [CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()  [FE]        StackOverflowError    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]      int  costEvaluations  =  getCostEvaluations();  double  costEvaluations  =  getCostEvaluations();  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	        int    costEvaluations    =    getCostEvaluations();    double  costEvaluations  =  getCostEvaluations();	  	non-compiled	[CE]  variable  costEvaluations  is  already  defined  in  method  getCostEvaluations()	12	None	add
151	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.remove( "cost ");  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.remove( "cost ");  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.remove( "cost ");	      int    costEvaluations    =    parameters.get(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
152	[BUG]  [BUGGY]  int  costEvaluations  =  parameters.get( "Cost ");  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  final  int  getCostEvaluations()  {    [BUGGY]  int  costEvaluations  =  parameters.get( "Cost ");  [BUGGY]    return  costEvaluations;  }  [CLASS]  AbstractEstimator  [METHOD]  getCostEvaluations  [RETURN_TYPE]  int  [VARIABLES]  EstimatedParameter[]  parameters  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  double  cost  int  cols  costEvaluations  jacobianEvaluations  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	0.2886751345948129	57	57	1	replace	int  costEvaluations  =  parameters.get( "Cost ");	      int    costEvaluations    =    parameters.get(   "cost   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
