projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128EstimationProblemwm=problem.getResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128EstimationProblemwm=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128SizedMeasurement[]measurements=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128SizedMeasurement[]measurements=problem.getSizes();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128SizedMeasurement[]measurements=problem.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128doublecriterion=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128doublecriterion=0L;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128doublecriterion=1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128doublecriterion=Math.max(0,wm.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128doublecriterion=0d;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128for(inti=0;i<wm.length;++i){WeightedMeasurement[]measurements=problem.getMeasurements();for(inti=0;i<measurements.length;++i){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128for(inti=0;i<wm.length;++i){EstimationProblemproblem=problems[i].getResidual();if(problem!=null){thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128for(inti=0;i<wm.length;++i){EstimationProblemproblem=problems[i].getResidual();if(problem!=null){thrownewIllegalStateException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128intcols=wm.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128EstimationProblemwm=problem.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128doublecriterion=Math.max(wm.length,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java128doublecriterion=Math.min(wm.length,cost);
