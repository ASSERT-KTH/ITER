bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj);	      EstimationProblem    problem    =    ime.getStandardProblem();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	15	None	replace
2	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(null);	      EstimationProblem    problem    =    ime.getStandardProblem();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	15	None	replace
3	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(),  parameters);	      EstimationProblem    problem    =    ime.getStandardProblem();    	non-compiled	[CE]  ';'  expected	15	None	replace
4	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException( " ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problem.getInvalidMatrixException( " ");	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
5	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  parameters.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  parameters.getInvalidMatrixException( " ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  parameters.getInvalidMatrixException( " ");	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
6	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.ime.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  ime  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  this.ime.getInvalidMatrixException( " ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.ime.getInvalidMatrixException( " ");	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ime	19	None	replace
7	[BUG]  [BUGGY]  UpdateMeasurements();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  UpdateMeasurements();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateMeasurements();	  updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
8	[BUG]  [BUGGY]  verifyMeasurements();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  verifyMeasurements();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	verifyMeasurements();	  updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
9	[BUG]  [BUGGY]  checkMeasurements();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkMeasurements();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkMeasurements();	  updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
10	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds();    	non-compiled	[CE]  ';'  expected	6	None	replace
11	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  +  1;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  +  1;  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  +  1;	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	6	None	replace
12	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters;  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters;	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	6	None	replace
13	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problem.getInvalidMatrixException();	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
14	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.ime.getInvalidMatrixException();  [CE]  cannot  find  symbol  ime  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  this.ime.getInvalidMatrixException();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.ime.getInvalidMatrixException();	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  ime	17	None	replace
15	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  parameters.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  parameters.getInvalidMatrixException();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  parameters.getInvalidMatrixException();	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
16	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException();  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.results.getInvalidMatrixException();	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  results	17	None	replace
17	[BUG]  [BUGGY]  bug.printStackTrace();  [CE]  cannot  find  symbol  bug  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  bug.printStackTrace();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	bug.printStackTrace();	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  bug	16	None	replace
18	[BUG]  [BUGGY]  Problem.printStackTrace();  [CE]  cannot  find  symbol  Problem  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Problem.printStackTrace();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Problem.printStackTrace();	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Problem	16	None	replace
19	[BUG]  [BUGGY]  Bug.printStackTrace();  [CE]  cannot  find  symbol  Bug  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Bug.printStackTrace();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.printStackTrace();	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Bug	16	None	replace
20	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance();  [CE]  cannot  find  symbol  ImmutableFormat  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableFormat.getInstance();	      InvalidMatrixException    ime    =    Ime.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableFormat	18	None	replace
21	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance();  [CE]  cannot  find  symbol  ImmutableValues  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableValues.getInstance();	      InvalidMatrixException    ime    =    Ime.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableValues	18	None	replace
22	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSet.getInstance();  [CE]  cannot  find  symbol  ImmutableSet  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  ImmutableSet.getInstance();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSet.getInstance();	      InvalidMatrixException    ime    =    Ime.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableSet	18	None	replace
23	[BUG]  [BUGGY]  Arrays.sort(this.results,  parameters);  [CE]  cannot  find  symbol  results  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Arrays.sort(this.results,  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  parameters);	      Arrays.sort(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
24	[BUG]  [BUGGY]  Arrays.sort(this.results,  results);  [CE]  cannot  find  symbol  results  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Arrays.sort(this.results,  results);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  results);	      Arrays.sort(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
25	[BUG]  [BUGGY]  Arrays.sort(this.results,  dataArea);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Arrays.sort(this.results,  dataArea);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  dataArea);	      Arrays.sort(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
26	[BUG]  [BUGGY]  Arrays.sort(this.results,  this.parameters);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Arrays.sort(this.results,  this.parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this.parameters);	      Arrays.sort(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
27	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameters);	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
28	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ");	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
29	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals. ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals. ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals. ");	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
30	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter);	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
31	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getInstance();  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getInstance();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getInstance();	      EstimationProblem    problem    =    Ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	14	None	replace
32	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(variances);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(variances);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(variances);	      EstimationProblem    problem    =    Ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	14	None	replace
33	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(problem);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(problem);	      EstimationProblem    problem    =    Ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	14	None	replace
34	[BUG]  [BUGGY]  updateJacobianEvaluations(true);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  updateJacobianEvaluations(true);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJacobianEvaluations(true);	  updateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
35	[BUG]  [BUGGY]  UpdateJacobianEvaluations();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  UpdateJacobianEvaluations();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations();	  updateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
36	[BUG]  [BUGGY]  updateJavabianEvaluations();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  updateJavabianEvaluations();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJavabianEvaluations();	  updateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
37	[BUG]  [BUGGY]  checkSquare(true);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquare(true);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(true);	  checkSquare();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
38	[BUG]  [BUGGY]  checkSquare(false);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquare(false);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false);	  checkSquare();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
39	[BUG]  [BUGGY]  checkSquare(problem.getSquare());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquare(problem.getSquare());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquare());	  checkSquare();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
40	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj);	      EstimationProblem    problem    =    ime.getStandardError();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	8	None	replace
41	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(),  parameters);	      EstimationProblem    problem    =    ime.getStandardError();    	non-compiled	[CE]  ';'  expected	8	None	replace
42	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError()  +  1;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardError()  +  1;  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError()  +  1;	      EstimationProblem    problem    =    ime.getStandardError();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	8	None	replace
43	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	        final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	add
44	[BUG]  [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	        final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	add
45	[BUG]  [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	        final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));	  	non-compiled	[CE]  	4	None	add
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	        ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	add
47	[BUG]  [BUGGY]      ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	        ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	add
48	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	        final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	add
49	[BUG]  [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	        final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	add
50	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  problem.getImmediateParentPointer();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problem.getImmediateParentPointer();	      InvalidMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
51	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  parameters.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  parameters.getImmediateParentPointer();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  parameters.getImmediateParentPointer();	      InvalidMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
52	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.ime.getImmediateParentPointer();  [CE]  cannot  find  symbol  ime  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  this.ime.getImmediateParentPointer();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.ime.getImmediateParentPointer();	      InvalidMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol  ime	20	None	replace
53	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  parameter.getImmediateParentPointer();  [CE]  cannot  find  symbol  parameter  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  parameter.getImmediateParentPointer();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  parameter.getImmediateParentPointer();	      InvalidMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol  parameter	20	None	replace
54	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters);	      EstimationProblem    problem    =    ime.getStandardMatrix();    	non-compiled	[CE]  ';'  expected	9	None	replace
55	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj);	      EstimationProblem    problem    =    ime.getStandardMatrix();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	9	None	replace
56	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(null);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(null);	      EstimationProblem    problem    =    ime.getStandardMatrix();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	9	None	replace
57	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	10	None	replace
58	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  rows);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  rows);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	10	None	replace
59	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	10	None	replace
60	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	10	None	replace
61	[BUG]  [BUGGY]  UpdateMeasures();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  UpdateMeasures();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateMeasures();	  updateMeasures();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
62	[BUG]  [BUGGY]  ensureMeasures();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ensureMeasures();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ensureMeasures();	  updateMeasures();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
63	[BUG]  [BUGGY]  checkSquares(true);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquares(true);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(true);	  checkSquares();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
64	[BUG]  [BUGGY]  checkSquares(false);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquares(false);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(false);	  checkSquares();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
65	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null);	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
66	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: "  +  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: "  +  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: "  +  parameters);	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
67	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: ");	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
68	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(null);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexException(null);	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
69	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(problem);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(problem);	      EstimationProblem    problem    =    ime.getStandardMatrix();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	9	None	replace
70	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare);	      EstimationProblem    problem    =    ime.getStandardMatrix();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	9	None	replace
71	[BUG]  [BUGGY]  MutableMeasurement  problem  =  updateMeasurements();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  MutableMeasurement  problem  =  updateMeasurements();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  updateMeasurements();	  updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
72	[BUG]  [BUGGY]  MutableMeasurement  problem  =  ime.getMeasurements();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  MutableMeasurement  problem  =  ime.getMeasurements();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  ime.getMeasurements();	  updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
73	[BUG]  [BUGGY]  checkMeasures();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkMeasures();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkMeasures();	  updateMeasures();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
74	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare);	      EstimationProblem    problem    =    ime.getStandardProblem();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	15	None	replace
75	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds();  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds();	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	6	None	replace
76	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  residuals;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  residuals;  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  residuals;	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	6	None	replace
77	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  parameter.getInvalidMatrixException();  [CE]  cannot  find  symbol  parameter  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  parameter.getInvalidMatrixException();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  parameter.getInvalidMatrixException();	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  parameter	17	None	replace
78	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	10	None	replace
79	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results);  [CE]  cannot  find  symbol  results  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results);	      	non-compiled	[CE]  cannot  find  symbol  results	5	None	replace
80	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length);  [CE]  cannot  find  symbol  results  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length);	      	non-compiled	[CE]  cannot  find  symbol  results	5	None	replace
81	[BUG]  [BUGGY]  updateJacobianEvaluations(false);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  updateJacobianEvaluations(false);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJacobianEvaluations(false);	  updateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
82	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(null);	      EstimationProblem    problem    =    ime.getStandardError();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	8	None	replace
83	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings();  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardWarnings();	      EstimationProblem    problem    =    ime.getStandardError();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	8	None	replace
84	[BUG]  [BUGGY]      ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result);  [CE]  cannot  find  symbol  result  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	        ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result);	  	non-compiled	[CE]  cannot  find  symbol  result	4	None	add
85	[BUG]  [BUGGY]  Arrays.sort(this.results,  null);  [CE]  cannot  find  symbol  results  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Arrays.sort(this.results,  null);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  null);	      Arrays.sort(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
86	[BUG]  [BUGGY]  Arrays.sort(this.results,  this.rawCostEval);  [CE]  cannot  find  symbol  results  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Arrays.sort(this.results,  this.rawCostEval);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this.rawCostEval);	      Arrays.sort(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
87	[BUG]  [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR ");  [CE]  cannot  find  symbol  logger  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR ");  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.warning( "JSC_INTERNAL_ERROR ");	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  logger	16	None	replace
88	[BUG]  [BUGGY]  logger.log(Level.WARNING, "Invalid  estimate ");  [CE]  cannot  find  symbol  Level  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  logger.log(Level.WARNING, "Invalid  estimate ");  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING, "Invalid  estimate ");	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	16	None	replace
89	[BUG]  [BUGGY]  checkSquares(problem.getSquares());  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquares(problem.getSquares());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(problem.getSquares());	  checkSquares();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
90	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance();  [CE]  cannot  find  symbol  ImeUtil  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance();	      InvalidMatrixException    ime    =    Ime.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImeUtil	18	None	replace
91	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(problem);  [CE]  cannot  find  symbol  ImeUtil  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(problem);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(problem);	      InvalidMatrixException    ime    =    Ime.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImeUtil	18	None	replace
92	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results);	      InvalidMatrixException    ime    =    Ime.getInstance();    	non-compiled	[CE]  cannot  find  symbol  results	18	None	replace
93	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.results);	      EstimationProblem    problem    =    Ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	14	None	replace
94	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(null);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(null);	      EstimationProblem    problem    =    Ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	14	None	replace
95	[BUG]  [BUGGY]  checkSquare(problem);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquare(problem);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem);	  checkSquare();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
96	[BUG]  [BUGGY]  checkSquare(problem.getSquares());  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  checkSquare(problem.getSquares());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquares());	  checkSquare();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
97	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problems.getImmediateParentPointer();  [CE]  cannot  find  symbol  problems  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  problems.getImmediateParentPointer();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problems.getImmediateParentPointer();	      InvalidMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol  problems	20	None	replace
98	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  ime.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ImerialMatrixException  ime  =  ime.getImmediateParentPointer();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  ime.getImmediateParentPointer();	      InvalidMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
99	[BUG]  [BUGGY]  MutableMeasurement  problem  =  getMeasurements();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  MutableMeasurement  problem  =  getMeasurements();  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  getMeasurements();	  updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
100	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	replace
101	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	replace
102	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	replace
103	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	replace
104	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getName());  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getName());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getName());	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
105	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations);	      EstimationProblem    problem    =    ime.getStandardMatrix();    	non-compiled	[CE]  ';'  expected	9	None	replace
106	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this);	      EstimationProblem    problem    =    Ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	14	None	replace
107	[BUG]  [BUGGY]      ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getName());  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]      ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getName());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	        ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getName());	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
108	[BUG]  [BUGGY]  reportInvalidMatrixException( " ");  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  reportInvalidMatrixException( " ");  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	reportInvalidMatrixException( " ");	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
109	[BUG]  [BUGGY]  logger.log(Level.WARNING, "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());  [CE]  cannot  find  symbol  Level  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  logger.log(Level.WARNING, "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING, "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	16	None	replace
110	[BUG]  [BUGGY]  logger.log(Level.WARNING, "Unable  to  instantiate  parameter: "  +  problem.getName());  [CE]  cannot  find  symbol  Level  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  logger.log(Level.WARNING, "Unable  to  instantiate  parameter: "  +  problem.getName());  [BUGGY]      final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING, "Unable  to  instantiate  parameter: "  +  problem.getName());	  ime.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	16	None	replace
111	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " "));  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " "));  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " "));	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  	7	None	replace
112	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem. ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem. ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem. ");	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
113	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj);	      EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	7	None	replace
114	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	10	None	replace
115	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	10	None	replace
116	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this);  [CE]  cannot  find  symbol  Ime  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  Ime.getInstance(this);	      InvalidMatrixException    ime    =    Ime.getInstance();    	non-compiled	[CE]  cannot  find  symbol  Ime	18	None	replace
117	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  costEvaluations);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  costEvaluations);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  costEvaluations);	      EstimationProblem    problem    =    ime.getMatrixOutOfBounds();    	non-compiled	[CE]  ';'  expected	6	None	replace
118	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problems.getInvalidMatrixException();  [CE]  cannot  find  symbol  problems  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  problems.getInvalidMatrixException();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problems.getInvalidMatrixException();	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  problems	17	None	replace
119	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  error.getInvalidMatrixException();  [CE]  cannot  find  symbol  error  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  error.getInvalidMatrixException();  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  error.getInvalidMatrixException();	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  error	17	None	replace
120	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problems.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  problems  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  InvalidMatrixException  ime  =  problems.getInvalidMatrixException( " ");  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problems.getInvalidMatrixException( " ");	      InvalidMatrixException    ime    =    ime.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  problems	19	None	replace
121	[BUG]  [BUGGY]  Arrays.sort(this.results,  this.results);  [CE]  cannot  find  symbol  results  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  Arrays.sort(this.results,  this.results);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this.results);	      Arrays.sort(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	13	None	replace
122	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(message);	      EstimationProblem    problem    =    ime.getStandardError();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	8	None	replace
123	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(problem);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(problem);	      EstimationProblem    problem    =    ime.getStandardProblem();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	15	None	replace
124	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    throws  EstimationException  {      [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this);  [BUGGY]    updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this);	      EstimationProblem    problem    =    ime.getStandardProblem();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	15	None	replace
