bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  jTj);	  EstimationProblem    problem    =    ime.getStandardProblem(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	74	None	replace
2	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  cost);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  cost);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  cost);	  EstimationProblem    problem    =    ime.getStandardProblem(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	74	None	replace
3	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  parameters);	  EstimationProblem    problem    =    ime.getStandardProblem(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	74	None	replace
4	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  this.criterion);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  this.criterion);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  this.criterion);	  EstimationProblem    problem    =    ime.getStandardProblem(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	74	None	replace
5	[BUG]  [BUGGY]  checkSquare(problem.getSquare(),  parameters);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem.getSquare(),  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquare(),  parameters);	  checkSquare(problem.getSquare());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
6	[BUG]  [BUGGY]  checkSquare(problem,  parameters.getSquare());  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem,  parameters.getSquare());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem,  parameters.getSquare());	  checkSquare(problem.getSquare());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
7	[BUG]  [BUGGY]  checkSquare(problem.getSquare(),  residuals);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem.getSquare(),  residuals);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquare(),  residuals);	  checkSquare(problem.getSquare());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
8	[BUG]  [BUGGY]  checkSquare(problem,  problem.getSquare());  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem,  problem.getSquare());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem,  problem.getSquare());	  checkSquare(problem.getSquare());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
9	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getInstance(this);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getInstance(this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getInstance(this);	  EstimationProblem    problem    =    ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	31	None	replace
10	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getInstance(variance);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getInstance(variance);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getInstance(variance);	  EstimationProblem    problem    =    ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	31	None	replace
11	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getInstance(this.variances);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getInstance(this.variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getInstance(this.variances);	  EstimationProblem    problem    =    ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	31	None	replace
12	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  parameters);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  parameters);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
13	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  estimates);  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  estimates);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  estimates);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
14	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.variances);  [CE]  cannot  find  symbol  variances  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.variances);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  variances	92	None	replace
15	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  jTj);  [CE]  cannot  find  symbol  results  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  jTj);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
16	[BUG]  [BUGGY]  Arrays.sort(this.rawCostEval,  this.results);  [CE]  cannot  find  symbol  rawCostEval  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.rawCostEval,  this.results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.rawCostEval,  this.results);	  Arrays.sort(this.results,    this.rawCostEval);    	non-compiled	[CE]  cannot  find  symbol  rawCostEval	86	None	replace
17	[BUG]  [BUGGY]  Arrays.sort(this.rawCostEval,  results);  [CE]  cannot  find  symbol  rawCostEval  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.rawCostEval,  results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.rawCostEval,  results);	  Arrays.sort(this.results,    this.rawCostEval);    	non-compiled	[CE]  cannot  find  symbol  rawCostEval	86	None	replace
18	[BUG]  [BUGGY]  Arrays.sort(this.rawCostEval,  parameters);  [CE]  cannot  find  symbol  rawCostEval  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.rawCostEval,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.rawCostEval,  parameters);	  Arrays.sort(this.results,    this.rawCostEval);    	non-compiled	[CE]  cannot  find  symbol  rawCostEval	86	None	replace
19	[BUG]  [BUGGY]  Arrays.sort(this.rawCostEval,  residuals);  [CE]  cannot  find  symbol  rawCostEval  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.rawCostEval,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.rawCostEval,  residuals);	  Arrays.sort(this.results,    this.rawCostEval);    	non-compiled	[CE]  cannot  find  symbol  rawCostEval	86	None	replace
20	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variables: ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variables: ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variables: ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    constants:   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	67	None	replace
21	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variable: ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variable: ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variable: ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    constants:   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	67	None	replace
22	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: ",  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: ",  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  constants: ",  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    constants:   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	67	None	replace
23	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	28	None	replace
24	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. "  +  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. "  +  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. "  +  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	28	None	replace
25	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException(jTj);  [CE]  cannot  find  symbol  jTj  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException(jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.results.getInvalidMatrixException(jTj);	  InvalidMatrixException    ime    =    this.results.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  jTj	16	None	replace
26	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException( " ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.results.getInvalidMatrixException( " ");	  InvalidMatrixException    ime    =    this.results.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  results	16	None	replace
27	[BUG]  [BUGGY]  ImerialsException  ime  =  this.results.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialsException  ime  =  this.results.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialsException  ime  =  this.results.getInvalidMatrixException();	  InvalidMatrixException    ime    =    this.results.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
28	[BUG]  [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate: "  +  jTj);  [CE]  cannot  find  symbol  Level  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate: "  +  jTj);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,   "Invalid  estimate: "  +  jTj);	  logger.log(Level.WARNING,   "Invalid    estimate   ");    	non-compiled	[CE]  cannot  find  symbol  Level	88	None	replace
29	[BUG]  [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate ",  jTj);  [CE]  cannot  find  symbol  Level  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate ",  jTj);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,   "Invalid  estimate ",  jTj);	  logger.log(Level.WARNING,   "Invalid    estimate   ");    	non-compiled	[CE]  cannot  find  symbol  Level	88	None	replace
30	[BUG]  [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate: "  +  parameters);  [CE]  cannot  find  symbol  Level  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,   "Invalid  estimate: "  +  parameters);	  logger.log(Level.WARNING,   "Invalid    estimate   ");    	non-compiled	[CE]  cannot  find  symbol  Level	88	None	replace
31	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variances,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variances,  rows);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variances,  rows);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	115	None	replace
32	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	115	None	replace
33	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variances,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variances,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variances,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	115	None	replace
34	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  rows,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  rows,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  rows,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	115	None	replace
35	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  costEvaluations);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  costEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters);    	non-compiled	[CE]  ';'  expected	10	None	replace
36	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  jTj);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters);    	non-compiled	[CE]  ';'  expected	10	None	replace
37	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  null);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  null);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
39	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: ");  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  all  parameters. ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  all  parameters. ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
41	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  all  parameters. ");  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  all  parameters. ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  all  parameters. ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
42	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameters. ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameters. ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
43	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameters. ");  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameters. ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameters. ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
44	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    an    error:   "    +    jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	113	None	replace
45	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  residuals);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    an    error:   "    +    jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	113	None	replace
46	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    an    error:   "    +    jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	113	None	replace
47	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  max);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  max);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: "  +  jTj,  max);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    an    error:   "    +    jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	113	None	replace
48	[BUG]  [BUGGY]  checkSquare(problem.getSquares(),  parameters);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem.getSquares(),  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquares(),  parameters);	  checkSquare(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
49	[BUG]  [BUGGY]  checkSquare(problem,  parameters.getSquares());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem,  parameters.getSquares());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem,  parameters.getSquares());	  checkSquare(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
50	[BUG]  [BUGGY]  checkSquare(problem.getSquares(),  variables);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem.getSquares(),  variables);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquares(),  variables);	  checkSquare(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
51	[BUG]  [BUGGY]  checkSquare(problem,  problem.getSquares());  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem,  problem.getSquares());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem,  problem.getSquares());	  checkSquare(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
52	[BUG]  [BUGGY]  Bug.printStackTrace(this);  [CE]  cannot  find  symbol  Bug  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.printStackTrace(this);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.printStackTrace(this);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Bug	17	None	replace
53	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem,  ime.getName());  [CE]  cannot  find  symbol  ime  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem,  ime.getName());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem,  ime.getName());	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol  ime	104	None	replace
54	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getMatrix());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getMatrix());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getMatrix());	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
55	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());	  	non-compiled	[CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)	102	None	add
56	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());	  	non-compiled	[CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)	102	None	add
57	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getRows());  [CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getRows());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getRows());	  	non-compiled	[CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)	102	None	add
58	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
59	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getMeasurements());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
60	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(problem,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(problem,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(problem,  parameters);	  EstimationProblem    problem    =    Ime.getInstance(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	33	None	replace
61	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(variances,  problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(variances,  problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(variances,  problem);	  EstimationProblem    problem    =    Ime.getInstance(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	33	None	replace
62	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(results);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(results);	  EstimationProblem    problem    =    Ime.getInstance(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	33	None	replace
63	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.results.getImmediateParentPointer();  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.results.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.results.getImmediateParentPointer();	  InvalidMatrixException    ime    =    problems.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol  results	97	None	replace
64	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  parameters: "  +  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  parameters: "  +  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  parameters: "  +  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    constants:   "    +    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	66	None	replace
65	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variables: "  +  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variables: "  +  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  variables: "  +  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    constants:   "    +    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	66	None	replace
66	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	46	None	add
67	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ExitMatrixException  ex  =  new  ExitMatrixException();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ExitMatrixException  ex  =  new  ExitMatrixException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ExitMatrixException  ex  =  new  ExitMatrixException();	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
68	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ExitStatisticsException  ex  =  new  ExitStatisticsException();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ExitStatisticsException  ex  =  new  ExitStatisticsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ExitStatisticsException  ex  =  new  ExitStatisticsException();	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
69	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ExitException  ex  =  new  ArrayIndexOutOfBoundsException();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ExitException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ExitException  ex  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
70	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexInOfBoundsException();  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexInOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexInOfBoundsException();	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	46	None	add
71	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(problem,  parameters);  [CE]  cannot  find  symbol  ImeUtil  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(problem,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(problem,  parameters);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(problem);    	non-compiled	[CE]  cannot  find  symbol  ImeUtil	91	None	replace
72	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(results);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(results);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(problem);    	non-compiled	[CE]  cannot  find  symbol  results	91	None	replace
73	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  problem.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  problem.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  problem.getInvalidMatrixException();	  InvalidMatrixException    ime    =    problem.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
74	[BUG]  [BUGGY]  ImerialsException  ime  =  problem.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialsException  ime  =  problem.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialsException  ime  =  problem.getInvalidMatrixException();	  InvalidMatrixException    ime    =    problem.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
75	[BUG]  [BUGGY]  ImerializationException  ime  =  problem.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerializationException  ime  =  problem.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerializationException  ime  =  problem.getInvalidMatrixException();	  InvalidMatrixException    ime    =    problem.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
76	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  /  1;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  /  1;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  /  1;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds()    +    1;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	11	None	replace
77	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  max  +  1;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  max  +  1;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  max  +  1;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds()    +    1;    	non-compiled	[CE]  ';'  expected	11	None	replace
78	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results,  parameters);  [CE]  cannot  find  symbol  results  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results,  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results,  parameters);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results);    	non-compiled	[CE]  cannot  find  symbol  results	79	None	replace
79	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(reason);  [CE]  cannot  find  symbol  reason  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(reason);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(reason);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results);    	non-compiled	[CE]  cannot  find  symbol  reason	79	None	replace
80	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj,  max);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj,  max);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj,  max);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    max);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	59	None	replace
81	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  max);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  max);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  max);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    max);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	59	None	replace
82	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    max);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	59	None	replace
83	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    max);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	59	None	replace
84	[BUG]  [BUGGY]  ImetarMatrixException  ime  =  problem.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImetarMatrixException  ime  =  problem.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImetarMatrixException  ime  =  problem.getInvalidMatrixException();	  InvalidMatrixException    ime    =    parameter.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
85	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  Problem.getInvalidMatrixException();  [CE]  cannot  find  symbol  Problem  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  Problem.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  Problem.getInvalidMatrixException();	  InvalidMatrixException    ime    =    parameter.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  Problem	77	None	replace
86	[BUG]  [BUGGY]  ensureMeasures(true);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ensureMeasures(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ensureMeasures(true);	  ensureMeasures();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
87	[BUG]  [BUGGY]  ensureMeasurements();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ensureMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ensureMeasurements();	  ensureMeasures();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
88	[BUG]  [BUGGY]  EnsureMeasures();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EnsureMeasures();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EnsureMeasures();	  ensureMeasures();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
89	[BUG]  [BUGGY]  updateJacobianEvaluations(false,  parameters);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  updateJacobianEvaluations(false,  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJacobianEvaluations(false,  parameters);	  updateJacobianEvaluations(false);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
90	[BUG]  [BUGGY]  updateJacobianEvaluations(true,  false);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  updateJacobianEvaluations(true,  false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJacobianEvaluations(true,  false);	  updateJacobianEvaluations(false);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
91	[BUG]  [BUGGY]  updateJacobianEvaluations(false,  null);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  updateJacobianEvaluations(false,  null);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJacobianEvaluations(false,  null);	  updateJacobianEvaluations(false);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
92	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobian;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobian;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobian;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    residuals;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	76	None	replace
93	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobianEvaluations;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobianEvaluations;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobianEvaluations;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    residuals;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	76	None	replace
94	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  dataArea,  residuals;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  dataArea,  residuals;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  dataArea,  residuals;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    residuals;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	76	None	replace
95	[BUG]  [BUGGY]  ImmediateParentPointer  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImmediateParentPointer  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImmediateParentPointer  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    problem.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
96	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    problem.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
97	[BUG]  [BUGGY]  ImerialsException  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialsException  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialsException  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    problem.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
98	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.mean.getImmediateParentPointer();  [CE]  cannot  find  symbol  mean  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.mean.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.mean.getImmediateParentPointer();	  InvalidMatrixException    ime    =    this.ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol  mean	52	None	replace
99	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.message.getImmediateParentPointer();  [CE]  cannot  find  symbol  message  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.message.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.message.getImmediateParentPointer();	  InvalidMatrixException    ime    =    this.ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol  message	52	None	replace
100	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  null);	  EstimationProblem    problem    =    ime.getStandardProblem(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	2	None	replace
101	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(null,  residuals);	  EstimationProblem    problem    =    ime.getStandardProblem(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	2	None	replace
102	[BUG]  [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR ",  jTj);  [CE]  cannot  find  symbol  jTj  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR ",  jTj);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.warning( "JSC_INTERNAL_ERROR ",  jTj);	  logger.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  cannot  find  symbol  jTj	87	None	replace
103	[BUG]  [BUGGY]  logger.info( "JSC_INTERNAL_ERROR ");  [CE]  cannot  find  symbol  logger  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.info( "JSC_INTERNAL_ERROR ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.info( "JSC_INTERNAL_ERROR ");	  logger.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  cannot  find  symbol  logger	87	None	replace
104	[BUG]  [BUGGY]  logger.error( "JSC_INTERNAL_ERROR ");  [CE]  cannot  find  symbol  logger  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.error( "JSC_INTERNAL_ERROR ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.error( "JSC_INTERNAL_ERROR ");	  logger.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  cannot  find  symbol  logger	87	None	replace
105	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException();	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	1	replace
106	[BUG]  [BUGGY]  final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException();	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	1	replace
107	[BUG]  [BUGGY]  final  IOException  ex  =  new  IOException();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  IOException  ex  =  new  IOException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  IOException  ex  =  new  IOException();	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
108	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	1	replace
109	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	1	replace
110	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	1	replace
111	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	1	replace
112	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problem,  parameters.getInvalidMatrixException();  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  problem,  parameters.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problem,  parameters.getInvalidMatrixException();	  InvalidMatrixException    ime    =    parameters.getInvalidMatrixException();    	non-compiled	[CE]  ';'  expected	15	None	replace
113	[BUG]  [BUGGY]  checkSquares(problem.getSquares(),  parameters);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(problem.getSquares(),  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(problem.getSquares(),  parameters);	  checkSquares(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
114	[BUG]  [BUGGY]  checkSquares(problem,  parameters.getSquares());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(problem,  parameters.getSquares());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(problem,  parameters.getSquares());	  checkSquares(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
115	[BUG]  [BUGGY]  checkSquares(problem.getSquares(),  variables);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(problem.getSquares(),  variables);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(problem.getSquares(),  variables);	  checkSquares(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
116	[BUG]  [BUGGY]  checkSquares(variances.getSquares());  [CE]  cannot  find  symbol  variances  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(variances.getSquares());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(variances.getSquares());	  checkSquares(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol  variances	89	None	replace
117	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  costEvaluations;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  costEvaluations;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  costEvaluations;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	12	None	replace
118	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  error);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  error);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters;    	non-compiled	[CE]  ';'  expected	12	None	replace
119	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  null;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  null;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  null;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
120	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(jTj,    rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	58	None	replace
121	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  dataArea,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  dataArea,  rows);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  dataArea,  rows);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(jTj,    rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	58	None	replace
122	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  cols);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  cols);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  cols);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(jTj,    rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	58	None	replace
123	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  columns);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  columns);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  columns);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(jTj,    rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	58	None	replace
124	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	43	None	add
125	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  Final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  Final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    Final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  ';'  expected	43	None	add
126	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  int  ArrayIndexOutOfBoundsException  ex  =  new  int[][]  {  ex  }  ;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  int  ArrayIndexOutOfBoundsException  ex  =  new  int[][]  {  ex  }  ;  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    final  int  ArrayIndexOutOfBoundsException  ex  =  new  int[][]  {  ex  }  ;	  	non-compiled	[CE]  ';'  expected	43	None	add
127	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  int  ArrayIndexOutOfBoundsException  ex  =  new  int[1];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  int  ArrayIndexOutOfBoundsException  ex  =  new  int[1];  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    final  int  ArrayIndexOutOfBoundsException  ex  =  new  int[1];	  	non-compiled	[CE]  ';'  expected	43	None	add
128	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  costEvaluations);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardProblem(),    parameters);    	non-compiled	[CE]  ';'  expected	3	None	replace
129	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  jTj);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  jTj);	  EstimationProblem    problem    =    ime.getStandardProblem(),    parameters);    	non-compiled	[CE]  ';'  expected	3	None	replace
130	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  null);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  null);	  EstimationProblem    problem    =    ime.getStandardProblem(),    parameters);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
131	[BUG]  [BUGGY]  Arrays.sort(this.results,  result);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  result);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  result);	  Arrays.sort(this.results,    results);    	non-compiled	[CE]  cannot  find  symbol  results	24	None	replace
132	[BUG]  [BUGGY]  Arrays.sort(this.results,  sum);  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  sum);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  sum);	  Arrays.sort(this.results,    results);    	non-compiled	[CE]  cannot  find  symbol  results	24	None	replace
133	[BUG]  [BUGGY]  UpdateJacobianEvaluations(true);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations(true);	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
134	[BUG]  [BUGGY]  UpdateJacobianEvaluations(false);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations(false);	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
135	[BUG]  [BUGGY]  UpdateJacobianEvaluations(this.results);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations(this.results);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations(this.results);	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol  results	35	None	replace
136	[BUG]  [BUGGY]  updateJavabianEvaluations(true);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  updateJavabianEvaluations(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJavabianEvaluations(true);	  updateJavabianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
137	[BUG]  [BUGGY]  UpdateJavabianEvaluations();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJavabianEvaluations();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJavabianEvaluations();	  updateJavabianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
138	[BUG]  [BUGGY]  updateJavabianEvaluations(false);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  updateJavabianEvaluations(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJavabianEvaluations(false);	  updateJavabianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
139	[BUG]  [BUGGY]  updateJacobianEvaluations(false,  residuals);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  updateJacobianEvaluations(false,  residuals);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJacobianEvaluations(false,  residuals);	  updateJacobianEvaluations(true);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
140	[BUG]  [BUGGY]  logger.log(Level.WARNING,  problem.getName()  + ": "  +  problem.getName());  [CE]  cannot  find  symbol  Level  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,  problem.getName()  + ": "  +  problem.getName());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,  problem.getName()  + ": "  +  problem.getName());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol  Level	110	None	replace
141	[BUG]  [BUGGY]  logger.log(Level.WARNING,  error,   "Unable  to  instantiate  parameter: "  +  problem.getName());  [CE]  cannot  find  symbol  Level  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,  error,   "Unable  to  instantiate  parameter: "  +  problem.getName());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,  error,   "Unable  to  instantiate  parameter: "  +  problem.getName());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol  Level	110	None	replace
142	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(null,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(null,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(null,  parameters);	  EstimationProblem    problem    =    Ime.getInstance(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	94	None	replace
143	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(null,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(null,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexException(null,  residuals);	  EstimationProblem    problem    =    ime.getMatrixIndexException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	68	None	replace
144	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexException(jTj);	  EstimationProblem    problem    =    ime.getMatrixIndexException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	68	None	replace
145	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(this);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexException(this);	  EstimationProblem    problem    =    ime.getMatrixIndexException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	68	None	replace
146	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(null,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(null,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexException(null,  parameters);	  EstimationProblem    problem    =    ime.getMatrixIndexException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	68	None	replace
147	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Error    reading    variable    residuals.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	29	None	replace
148	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Error    reading    variable    residuals.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	29	None	replace
149	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  variables);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  variables);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  variables);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Error    reading    variable    residuals.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	29	None	replace
150	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  sum);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  sum);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  sum);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    cols);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	57	None	replace
151	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    cols);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	57	None	replace
152	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  costEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    cols);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	57	None	replace
153	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length,  parameters.length);  [CE]  cannot  find  symbol  results  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length,  parameters.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length,  parameters.length);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  results	80	None	replace
154	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results,  parameters.length);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results,  parameters.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results,  parameters.length);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  results	80	None	replace
155	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length  +  1);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length  +  1);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length  +  1);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  results	80	None	replace
156	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxCostEval);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxCostEval);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxCostEval);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    costEvaluations);    	non-compiled	[CE]  ';'  expected	117	None	replace
157	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobianEvaluations);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobianEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  jacobianEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    costEvaluations);    	non-compiled	[CE]  ';'  expected	117	None	replace
158	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxEvaluations);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    costEvaluations);    	non-compiled	[CE]  ';'  expected	117	None	replace
159	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(message,  parameters);	  EstimationProblem    problem    =    ime.getStandardError(message);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	122	None	replace
160	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(message,  jTj);	  EstimationProblem    problem    =    ime.getStandardError(message);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	122	None	replace
161	[BUG]  [BUGGY]  Arrays.sort(this.results,  parameters,  cost);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  parameters,  cost);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  parameters,  cost);	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
162	[BUG]  [BUGGY]  Arrays.sort(this.results,  problems);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  problems);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  problems);	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
163	[BUG]  [BUGGY]  Arrays.sort(this.results,  errors);  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  errors);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  errors);	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
164	[BUG]  [BUGGY]  Arrays.sort(this.results,  parameters,  costEvaluations);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  parameters,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  parameters,  costEvaluations);	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
165	[BUG]  [BUGGY]  Arrays.sort(this.results,  parameters,  null);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  parameters,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  parameters,  null);	  Arrays.sort(this.results,    null);    	non-compiled	[CE]  cannot  find  symbol  results	85	None	replace
166	[BUG]  [BUGGY]  Arrays.sort(this.results,  this);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this);	  Arrays.sort(this.results,    null);    	non-compiled	[CE]  cannot  find  symbol  results	85	None	replace
167	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  1);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  1);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  1);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    0);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	78	None	replace
168	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0,  rows);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0,  rows);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    0);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	78	None	replace
169	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0,  cols);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0,  cols);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  0,  cols);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    0);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	78	None	replace
170	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(problem,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(problem,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(problem,  parameters);	  EstimationProblem    problem    =    ime.getStandardMatrix(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	69	None	replace
171	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(variance);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(variance);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(variance);	  EstimationProblem    problem    =    ime.getStandardMatrix(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	69	None	replace
172	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(variances);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(variances);	  EstimationProblem    problem    =    ime.getStandardMatrix(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	69	None	replace
173	[BUG]  [BUGGY]  Arrays.sort(this.parameters,  parameters);  [CE]  no  suitable  method  found  for  sort(EstimatedParameter[],EstimatedParameter[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.parameters,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.parameters,  parameters);	  Arrays.sort(this.results,    this.parameters);    	non-compiled	[CE]  no  suitable  method  found  for  sort(EstimatedParameter[],EstimatedParameter[])	26	None	replace
174	[BUG]  [BUGGY]  Arrays.sort(this.parameters,  this.results);  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.parameters,  this.results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.parameters,  this.results);	  Arrays.sort(this.results,    this.parameters);    	non-compiled	[CE]  cannot  find  symbol  results	26	None	replace
175	[BUG]  [BUGGY]  Arrays.sort(this.parameters,  results);  [CE]  cannot  find  symbol  results  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.parameters,  results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.parameters,  results);	  Arrays.sort(this.results,    this.parameters);    	non-compiled	[CE]  cannot  find  symbol  results	26	None	replace
176	[BUG]  [BUGGY]  Arrays.sort(this.parameters,  residuals);  [CE]  no  suitable  method  found  for  sort(EstimatedParameter[],double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.parameters,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.parameters,  residuals);	  Arrays.sort(this.results,    this.parameters);    	non-compiled	[CE]  no  suitable  method  found  for  sort(EstimatedParameter[],double[])	26	None	replace
177	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.results,  parameters);	  EstimationProblem    problem    =    Ime.getInstance(this.results);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	93	None	replace
178	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.results,  jTj);	  EstimationProblem    problem    =    Ime.getInstance(this.results);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	93	None	replace
179	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  error);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.results,  error);	  EstimationProblem    problem    =    Ime.getInstance(this.results);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	93	None	replace
180	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  errorResults);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  errorResults);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.results,  errorResults);	  EstimationProblem    problem    =    Ime.getInstance(this.results);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	93	None	replace
181	[BUG]  [BUGGY]  MutableMeasurement  problem  =  this.updateMeasurements();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  this.updateMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  this.updateMeasurements();	  MutableMeasurement    problem    =    updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
182	[BUG]  [BUGGY]  MutableMeasurement  problem  =  ime.updateMeasurements();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  ime.updateMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  ime.updateMeasurements();	  MutableMeasurement    problem    =    updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
183	[BUG]  [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(),  parameters);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(),  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  updateMeasurements(),  parameters);	  MutableMeasurement    problem    =    updateMeasurements();    	non-compiled	[CE]  ';'  expected	71	None	replace
184	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  jTj);	  EstimationProblem    problem    =    ime.getStandardMatrix(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	70	None	replace
185	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  cost);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  cost);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  cost);	  EstimationProblem    problem    =    ime.getStandardMatrix(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	70	None	replace
186	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  parameters);	  EstimationProblem    problem    =    ime.getStandardMatrix(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	70	None	replace
187	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  this.criterion);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  this.criterion);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  this.criterion);	  EstimationProblem    problem    =    ime.getStandardMatrix(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	70	None	replace
188	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.mean.getInvalidMatrixException();  [CE]  cannot  find  symbol  mean  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.mean.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.mean.getInvalidMatrixException();	  InvalidMatrixException    ime    =    this.ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  mean	14	None	replace
189	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.message.getInvalidMatrixException();  [CE]  cannot  find  symbol  message  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.message.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.message.getInvalidMatrixException();	  InvalidMatrixException    ime    =    this.ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  message	14	None	replace
190	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameter);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	30	None	replace
191	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameter);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	30	None	replace
192	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  parameters);	  EstimationProblem    problem    =    ime.getStandardMatrix(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	55	None	replace
193	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  residuals);	  EstimationProblem    problem    =    ime.getStandardMatrix(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	55	None	replace
194	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  jTj.intValue());  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  jTj.intValue());  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  jTj.intValue());	  EstimationProblem    problem    =    ime.getStandardMatrix(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	55	None	replace
195	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  variables);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  variables);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  variables);	  EstimationProblem    problem    =    ime.getStandardMatrix(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	55	None	replace
196	[BUG]  [BUGGY]  Arrays.sort(this.results,  cols);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  cols);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  cols);	  Arrays.sort(this.results,    this.results);    	non-compiled	[CE]  cannot  find  symbol  results	121	None	replace
197	[BUG]  [BUGGY]  Arrays.sort(this.results,  this.results,  parameters);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  this.results,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this.results,  parameters);	  Arrays.sort(this.results,    this.results);    	non-compiled	[CE]  cannot  find  symbol  results	121	None	replace
198	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  parameters);  [CE]  cannot  find  symbol  Ime  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  Ime.getInstance(this,  parameters);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  Ime	116	None	replace
199	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSet.getInstance(this);  [CE]  cannot  find  symbol  ImmutableSet  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableSet.getInstance(this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSet.getInstance(this);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  ImmutableSet	116	None	replace
200	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(this);  [CE]  cannot  find  symbol  ImmutableValues  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableValues.getInstance(this);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  ImmutableValues	116	None	replace
201	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(this);  [CE]  cannot  find  symbol  ImmutableFormat  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableFormat.getInstance(this);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  ImmutableFormat	116	None	replace
202	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  parameters);	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
203	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.intValue());  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.intValue());  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.intValue());	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
204	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  max);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  max);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  max);	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
205	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.length);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.length);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.length);	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
206	[BUG]  [BUGGY]  ImemmediateParentPointer  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImemmediateParentPointer  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImemmediateParentPointer  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    parameter.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
207	[BUG]  [BUGGY]  ImetarMatrixException  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImetarMatrixException  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImetarMatrixException  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    parameter.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
208	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance();  [CE]  cannot  find  symbol  ImmutableSetUtil  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance();	  InvalidMatrixException    ime    =    ImmutableSet.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableSetUtil	22	None	replace
209	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(problem);  [CE]  cannot  find  symbol  ImmutableSetUtil  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(problem);	  InvalidMatrixException    ime    =    ImmutableSet.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableSetUtil	22	None	replace
210	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(results);  [CE]  cannot  find  symbol  results  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(results);	  InvalidMatrixException    ime    =    ImmutableSet.getInstance();    	non-compiled	[CE]  cannot  find  symbol  results	22	None	replace
211	[BUG]  [BUGGY]  MutableMeasurements.checkNotNull(measures);  [CE]  cannot  find  symbol  measures  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurements.checkNotNull(measures);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurements.checkNotNull(measures);	  UpdateMeasurements();    	non-compiled	[CE]  cannot  find  symbol  measures	7	None	replace
212	[BUG]  [BUGGY]  MutableMeasurements.checkNotNull(message);  [CE]  cannot  find  symbol  message  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurements.checkNotNull(message);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurements.checkNotNull(message);	  UpdateMeasurements();    	non-compiled	[CE]  cannot  find  symbol  message	7	None	replace
213	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  error: "  +  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  error: "  +  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  error: "  +  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "   "));    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	111	None	replace
214	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  error: ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  error: ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  error: ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "   "));    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	111	None	replace
215	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  error: ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "   "));    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	111	None	replace
216	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this,  parameters);	  EstimationProblem    problem    =    Ime.getInstance(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	106	None	replace
217	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this,  residuals);	  EstimationProblem    problem    =    Ime.getInstance(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	106	None	replace
218	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this,  jTj);	  EstimationProblem    problem    =    Ime.getInstance(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	106	None	replace
219	[BUG]  [BUGGY]  logger.log(Level.WARNING,  error,   "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());  [CE]  cannot  find  symbol  Level  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,  error,   "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,  error,   "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getMeasurements());    	non-compiled	[CE]  cannot  find  symbol  Level	109	None	replace
220	[BUG]  [BUGGY]  logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.getStandardMeasurements());  [CE]  cannot  find  symbol  Level  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.getStandardMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.getStandardMeasurements());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getMeasurements());    	non-compiled	[CE]  cannot  find  symbol  Level	109	None	replace
221	[BUG]  [BUGGY]  Arrays.sort(this.results,  dataArea,  parameters);  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  dataArea,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  dataArea,  parameters);	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  results	25	None	replace
222	[BUG]  [BUGGY]  Arrays.sort(dataArea,  this.results);  [CE]  cannot  find  symbol  dataArea  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(dataArea,  this.results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(dataArea,  this.results);	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  dataArea	25	None	replace
223	[BUG]  [BUGGY]  Arrays.sort(this.results,  dataset);  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  dataset);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  dataset);	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  results	25	None	replace
224	[BUG]  [BUGGY]  checkSquare(false,  parameters);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(false,  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false,  parameters);	  checkSquare(false);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
225	[BUG]  [BUGGY]  checkSquare(false,  criterion);  [CE]  cannot  find  symbol  criterion  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(false,  criterion);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false,  criterion);	  checkSquare(false);    	non-compiled	[CE]  cannot  find  symbol  criterion	38	None	replace
226	[BUG]  [BUGGY]  checkSquare(false,  residuals);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(false,  residuals);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false,  residuals);	  checkSquare(false);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
227	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstanceUTC();  [CE]  cannot  find  symbol  ImmutableFormat  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstanceUTC();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableFormat.getInstanceUTC();	  InvalidMatrixException    ime    =    ImmutableFormat.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableFormat	20	None	replace
228	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(problem);  [CE]  cannot  find  symbol  ImmutableFormat  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableFormat.getInstance(problem);	  InvalidMatrixException    ime    =    ImmutableFormat.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableFormat	20	None	replace
229	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  parameters.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  parameters.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  parameters.getImmediateParentPointer();	  ImerialMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
230	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  this.ime.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  this.ime.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  this.ime.getImmediateParentPointer();	  ImerialMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
231	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  parameter.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  parameter.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  parameter.getImmediateParentPointer();	  ImerialMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
232	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  null);	  EstimationProblem    problem    =    ime.getStandardMatrix(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	56	None	replace
233	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(null,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(null,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(null,  residuals);	  EstimationProblem    problem    =    ime.getStandardMatrix(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	56	None	replace
234	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  non-function  problem. ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  non-function  problem. ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  non-function  problem. ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    a    non-function    problem.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	112	None	replace
235	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem.  Please  check  that  the  error  is  ignored. ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem.  Please  check  that  the  error  is  ignored. ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem.  Please  check  that  the  error  is  ignored. ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    a    non-function    problem.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	112	None	replace
236	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  jTj,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	60	None	replace
237	[BUG]  [BUGGY]  Problem.printStackTrace(this);  [CE]  cannot  find  symbol  Problem  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Problem.printStackTrace(this);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Problem.printStackTrace(this);	  Problem.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Problem	18	None	replace
238	[BUG]  [BUGGY]  Problem.printStackTrace(System.err);  [CE]  cannot  find  symbol  Problem  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Problem.printStackTrace(System.err);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Problem.printStackTrace(System.err);	  Problem.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Problem	18	None	replace
239	[BUG]  [BUGGY]  Problem.printStackTrace(error);  [CE]  cannot  find  symbol  error  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Problem.printStackTrace(error);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Problem.printStackTrace(error);	  Problem.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  error	18	None	replace
240	[BUG]  [BUGGY]  reportInvalidMatrixException( " ",  ime);  [CE]  cannot  find  symbol  ime  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  reportInvalidMatrixException( " ",  ime);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	reportInvalidMatrixException( " ",  ime);	  reportInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ime	108	None	replace
241	[BUG]  [BUGGY]  reportInvalidMatrixException( " ",  jTj);  [CE]  cannot  find  symbol  jTj  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  reportInvalidMatrixException( " ",  jTj);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	reportInvalidMatrixException( " ",  jTj);	  reportInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  jTj	108	None	replace
242	[BUG]  [BUGGY]  reportInvalidMatrixException( " ".equals(problem.getMatrix()));  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  reportInvalidMatrixException( " ".equals(problem.getMatrix()));  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	reportInvalidMatrixException( " ".equals(problem.getMatrix()));	  reportInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
243	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)	100	None	add
244	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)	100	None	add
245	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ".Invalid  parameter: "  +  parameters);  [CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ".Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ".Invalid  parameter: "  +  parameters);	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)	100	None	add
246	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: ",  +  parameters);  [CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: ",  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: ",  +  parameters);	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  getCovariances(EstimationProblem)	100	None	add
247	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  variables);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  variables);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  variables);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	27	None	replace
248	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  result);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  result);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  result);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	27	None	replace
249	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError()  /  1;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError()  /  1;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError()  /  1;	  EstimationProblem    problem    =    ime.getStandardError()    +    1;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	42	None	replace
250	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  max  +  1;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  max  +  1;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(),  max  +  1;	  EstimationProblem    problem    =    ime.getStandardError()    +    1;    	non-compiled	[CE]  ';'  expected	42	None	replace
251	[BUG]  [BUGGY]  ImmediateParentPointer  ime  =  parameters.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImmediateParentPointer  ime  =  parameters.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImmediateParentPointer  ime  =  parameters.getImmediateParentPointer();	  InvalidMatrixException    ime    =    parameters.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
252	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  row);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  row);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  row);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    column);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	114	None	replace
253	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    column);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	114	None	replace
254	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    column);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	114	None	replace
255	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  0);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  0);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  0);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    column);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	114	None	replace
256	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());	  ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	103	1	replace
257	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());	  ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	103	1	replace
258	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getErrors());  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getErrors());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getErrors());	  ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
259	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getRows());  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getRows());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getRows());	  ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
260	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this,  parameters);	  EstimationProblem    problem    =    ime.getStandardProblem(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	124	None	replace
261	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this,  jTj);	  EstimationProblem    problem    =    ime.getStandardProblem(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	124	None	replace
262	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  dataArea);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  dataArea);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this,  dataArea);	  EstimationProblem    problem    =    ime.getStandardProblem(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	124	None	replace
263	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(),  parameters);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(),  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(),  parameters);	  EstimationProblem    problem    =    ime.getMatrixIndexOutOfBounds();    	non-compiled	[CE]  ';'  expected	75	None	replace
264	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(),  parameters;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(),  parameters;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(),  parameters;	  EstimationProblem    problem    =    ime.getMatrixIndexOutOfBounds();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	75	None	replace
265	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(null);  [CE]  cannot  find  symbol  ImmutableValues  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableValues.getInstance(null);	  InvalidMatrixException    ime    =    ImmutableValues.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableValues	21	None	replace
266	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(variances);  [CE]  cannot  find  symbol  variances  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableValues.getInstance(variances);	  InvalidMatrixException    ime    =    ImmutableValues.getInstance();    	non-compiled	[CE]  cannot  find  symbol  variances	21	None	replace
267	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(variance);  [CE]  cannot  find  symbol  variance  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(variance);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableValues.getInstance(variance);	  InvalidMatrixException    ime    =    ImmutableValues.getInstance();    	non-compiled	[CE]  cannot  find  symbol  variance	21	None	replace
268	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	65	None	replace
269	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  residuals);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	65	None	replace
270	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(jTj,  null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(jTj,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(jTj,  null);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	65	None	replace
271	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	65	None	replace
272	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(variances,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(variances,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(variances,  parameters);	  EstimationProblem    problem    =    Ime.getInstance(variances);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	32	None	replace
273	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.variances);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.variances);	  EstimationProblem    problem    =    Ime.getInstance(variances);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	32	None	replace
274	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(results,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(results,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(results,  parameters);	  EstimationProblem    problem    =    Ime.getInstance(variances);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	32	None	replace
275	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.mean.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  mean  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.mean.getInvalidMatrixException( " ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.mean.getInvalidMatrixException( " ");	  InvalidMatrixException    ime    =    this.ime.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  mean	6	None	replace
276	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.message.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  message  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.message.getInvalidMatrixException( " ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.message.getInvalidMatrixException( " ");	  InvalidMatrixException    ime    =    this.ime.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  message	6	None	replace
277	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(jTj);  [CE]  cannot  find  symbol  jTj  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(jTj);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(jTj);	          ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(result);    	non-compiled	[CE]  cannot  find  symbol  jTj	84	None	replace
278	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length);	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	48	None	add
279	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	48	None	add
280	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSize());  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSize());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSize());	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	48	None	add
281	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException( ", ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException( ", ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problem.getInvalidMatrixException( ", ");	  InvalidMatrixException    ime    =    problem.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
282	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException( " ",  jTj);  [CE]  cannot  find  symbol  jTj  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  problem.getInvalidMatrixException( " ",  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problem.getInvalidMatrixException( " ",  jTj);	  InvalidMatrixException    ime    =    problem.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  jTj	4	None	replace
283	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(variance);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(variance);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(variance);	  EstimationProblem    problem    =    ime.getStandardProblem(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	123	None	replace
284	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  problem);	  EstimationProblem    problem    =    ime.getStandardProblem(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	123	None	replace
285	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(problem,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(problem,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(problem,  parameters);	  EstimationProblem    problem    =    ime.getStandardProblem(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	123	None	replace
286	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations,  parameters);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations,  parameters);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    jacobianEvaluations);    	non-compiled	[CE]  ';'  expected	105	None	replace
287	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  maxCostEval);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  maxCostEval);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  maxCostEval);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    jacobianEvaluations);    	non-compiled	[CE]  ';'  expected	105	None	replace
288	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrix(),  jacobianEvaluations);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrix(),  jacobianEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrix(),  jacobianEvaluations);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    jacobianEvaluations);    	non-compiled	[CE]  ';'  expected	105	None	replace
289	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(),  parameters);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(),  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardWarnings(),  parameters);	  EstimationProblem    problem    =    ime.getStandardWarnings();    	non-compiled	[CE]  ';'  expected	83	None	replace
290	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardErrors();  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardErrors();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardErrors();	  EstimationProblem    problem    =    ime.getStandardWarnings();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	83	None	replace
291	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(),  parameters;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(),  parameters;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardWarnings(),  parameters;	  EstimationProblem    problem    =    ime.getStandardWarnings();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	83	None	replace
292	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  max);  [CE]  cannot  find  symbol  max  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  max);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  max);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	non-compiled	[CE]  cannot  find  symbol  max	101	None	replace
293	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Unexpected  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Unexpected  parameter: "  +  parameters);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
294	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Unexpected  parameter: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Unexpected  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Unexpected  parameter: "  +  parameters);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
295	[BUG]  [BUGGY]  checkSquares(false,  residuals);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(false,  residuals);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(false,  residuals);	  checkSquares(true);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
296	[BUG]  [BUGGY]  checkSquares(false,  criterion);  [CE]  cannot  find  symbol  criterion  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(false,  criterion);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(false,  criterion);	  checkSquares(true);    	non-compiled	[CE]  cannot  find  symbol  criterion	63	None	replace
297	[BUG]  [BUGGY]  checkSquares(false,  parameters);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(false,  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(false,  parameters);	  checkSquares(true);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
298	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
299	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameters: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
300	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
301	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
302	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters.length);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
303	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  parameters.length);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
304	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "+getMessage());  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "+getMessage());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "+getMessage());	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
305	[BUG]  [BUGGY]  MutableMeasurement  problem  =  ime,  parameters.getMeasurements();  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  ime,  parameters.getMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  ime,  parameters.getMeasurements();	  MutableMeasurement    problem    =    ime.getMeasurements();    	non-compiled	[CE]  ';'  expected	72	None	replace
306	[BUG]  [BUGGY]  MutableMeasurement  problem  =  this.ime.getMeasurements();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  this.ime.getMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  this.ime.getMeasurements();	  MutableMeasurement    problem    =    ime.getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
307	[BUG]  [BUGGY]  MutableMeasurement  problem  =  ime.getMeasurements(),  parameters;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  ime.getMeasurements(),  parameters;  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  ime.getMeasurements(),  parameters;	  MutableMeasurement    problem    =    ime.getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
308	[BUG]  [BUGGY]  Bug.log(Level.WARNING,  problem.getMeasurements());  [CE]  cannot  find  symbol  Level  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING,  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING,  problem.getMeasurements());	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
309	[BUG]  [BUGGY]  Bug.log(Level.WARNING,  problem.getErrors());  [CE]  cannot  find  symbol  Level  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING,  problem.getErrors());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING,  problem.getErrors());	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
310	[BUG]  [BUGGY]  Bug.log(Level.WARNING,  problem.getMatrix());  [CE]  cannot  find  symbol  Level  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING,  problem.getMatrix());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING,  problem.getMatrix());	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
311	[BUG]  [BUGGY]  Bug.log(Level.WARNING,  problem.getMeasurements().length);  [CE]  cannot  find  symbol  Level  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING,  problem.getMeasurements().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING,  problem.getMeasurements().length);	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
312	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
313	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getAllParameters().length);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
314	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length,  parameters);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,EstimatedParameter[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length,  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getMeasurements().length,  parameters);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,EstimatedParameter[])	49	None	replace
315	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSuffix().length);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSuffix().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSuffix().length);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
316	[BUG]  [BUGGY]  verifyMeasurements(true);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  verifyMeasurements(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	verifyMeasurements(true);	  verifyMeasurements();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
317	[BUG]  [BUGGY]  validateMeasurements();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  validateMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	validateMeasurements();	  verifyMeasurements();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
318	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  parameters);	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
319	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  criterion);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  criterion);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  criterion);	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
320	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  result);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  result);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  result);	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
321	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  c);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  c);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  c);	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
322	[BUG]  [BUGGY]  MutableMeasurement  problem  =  getMeasurements().length;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  getMeasurements().length;  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  getMeasurements().length;	  MutableMeasurement    problem    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
323	[BUG]  [BUGGY]  MutableMeasurement  problem  =  super.getMeasurements();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  super.getMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  super.getMeasurements();	  MutableMeasurement    problem    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
324	[BUG]  [BUGGY]  MutableMeasurement  problem  =  getMeasurements(),  parameters);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  getMeasurements(),  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  getMeasurements(),  parameters);	  MutableMeasurement    problem    =    getMeasurements();    	non-compiled	[CE]  ';'  expected	99	None	replace
325	[BUG]  [BUGGY]  checkSquares(true,  false);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(true,  false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(true,  false);	  checkSquares(false);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
326	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  null);	  EstimationProblem    problem    =    ime.getStandardError(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	82	None	replace
327	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(null,  jTj);	  EstimationProblem    problem    =    ime.getStandardError(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	82	None	replace
328	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(null,  null);	  EstimationProblem    problem    =    ime.getStandardError(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	82	None	replace
329	[BUG]  [BUGGY]  MutableMeasures.checkNotNull(measures);  [CE]  cannot  find  symbol  measures  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkNotNull(measures);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkNotNull(measures);	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol  measures	61	None	replace
330	[BUG]  [BUGGY]  MutableMeasures.checkNotNull(message);  [CE]  cannot  find  symbol  message  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkNotNull(message);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkNotNull(message);	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol  message	61	None	replace
331	[BUG]  [BUGGY]  checkMeasurements(true);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkMeasurements(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkMeasurements(true);	  checkMeasurements();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
332	[BUG]  [BUGGY]  checkMeasurements(false);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkMeasurements(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkMeasurements(false);	  checkMeasurements();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
333	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  costEvaluations);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    parameters);    	non-compiled	[CE]  ';'  expected	54	None	replace
334	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  jTj);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  jTj);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    parameters);    	non-compiled	[CE]  ';'  expected	54	None	replace
335	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  cost);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  cost);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  cost);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    parameters);    	non-compiled	[CE]  ';'  expected	54	None	replace
336	[BUG]  [BUGGY]  checkMeasures(true);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkMeasures(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkMeasures(true);	  checkMeasures();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
337	[BUG]  [BUGGY]  CheckMeasures();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  CheckMeasures();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	CheckMeasures();	  checkMeasures();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
338	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  costEvaluations);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(),  parameters,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardError(),    parameters);    	non-compiled	[CE]  ';'  expected	41	None	replace
339	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  jTj);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(),  parameters,  jTj);	  EstimationProblem    problem    =    ime.getStandardError(),    parameters);    	non-compiled	[CE]  ';'  expected	41	None	replace
340	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  cost);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  cost);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(),  parameters,  cost);	  EstimationProblem    problem    =    ime.getStandardError(),    parameters);    	non-compiled	[CE]  ';'  expected	41	None	replace
341	[BUG]  [BUGGY]  checkSquare(problem,  parameters);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem,  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem,  parameters);	  checkSquare(problem);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
342	[BUG]  [BUGGY]  checkSquare(this.chiSquare);  [CE]  cannot  find  symbol  chiSquare  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(this.chiSquare);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(this.chiSquare);	  checkSquare(problem);    	non-compiled	[CE]  cannot  find  symbol  chiSquare	95	None	replace
343	[BUG]  [BUGGY]  checkSquare(variances);  [CE]  cannot  find  symbol  variances  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(variances);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(variances);	  checkSquare(problem);    	non-compiled	[CE]  cannot  find  symbol  variances	95	None	replace
344	[BUG]  [BUGGY]  checkSquare(jTj);  [CE]  cannot  find  symbol  jTj  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(jTj);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(jTj);	  checkSquare(problem);    	non-compiled	[CE]  cannot  find  symbol  jTj	95	None	replace
345	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals: "  +  problem);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Error    reading    variable    residuals.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	29	None	replace
346	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(null,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardProblem(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	2	None	replace
347	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(null,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(null,  jTj);	  EstimationProblem    problem    =    ime.getStandardProblem(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	2	None	replace
348	[BUG]  [BUGGY]  checkSquare(this.variances);  [CE]  cannot  find  symbol  variances  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(this.variances);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(this.variances);	  checkSquare(problem);    	non-compiled	[CE]  cannot  find  symbol  variances	95	None	replace
349	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  0);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  0);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  0);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    cols);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	57	None	replace
350	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getParameters().length);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getParameters().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getParameters().length);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
351	[BUG]  [BUGGY]  checkSquares(problem.getSquares(),  residuals);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(problem.getSquares(),  residuals);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(problem.getSquares(),  residuals);	  checkSquares(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
352	[BUG]  [BUGGY]  ImeMatrixException  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImeMatrixException  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImeMatrixException  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    parameter.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
353	[BUG]  [BUGGY]  ImetarParameter  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImetarParameter  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImetarParameter  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    parameter.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
354	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(this.results);  [CE]  cannot  find  symbol  results  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(this.results);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(this.results);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results);    	non-compiled	[CE]  cannot  find  symbol  results	79	None	replace
355	[BUG]  [BUGGY]  CheckMeasurements();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  CheckMeasurements();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	CheckMeasurements();	  checkMeasurements();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
356	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(this.chiSquare,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardMatrix(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	70	None	replace
357	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  residuals);  [CE]  cannot  find  symbol  Ime  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  Ime.getInstance(this,  residuals);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  Ime	116	None	replace
358	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  estimates);  [CE]  cannot  find  symbol  estimates  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  estimates);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  Ime.getInstance(this,  estimates);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  estimates	116	None	replace
359	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  estimations);  [CE]  cannot  find  symbol  estimations  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  estimations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  Ime.getInstance(this,  estimations);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  estimations	116	None	replace
360	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  fields);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  fields);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  fields);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	60	None	replace
361	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  parameters.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  parameters.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  parameters.getInvalidMatrixException();	  InvalidMatrixException    ime    =    problems.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
362	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(immutableSet);  [CE]  cannot  find  symbol  immutableSet  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(immutableSet);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(immutableSet);	  InvalidMatrixException    ime    =    ImmutableSet.getInstance();    	non-compiled	[CE]  cannot  find  symbol  immutableSet	22	None	replace
363	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(this.results);  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(this.results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSetUtil.getInstance(this.results);	  InvalidMatrixException    ime    =    ImmutableSet.getInstance();    	non-compiled	[CE]  cannot  find  symbol  results	22	None	replace
364	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter:n "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter:n "  +  parameters);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
365	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter:n "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter:n "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter:n "  +  parameters);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
366	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters,  residuals);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters,  residuals);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters,  residuals);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,double[])	101	None	replace
367	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.toString());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.toString());	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    problem.getName());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	1	replace
368	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.toString());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.toString());	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    problem.getName());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	104	1	replace
369	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem,  problem.getName());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem,  problem.getName());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem,  problem.getName());	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
370	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  parameters.getInvalidMatrixException( ", ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  parameters.getInvalidMatrixException( ", ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  parameters.getInvalidMatrixException( ", ");	  InvalidMatrixException    ime    =    parameters.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
371	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  residuals.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  residuals.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  residuals.getImmediateParentPointer();	  InvalidMatrixException    ime    =    problems.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
372	[BUG]  [BUGGY]  Bug.log(Level.WARNING, "Invalid  estimate ");  [CE]  cannot  find  symbol  Level  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING, "Invalid  estimate ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING, "Invalid  estimate ");	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	17	None	replace
373	[BUG]  [BUGGY]  Arrays.sort(this.results,  new  double[][]  {  0,  }  );  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  new  double[][]  {  0,  }  );  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  new  double[][]  {  0,  }  );	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
374	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  residuals.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  residuals.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  residuals.getImmediateParentPointer();	  ImerialMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
375	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  [0];  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  [0];  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  [0];	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds()    +    1;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	11	None	replace
376	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.result);  [CE]  cannot  find  symbol  result  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.result);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.result);	  InvalidMatrixException    ime    =    ImeUtil.getInstance();    	non-compiled	[CE]  cannot  find  symbol  result	90	None	replace
377	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  costEvaluations);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    jacobianEvaluations);    	non-compiled	[CE]  ';'  expected	105	None	replace
378	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations,  costEvaluations);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  jacobianEvaluations,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    jacobianEvaluations);    	non-compiled	[CE]  ';'  expected	105	None	replace
379	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(this.results);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(this.results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableFormat.getInstance(this.results);	  InvalidMatrixException    ime    =    ImmutableFormat.getInstance();    	non-compiled	[CE]  cannot  find  symbol  results	20	None	replace
380	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(variances);  [CE]  cannot  find  symbol  variances  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableFormat.getInstance(variances);	  InvalidMatrixException    ime    =    ImmutableFormat.getInstance();    	non-compiled	[CE]  cannot  find  symbol  variances	20	None	replace
381	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(null,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardError(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	82	None	replace
382	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(null,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(null,  residuals);	  EstimationProblem    problem    =    ime.getStandardError(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	82	None	replace
383	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  criterion);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  criterion);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  criterion);	  EstimationProblem    problem    =    ime.getStandardMatrix(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	55	None	replace
384	[BUG]  [BUGGY]  ensureMeasures(false);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ensureMeasures(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ensureMeasures(false);	  ensureMeasures();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
385	[BUG]  [BUGGY]  ensureMeasures(true,  false);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ensureMeasures(true,  false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ensureMeasures(true,  false);	  ensureMeasures();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
386	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardProblem(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	124	None	replace
387	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this,  residuals);	  EstimationProblem    problem    =    ime.getStandardProblem(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	124	None	replace
388	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameters,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameters,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameters,  costEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	27	None	replace
389	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  costEvaluations);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(),  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardError(),    parameters);    	non-compiled	[CE]  ';'  expected	41	None	replace
390	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  residuals);	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
391	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
392	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  criterion);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  criterion);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  criterion);	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
393	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getParameters());  [CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getParameters());	  	non-compiled	[CE]  variable  ie  is  already  defined  in  method  getCovariances(EstimationProblem)	102	None	add
394	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variables,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variables,  rows);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variables,  rows);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	115	None	replace
395	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  parameters,  costEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	115	None	replace
396	[BUG]  [BUGGY]  logger.log(Level.WARNING,  problem, "Unable  to  instantiate  parameter: "  +  problem.getName());  [CE]  cannot  find  symbol  Level  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,  problem, "Unable  to  instantiate  parameter: "  +  problem.getName());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,  problem, "Unable  to  instantiate  parameter: "  +  problem.getName());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol  Level	110	None	replace
397	[BUG]  [BUGGY]  logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.toString());  [CE]  cannot  find  symbol  Level  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.toString());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.toString());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol  Level	110	None	replace
398	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(this);	  EstimationProblem    problem    =    ime.getStandardMatrix(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	56	None	replace
399	[BUG]  [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(false);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  updateMeasurements(false);	  MutableMeasurement    problem    =    updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
400	[BUG]  [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(null);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(null);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  updateMeasurements(null);	  MutableMeasurement    problem    =    updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
401	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  residuals);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  residuals);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters;    	non-compiled	[CE]  ';'  expected	12	None	replace
402	[BUG]  [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR "  +  problem.getName());  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR "  +  problem.getName());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.warning( "JSC_INTERNAL_ERROR "  +  problem.getName());	  logger.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
403	[BUG]  [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR: "  +  problem.getName());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR: "  +  problem.getName());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.warning( "JSC_INTERNAL_ERROR: "  +  problem.getName());	  logger.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
404	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  costEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameter);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	30	None	replace
405	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  java.util.ArrayIndexOutOfBoundsException  ex  =  new  java.util.ArrayIndexOutOfBoundsException();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  java.util.ArrayIndexOutOfBoundsException  ex  =  new  java.util.ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    final  java.util.ArrayIndexOutOfBoundsException  ex  =  new  java.util.ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
406	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  int  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  int  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    final  int  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  ';'  expected	43	None	add
407	[BUG]  [BUGGY]  checkMeasures(problem.getMeasurements());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkMeasures(problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkMeasures(problem.getMeasurements());	  checkMeasures();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
408	[BUG]  [BUGGY]  checkMeasures(false);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkMeasures(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkMeasures(false);	  checkMeasures();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
409	[BUG]  [BUGGY]  ImetarException  ime  =  problem.getInvalidMatrixException();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImetarException  ime  =  problem.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImetarException  ime  =  problem.getInvalidMatrixException();	  InvalidMatrixException    ime    =    parameter.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
410	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  column,  costEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    column);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	114	None	replace
411	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  index);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  index);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  index);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    column);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	114	None	replace
412	[BUG]  [BUGGY]  MutableMeasurements.checkNotNull(results);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurements.checkNotNull(results);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurements.checkNotNull(results);	  UpdateMeasurements();    	non-compiled	[CE]  cannot  find  symbol  results	7	None	replace
413	[BUG]  [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length  >  0);  [CE]  cannot  find  symbol  MutableMeasurements  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length  >  0);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurements.checkState(problem.getMeasurements().length  >  0);	  UpdateMeasurements();    	non-compiled	[CE]  cannot  find  symbol  MutableMeasurements	7	None	replace
414	[BUG]  [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length  ==  0);  [CE]  cannot  find  symbol  MutableMeasurements  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length  ==  0);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurements.checkState(problem.getMeasurements().length  ==  0);	  UpdateMeasurements();    	non-compiled	[CE]  cannot  find  symbol  MutableMeasurements	7	None	replace
415	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(max,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(max,  rows);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(max,  rows);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    max);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	59	None	replace
416	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  max,  residuals);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    max);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	59	None	replace
417	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(variances);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(variances);	  EstimationProblem    problem    =    ime.getStandardProblem(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	123	None	replace
418	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  parameters.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  parameters.getInvalidMatrixException( " ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  parameters.getInvalidMatrixException( " ");	  InvalidMatrixException    ime    =    problems.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
419	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  cost);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  cost);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  cost);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters);    	non-compiled	[CE]  ';'  expected	10	None	replace
420	[BUG]  [BUGGY]  Problem.log(null,  problem.getMeasurements());  [CE]  cannot  find  symbol  Problem  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Problem.log(null,  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Problem.log(null,  problem.getMeasurements());	  Problem.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Problem	18	None	replace
421	[BUG]  [BUGGY]  Problem.log(null,  problem.getMatrix());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Problem.log(null,  problem.getMatrix());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Problem.log(null,  problem.getMatrix());	  Problem.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
422	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.results,  costEvaluations);	  EstimationProblem    problem    =    Ime.getInstance(this.results);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	93	None	replace
423	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "));  [CE]  unclosed  string  literal  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "));  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "));	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	non-compiled	[CE]  unclosed  string  literal	45	None	replace
424	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
425	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: ");  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
426	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: "));  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: "));  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Example  error: "));	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	non-compiled	[CE]  	45	None	replace
427	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  Ex  =  new  ArrayIndexOutOfBoundsException();  [CE]  cannot  find  symbol  Ex  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  Ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    Ex  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  cannot  find  symbol  Ex	46	None	add
428	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ex.add(new  ArrayIndexOutOfBoundsException());  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ex.add(new  ArrayIndexOutOfBoundsException());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ex.add(new  ArrayIndexOutOfBoundsException());	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
429	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "   "));    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	111	None	replace
430	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( ", ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( ", ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( ", ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "   "));    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	111	None	replace
431	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " ",  0));  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " ",  0));  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( " ",  0));	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "   "));    	non-compiled	[CE]  	111	None	replace
432	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ")+ ";  [CE]  unclosed  string  literal  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ")+ ";  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ")+ ";	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  unclosed  string  literal	44	None	replace
433	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(this.results);  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(this.results);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableValues.getInstance(this.results);	  InvalidMatrixException    ime    =    ImmutableValues.getInstance();    	non-compiled	[CE]  cannot  find  symbol  results	21	None	replace
434	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.measure.getInvalidMatrixException();  [CE]  cannot  find  symbol  measure  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.measure.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.measure.getInvalidMatrixException();	  InvalidMatrixException    ime    =    this.ime.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  measure	14	None	replace
435	[BUG]  [BUGGY]  MutableMeasures.checkNotNull(results);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkNotNull(results);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkNotNull(results);	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol  results	61	None	replace
436	[BUG]  [BUGGY]  MutableMeasures.checkState(results  ==  null);  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkState(results  ==  null);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkState(results  ==  null);	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol  results	61	None	replace
437	[BUG]  [BUGGY]  MutableMeasures.checkNotNull(problem);  [CE]  cannot  find  symbol  MutableMeasures  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkNotNull(problem);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkNotNull(problem);	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol  MutableMeasures	61	None	replace
438	[BUG]  [BUGGY]  Arrays.sort(this.results,  0,  this.results.length);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  0,  this.results.length);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  0,  this.results.length);	  Arrays.sort(this.results,    this.results);    	non-compiled	[CE]  cannot  find  symbol  results	121	None	replace
439	[BUG]  [BUGGY]  Arrays.sort(this.results,  this.values);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  this.values);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this.values);	  Arrays.sort(this.results,    this.results);    	non-compiled	[CE]  cannot  find  symbol  results	121	None	replace
440	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  cost);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  cost);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  cost);	  EstimationProblem    problem    =    ime.getStandardProblem(),    parameters);    	non-compiled	[CE]  ';'  expected	3	None	replace
441	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  problems);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  problems);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(),  problems);	  EstimationProblem    problem    =    ime.getStandardProblem(),    parameters);    	non-compiled	[CE]  ';'  expected	3	None	replace
442	[BUG]  [BUGGY]  Bug.logAndClearBuffer();  [CE]  cannot  find  symbol  Bug  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.logAndClearBuffer();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.logAndClearBuffer();	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Bug	19	None	replace
443	[BUG]  [BUGGY]  Bug.log(Level.WARNING, "Index  out  of  range ");  [CE]  cannot  find  symbol  Level  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING, "Index  out  of  range ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING, "Index  out  of  range ");	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
444	[BUG]  [BUGGY]  Bug.log(Level.WARNING, "Invalid  estimation  problem: "  +  problem);  [CE]  cannot  find  symbol  Level  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING, "Invalid  estimation  problem: "  +  problem);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING, "Invalid  estimation  problem: "  +  problem);	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
445	[BUG]  [BUGGY]  logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.getAllParameters());  [CE]  cannot  find  symbol  Level  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,   "Unable  to  instantiate  parameter: "  +  problem.getAllParameters());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getMeasurements());    	non-compiled	[CE]  cannot  find  symbol  Level	109	None	replace
446	[BUG]  [BUGGY]  logger.log(Level.WARNING,  problem, "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());  [CE]  cannot  find  symbol  Level  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,  problem, "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,  problem, "Unable  to  instantiate  parameter: "  +  problem.getMeasurements());	  logger.log(Level.WARNING,   "Unable    to    instantiate    parameter:   "    +    problem.getMeasurements());    	non-compiled	[CE]  cannot  find  symbol  Level	109	None	replace
447	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(0,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(0,  rows);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(0,  rows);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    0);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	78	None	replace
448	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  null);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	65	None	replace
449	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(null,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	65	None	replace
450	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(message,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardError(message);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	122	None	replace
451	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexOutOfBounds(null);	  EstimationProblem    problem    =    ime.getMatrixIndexOutOfBounds();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	75	None	replace
452	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  parameters: ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  parameters: ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  parameters: ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    constants:   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	67	None	replace
453	[BUG]  [BUGGY]  checkSquares(false,  null);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(false,  null);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(false,  null);	  checkSquares(true);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
454	[BUG]  [BUGGY]  MutableMeasurement  problem  =  ime.createMeasurement(this);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  ime.createMeasurement(this);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  ime.createMeasurement(this);	  MutableMeasurement    problem    =    ime.getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
455	[BUG]  [BUGGY]  MutableMeasurement  problem  =  ime.findMeasurements(problem);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  ime.findMeasurements(problem);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  ime.findMeasurements(problem);	  MutableMeasurement    problem    =    ime.getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
456	[BUG]  [BUGGY]  checkSquare(false,  costEvaluations);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(false,  costEvaluations);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false,  costEvaluations);	  checkSquare(true);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
457	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(this.chiSquare,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardProblem(this.chiSquare);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	74	None	replace
458	[BUG]  [BUGGY]  verifyMeasurements(false);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  verifyMeasurements(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	verifyMeasurements(false);	  verifyMeasurements();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
459	[BUG]  [BUGGY]  ImerialsException  ime  =  problem.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialsException  ime  =  problem.getInvalidMatrixException( " ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialsException  ime  =  problem.getInvalidMatrixException( " ");	  InvalidMatrixException    ime    =    problem.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
460	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(token);  [CE]  cannot  find  symbol  token  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(token);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(token);	          ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(result);    	non-compiled	[CE]  cannot  find  symbol  token	84	None	replace
461	[BUG]  [BUGGY]  checkSquare(problem.getSquares(),  residuals);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem.getSquares(),  residuals);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquares(),  residuals);	  checkSquare(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
462	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  costEvaluations,  parameters);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  costEvaluations,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  costEvaluations,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    costEvaluations);    	non-compiled	[CE]  ';'  expected	117	None	replace
463	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  non-function  problem. ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  non-function  problem. ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  an  non-function  problem. ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    a    non-function    problem.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	112	None	replace
464	[BUG]  [BUGGY]  Arrays.sort(this.results,  null,  costEvaluations);  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  null,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  null,  costEvaluations);	  Arrays.sort(this.results,    null);    	non-compiled	[CE]  cannot  find  symbol  results	85	None	replace
465	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
466	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
467	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameter: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
468	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameter: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse  parameter: "  +  parameters);	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
469	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  costEvaluations);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  costEvaluations);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
470	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  error);  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  error);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
471	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  costs);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  costs);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  costs);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    parameters);    	non-compiled	[CE]  ';'  expected	54	None	replace
472	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  costEvaluations);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  costEvaluations);	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
473	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  residuals);	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
474	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException(null);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.results.getInvalidMatrixException(null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.results.getInvalidMatrixException(null);	  InvalidMatrixException    ime    =    this.results.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  results	16	None	replace
475	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  residuals);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	28	None	replace
476	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	28	None	replace
477	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(null,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(null,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(null,  residuals);	  EstimationProblem    problem    =    Ime.getInstance(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	94	None	replace
478	[BUG]  [BUGGY]  upgradeJacobianEvaluations(true);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  upgradeJacobianEvaluations(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	upgradeJacobianEvaluations(true);	  updateJacobianEvaluations(false);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
479	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getInstance(null);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getInstance(null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getInstance(null);	  EstimationProblem    problem    =    ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	31	None	replace
480	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getInstance(variances);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getInstance(variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getInstance(variances);	  EstimationProblem    problem    =    ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	31	None	replace
481	[BUG]  [BUGGY]  ReportInvalidMatrixException( " ");  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ReportInvalidMatrixException( " ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ReportInvalidMatrixException( " ");	  reportInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
482	[BUG]  [BUGGY]  reportInvalidMatrixException( " ",  i);  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  reportInvalidMatrixException( " ",  i);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	reportInvalidMatrixException( " ",  i);	  reportInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  i	108	None	replace
483	[BUG]  [BUGGY]  Arrays.sort(this.results,  new  WeightedMeasurement[]  {  dataArea  }  );  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  new  WeightedMeasurement[]  {  dataArea  }  );  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  new  WeightedMeasurement[]  {  dataArea  }  );	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  results	25	None	replace
484	[BUG]  [BUGGY]  Arrays.sort(this.results,  dataArea,  costEvaluations);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  dataArea,  costEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  dataArea,  costEvaluations);	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  results	25	None	replace
485	[BUG]  [BUGGY]  MutableMeasurement  problem  =  getMeasurements(null);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  getMeasurements(null);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  getMeasurements(null);	  MutableMeasurement    problem    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
486	[BUG]  [BUGGY]  MutableMeasurement  problem  =  getMeasurements(false);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  getMeasurements(false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  getMeasurements(false);	  MutableMeasurement    problem    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
487	[BUG]  [BUGGY]  UpdateJacobianEvaluations().setMeasurements(new  double[][]  {  jTj  }  );  [CE]  cannot  find  symbol  jTj  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations().setMeasurements(new  double[][]  {  jTj  }  );  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations().setMeasurements(new  double[][]  {  jTj  }  );	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol  jTj	35	None	replace
488	[BUG]  [BUGGY]  UpdateJacobianEvaluations().setMeasurements(new  int[][]  {  jTj  }  );  [CE]  cannot  find  symbol  jTj  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations().setMeasurements(new  int[][]  {  jTj  }  );  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations().setMeasurements(new  int[][]  {  jTj  }  );	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol  jTj	35	None	replace
489	[BUG]  [BUGGY]  UpdateJacobianEvaluations().setMeasurements(new  int[][]  {  0  }  );  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations().setMeasurements(new  int[][]  {  0  }  );  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations().setMeasurements(new  int[][]  {  0  }  );	  UpdateJacobianEvaluations();    	non-compiled	[CE]  incompatible  types	35	None	replace
490	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  uncertainties);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  uncertainties);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this,  uncertainties);	  EstimationProblem    problem    =    Ime.getInstance(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	106	None	replace
491	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  error);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(),  parameters,  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(),  parameters,  error);	  EstimationProblem    problem    =    ime.getStandardError(),    parameters);    	non-compiled	[CE]  ';'  expected	41	None	replace
492	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  2);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  2);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  2);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    0);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	78	None	replace
493	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.problems.getImmediateParentPointer();  [CE]  cannot  find  symbol  problems  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.problems.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.problems.getImmediateParentPointer();	  InvalidMatrixException    ime    =    problems.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol  problems	97	None	replace
494	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(result);  [CE]  cannot  find  symbol  result  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(result);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(result);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(problem);    	non-compiled	[CE]  cannot  find  symbol  result	91	None	replace
495	[BUG]  [BUGGY]  checkSquare(false,  null);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(false,  null);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false,  null);	  checkSquare(true);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
496	[BUG]  [BUGGY]  checkSquare(false,  MAXIMUM_QUOTES);  [CE]  cannot  find  symbol  MAXIMUM_QUOTES  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(false,  MAXIMUM_QUOTES);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false,  MAXIMUM_QUOTES);	  checkSquare(true);    	non-compiled	[CE]  cannot  find  symbol  MAXIMUM_QUOTES	37	None	replace
497	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  problem,  parameters.getImmediateParentPointer();  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  problem,  parameters.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  problem,  parameters.getImmediateParentPointer();	  InvalidMatrixException    ime    =    parameters.getImmediateParentPointer();    	non-compiled	[CE]  ';'  expected	51	None	replace
498	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	1	replace
499	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	1	replace
500	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(JavaToken.FIELD_NAME);  [CE]  cannot  find  symbol  JavaToken  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableFormat.getInstance(JavaToken.FIELD_NAME);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableFormat.getInstance(JavaToken.FIELD_NAME);	  InvalidMatrixException    ime    =    ImmutableFormat.getInstance();    	non-compiled	[CE]  cannot  find  symbol  JavaToken	20	None	replace
501	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(problem);	  EstimationProblem    problem    =    ime.getStandardError(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	82	None	replace
502	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals:n ");  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals:n ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Error  reading  variable  residuals:n ");	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Error    reading    variable    residuals.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	29	None	replace
503	[BUG]  [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR ",  problem);  [CE]  cannot  find  symbol  logger  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.warning( "JSC_INTERNAL_ERROR ",  problem);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.warning( "JSC_INTERNAL_ERROR ",  problem);	  logger.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  cannot  find  symbol  logger	87	None	replace
504	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());	  ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	103	1	replace
505	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());	  ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	103	1	replace
506	[BUG]  [BUGGY]  Bug.log(Level.WARNING, "Index  out  of  range. ");  [CE]  cannot  find  symbol  Level  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING, "Index  out  of  range. ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING, "Index  out  of  range. ");	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
507	[BUG]  [BUGGY]  Bug.log(Level.WARNING, "Index  out  of  range: "  +  Arrays.asList(cols));  [CE]  cannot  find  symbol  Level  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Bug.log(Level.WARNING, "Index  out  of  range: "  +  Arrays.asList(cols));  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Bug.log(Level.WARNING, "Index  out  of  range: "  +  Arrays.asList(cols));	  Bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Level	19	None	replace
508	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  reimbursement);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  reimbursement);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(),  parameters,  reimbursement);	  EstimationProblem    problem    =    ime.getStandardMatrix(),    parameters);    	non-compiled	[CE]  ';'  expected	54	None	replace
509	[BUG]  [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length);  [CE]  cannot  find  symbol  MutableMeasurements  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurements.checkState(problem.getMeasurements().length);	  UpdateMeasurements();    	non-compiled	[CE]  cannot  find  symbol  MutableMeasurements	7	None	replace
510	[BUG]  [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length  <  2);  [CE]  cannot  find  symbol  MutableMeasurements  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurements.checkState(problem.getMeasurements().length  <  2);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurements.checkState(problem.getMeasurements().length  <  2);	  UpdateMeasurements();    	non-compiled	[CE]  cannot  find  symbol  MutableMeasurements	7	None	replace
511	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  ime,  problem.getImmediateParentPointer();  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  ime,  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  ime,  problem.getImmediateParentPointer();	  ImerialMatrixException    ime    =    ime.getImmediateParentPointer();    	non-compiled	[CE]  ';'  expected	98	None	replace
512	[BUG]  [BUGGY]  MutableMeasurement  problem  =  ime.getMeasurements(problem);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  ime.getMeasurements(problem);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  ime.getMeasurements(problem);	  MutableMeasurement    problem    =    ime.getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
513	[BUG]  [BUGGY]  checkSquare(false,  parameters.length);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(false,  parameters.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(false,  parameters.length);	  checkSquare(false);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
514	[BUG]  [BUGGY]  MutableMeasurement  problem  =  getMeasurements().restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  getMeasurements().restrictByNotNullOrUndefined();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  getMeasurements().restrictByNotNullOrUndefined();	  MutableMeasurement    problem    =    getMeasurements();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
515	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  chiSquare;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  chiSquare;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  parameters,  chiSquare;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    parameters;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	12	None	replace
516	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  analysis);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  analysis);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  analysis);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
517	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  problem);  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  problem);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
518	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  this.parameters);  [CE]  cannot  find  symbol  results  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  this.parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImeUtil.getInstance(this.results,  this.parameters);	  InvalidMatrixException    ime    =    ImeUtil.getInstance(this.results);    	non-compiled	[CE]  cannot  find  symbol  results	92	None	replace
519	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexInOfBoundsException();  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexInOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexInOfBoundsException();	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	43	None	add
520	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));	  	non-compiled	[CE]  	43	None	add
521	[BUG]  [BUGGY]  checkSquare(problem.getSquare(),  cost);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem.getSquare(),  cost);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquare(),  cost);	  checkSquare(problem.getSquare());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
522	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  *  1;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  *  1;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds()  *  1;	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds()    +    1;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	11	None	replace
523	[BUG]  [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(true);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasurement  problem  =  updateMeasurements(true);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasurement  problem  =  updateMeasurements(true);	  MutableMeasurement    problem    =    updateMeasurements();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
524	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(message);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(message);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException(message);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	65	None	replace
525	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  this.problems.getInvalidMatrixException();  [CE]  cannot  find  symbol  problems  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  this.problems.getInvalidMatrixException();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  this.problems.getInvalidMatrixException();	  InvalidMatrixException    ime    =    problems.getInvalidMatrixException();    	non-compiled	[CE]  cannot  find  symbol  problems	118	None	replace
526	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  Exception  ex  =  new  ArrayIndexOutOfBoundsException();  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  Exception  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    Exception  ex  =  new  ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	46	None	add
527	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ex  =  new  ArrayIndexOutOfBoundsException();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	1	add
528	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ex  =  new  ArrayIndexOutOfBoundsException();  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ex  =  new  ArrayIndexOutOfBoundsException();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	1	add
529	[BUG]  [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ArrayIndexOutOfBoundsException  ex  =  new  java.util.ArrayIndexOutOfBoundsException();  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException();  ArrayIndexOutOfBoundsException  ex  =  new  java.util.ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    ArrayIndexOutOfBoundsException  ex  =  new  java.util.ArrayIndexOutOfBoundsException();	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	46	None	add
530	[BUG]  [BUGGY]  ImerialMatrixException  ime  =  problem.getInvalidMatrixException( " ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImerialMatrixException  ime  =  problem.getInvalidMatrixException( " ");  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImerialMatrixException  ime  =  problem.getInvalidMatrixException( " ");	  InvalidMatrixException    ime    =    problem.getInvalidMatrixException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
531	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSize().length);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSize().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse: "  +  problem.getSize().length);	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
532	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableSet.getInstance(problem);  [CE]  cannot  find  symbol  ImmutableSet  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableSet.getInstance(problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableSet.getInstance(problem);	  InvalidMatrixException    ime    =    ImmutableSet.getInstance();    	non-compiled	[CE]  cannot  find  symbol  ImmutableSet	22	None	replace
533	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj);	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
534	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.toString());  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.toString());  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(jTj,  jTj.toString());	  EstimationProblem    problem    =    ime.getStandardProblem(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	1	None	replace
535	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  problem);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	27	None	replace
536	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getInstance(problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getInstance(problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getInstance(problem);	  EstimationProblem    problem    =    ime.getInstance();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	31	None	replace
537	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(message);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(message);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardWarnings(message);	  EstimationProblem    problem    =    ime.getStandardWarnings();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	83	None	replace
538	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(this);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardWarnings(this);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardWarnings(this);	  EstimationProblem    problem    =    ime.getStandardWarnings();    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	83	None	replace
539	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  cols,  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    cols);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	57	None	replace
540	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(variable);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(variable);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(variable);	  EstimationProblem    problem    =    ime.getStandardMatrix(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	69	None	replace
541	[BUG]  [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse:   "  +  problem.getParameters().length);  [CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]          final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(   "Failed  to  parse:   "  +  problem.getMeasurements().length);  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse:   "  +  problem.getParameters().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	                final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "Failed    to    parse:   "    +    problem.getMeasurements().length);    final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Failed  to  parse:   "  +  problem.getParameters().length);	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  getCovariances(EstimationProblem)	48	None	add
542	[BUG]  [BUGGY]  Arrays.sort(this.results,  new  TreeMap());  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  new  TreeMap());  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  new  TreeMap());	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  results	25	None	replace
543	[BUG]  [BUGGY]  Arrays.sort(this.results,  dataArea,  null);  [CE]  cannot  find  symbol  results  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  dataArea,  null);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  dataArea,  null);	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  results	25	None	replace
544	[BUG]  [BUGGY]  Arrays.sort(this.results,  dataArea,  this.chiSquare);  [CE]  cannot  find  symbol  results  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  dataArea,  this.chiSquare);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  dataArea,  this.chiSquare);	  Arrays.sort(this.results,    dataArea);    	non-compiled	[CE]  cannot  find  symbol  results	25	None	replace
545	[BUG]  [BUGGY]  MutableMeasures.checkState(problem.getMeasures());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkState(problem.getMeasures());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkState(problem.getMeasures());	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
546	[BUG]  [BUGGY]  MutableMeasures.checkState(problem.getMeasures().length);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkState(problem.getMeasures().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkState(problem.getMeasures().length);	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
547	[BUG]  [BUGGY]  MutableMeasures.checkState(problem.getMeasurements().length);  [CE]  cannot  find  symbol  MutableMeasures  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  MutableMeasures.checkState(problem.getMeasurements().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	MutableMeasures.checkState(problem.getMeasurements().length);	  UpdateMeasures();    	non-compiled	[CE]  cannot  find  symbol  MutableMeasures	61	None	replace
548	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  jTj.toString());  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  jTj.toString());  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardMatrix(jTj,  jTj.toString());	  EstimationProblem    problem    =    ime.getStandardMatrix(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	55	None	replace
549	[BUG]  [BUGGY]  updateJacobianEvaluations(false,  false);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  updateJacobianEvaluations(false,  false);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	updateJacobianEvaluations(false,  false);	  updateJacobianEvaluations(true);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
550	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length,  results.length);  [CE]  cannot  find  symbol  results  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length,  results.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(results.length,  results.length);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(results.length);    	non-compiled	[CE]  cannot  find  symbol  results	80	None	replace
551	[BUG]  [BUGGY]  Problem.printStackTrace( "Jacobian  problem: "  +  problem.getMeasurements());  [CE]  cannot  find  symbol  Problem  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Problem.printStackTrace( "Jacobian  problem: "  +  problem.getMeasurements());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Problem.printStackTrace( "Jacobian  problem: "  +  problem.getMeasurements());	  Problem.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Problem	18	None	replace
552	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  problems);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this.results,  problems);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this.results,  problems);	  EstimationProblem    problem    =    Ime.getInstance(this.results);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	93	None	replace
553	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  errorRestriction);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  errorRestriction);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this,  errorRestriction);	  EstimationProblem    problem    =    Ime.getInstance(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	106	None	replace
554	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  parameter);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  parameter);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this,  parameter);	  EstimationProblem    problem    =    Ime.getInstance(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	106	None	replace
555	[BUG]  [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  error);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  Ime.getInstance(this,  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  Ime.getInstance(this,  error);	  EstimationProblem    problem    =    Ime.getInstance(this);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	106	None	replace
556	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxCostEvaluations);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxCostEvaluations);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(),  maxCostEvaluations);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(),    costEvaluations);    	non-compiled	[CE]  ';'  expected	117	None	replace
557	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  offset,  max);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  offset,  max);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(rows,  offset,  max);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    max);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	59	None	replace
558	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " "));	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	non-compiled	[CE]  	44	None	replace
559	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
560	[BUG]  [BUGGY]  Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Exception  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
561	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters,  exception);  [CE]  cannot  find  symbol  exception  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters,  exception);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters,  exception);	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    	non-compiled	[CE]  cannot  find  symbol  exception	101	None	replace
562	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result,  parameters);  [CE]  cannot  find  symbol  result  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result,  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result,  parameters);	          ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(result);    	non-compiled	[CE]  cannot  find  symbol  result	84	None	replace
563	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result.length);  [CE]  cannot  find  symbol  result  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(result.length);	          ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(result);    	non-compiled	[CE]  cannot  find  symbol  result	84	None	replace
564	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getMessage());  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getMessage());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  problem.getMessage());	  ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    problem.getName());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
565	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  Ime.getInstance(this,  dataArea);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  Ime.getInstance(this,  dataArea);	  InvalidMatrixException    ime    =    Ime.getInstance(this);    	non-compiled	[CE]  cannot  find  symbol  dataArea	116	None	replace
566	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError()  *  1;  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError()  *  1;  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError()  *  1;	  EstimationProblem    problem    =    ime.getStandardError()    +    1;    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	42	None	replace
567	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem. ",  parameters);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem. ",  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Expected  a  non-function  problem. ",  parameters);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Expected    a    non-function    problem.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	112	None	replace
568	[BUG]  [BUGGY]  UpdateJacobianEvaluations().maxCostEval  =  Math.max(result.getMeasurements().length);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations().maxCostEval  =  Math.max(result.getMeasurements().length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations().maxCostEval  =  Math.max(result.getMeasurements().length);	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
569	[BUG]  [BUGGY]  UpdateJacobianEvaluations().maxCostEval  =  maxCostEval;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations().maxCostEval  =  maxCostEval;  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations().maxCostEval  =  maxCostEval;	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
570	[BUG]  [BUGGY]  UpdateJacobianEvaluations().maxCostEval  =  Math.max(result.length,  maxCostEval);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  UpdateJacobianEvaluations().maxCostEval  =  Math.max(result.length,  maxCostEval);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	UpdateJacobianEvaluations().maxCostEval  =  Math.max(result.length,  maxCostEval);	  UpdateJacobianEvaluations();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
571	[BUG]  [BUGGY]  ImetarException  ime  =  problem.getImmediateParentPointer();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  ImetarException  ime  =  problem.getImmediateParentPointer();  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ImetarException  ime  =  problem.getImmediateParentPointer();	  InvalidMatrixException    ime    =    parameter.getImmediateParentPointer();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
572	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  jTj);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameter);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	30	None	replace
573	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable: "  +  parameter,  residuals);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable:   "    +    parameter);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	30	None	replace
574	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	1	add
575	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(   "Invalid  parameter:   "  +  parameters);  e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "Invalid    parameter:   "    +    parameters);    e  =  new  ArrayIndexOutOfBoundsException( "Invalid  parameter: "  +  parameters);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	1	add
576	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
577	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
578	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  an  error: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  an  error: ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
579	[BUG]  [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  an  error: ");  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  an  error: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  an  error: ");	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	1	replace
580	[BUG]  [BUGGY]  final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException( " "));  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	final  Throwable  ex  =  new  ArrayIndexOutOfBoundsException( " "));	          final    ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException(   "   "));    	non-compiled	[CE]  	45	None	replace
581	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  Arrays.asList(rows));  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  Arrays.asList(rows));  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  Arrays.asList(rows));	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(jTj,    rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	58	None	replace
582	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  columns,  residuals);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  columns,  residuals);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(jTj,  columns,  residuals);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(jTj,    rows);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	58	None	replace
583	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variants,  rows);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variants,  rows);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBounds(variants,  rows);	  EstimationProblem    problem    =    ime.getMatrixOutOfBounds(rows,    parameters);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	115	None	replace
584	[BUG]  [BUGGY]  Arrays.sort(this.results,  this.rawCostEval,  parameters);  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  this.rawCostEval,  parameters);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this.rawCostEval,  parameters);	  Arrays.sort(this.results,    this.rawCostEval);    	non-compiled	[CE]  cannot  find  symbol  results	86	None	replace
585	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(problem);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(problem);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexException(problem);	  EstimationProblem    problem    =    ime.getMatrixIndexException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	68	None	replace
586	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(message);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixIndexException(message);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixIndexException(message);	  EstimationProblem    problem    =    ime.getMatrixIndexException(null);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	68	None	replace
587	[BUG]  [BUGGY]  checkSquares(false,  parameters.length);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(false,  parameters.length);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(false,  parameters.length);	  checkSquares(false);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
588	[BUG]  [BUGGY]  checkSquare(problem.getSquares(),  coefficient);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquare(problem.getSquares(),  coefficient);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquare(problem.getSquares(),  coefficient);	  checkSquare(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
589	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
590	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( " ");	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
591	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  the  following  parameters: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  the  following  parameters: ");	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
592	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  the  following  parameters: ");  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  the  following  parameters: ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException( "Expected  the  following  parameters: ");	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
593	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  Exception  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	Exception  ex  =  new  ArrayIndexOutOfBoundsException();	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
594	[BUG]  [BUGGY]  Exception  ex  =  new  ArrayIndexOutOfBoundsException();  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  Exception  ex  =  new  ArrayIndexOutOfBoundsException();  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Exception  ex  =  new  ArrayIndexOutOfBoundsException();	          ArrayIndexOutOfBoundsException    ex    =    new    ArrayIndexOutOfBoundsException();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
595	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  error);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(),  parameters,  error);	  EstimationProblem    problem    =    ime.getStandardProblem(),    parameters);    	non-compiled	[CE]  ';'  expected	3	None	replace
596	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  error);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getMatrixOutOfBoundsException( "Failed  to  parse  variable. ",  error);	  EstimationProblem    problem    =    ime.getMatrixOutOfBoundsException(   "Failed    to    parse    variable.   ");    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	28	None	replace
597	[BUG]  [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(this.variances);  [CE]  cannot  find  symbol  variances  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  InvalidMatrixException  ime  =  ImmutableValues.getInstance(this.variances);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	InvalidMatrixException  ime  =  ImmutableValues.getInstance(this.variances);	  InvalidMatrixException    ime    =    ImmutableValues.getInstance();    	non-compiled	[CE]  cannot  find  symbol  variances	21	None	replace
598	[BUG]  [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate. ");  [CE]  cannot  find  symbol  Level  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  logger.log(Level.WARNING,   "Invalid  estimate. ");  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	logger.log(Level.WARNING,   "Invalid  estimate. ");	  logger.log(Level.WARNING,   "Invalid    estimate   ");    	non-compiled	[CE]  cannot  find  symbol  Level	88	None	replace
599	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  error);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(message,  error);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(message,  error);	  EstimationProblem    problem    =    ime.getStandardError(message);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	122	None	replace
600	[BUG]  [BUGGY]  Arrays.sort(this.results,  new  Measurements());  [CE]  cannot  find  symbol  results  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  new  Measurements());  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  new  Measurements());	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
601	[BUG]  [BUGGY]  Arrays.sort(this.results,  new  Measurement[]  {  }  );  [CE]  cannot  find  symbol  results  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  new  Measurement[]  {  }  );  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  new  Measurement[]  {  }  );	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
602	[BUG]  [BUGGY]  Arrays.sort(this.results,  this.measures);  [CE]  cannot  find  symbol  results  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  Arrays.sort(this.results,  this.measures);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	Arrays.sort(this.results,  this.measures);	  Arrays.sort(this.results,    parameters);    	non-compiled	[CE]  cannot  find  symbol  results	23	None	replace
603	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	add	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
604	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throws  EstimationException  {        [BUGGY]  ArrayIndexOutOfBoundsException  ie  =  new  ArrayIndexOutOfBoundsException(   "Invalid  calculation  problem:   "  +  problem.getMeasurements());  ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	ArrayIndexOutOfBoundsException    ie    =    new    ArrayIndexOutOfBoundsException(   "Invalid    calculation    problem:   "    +    problem.getMeasurements());    ie  =  new  ArrayIndexOutOfBoundsException( "Invalid  calculation  problem: "  +  problem.getAllParameters());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
605	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(result);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardProblem(result);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardProblem(result);	  EstimationProblem    problem    =    ime.getStandardProblem(problem);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	123	None	replace
606	[BUG]  [BUGGY]  bug.printStackTrace(error);  [CE]  cannot  find  symbol  error  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  bug.printStackTrace(error);  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	bug.printStackTrace(error);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  error	17	None	replace
607	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  jTj.toString());  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  jTj.toString());  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  jTj.toString());	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
608	[BUG]  [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  jTj);  [CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  EstimationProblem  problem  =  ime.getStandardError(jTj,  jTj);  [BUGGY]      updateJacobian();  final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	EstimationProblem  problem  =  ime.getStandardError(jTj,  jTj);	  EstimationProblem    problem    =    ime.getStandardError(jTj);    	non-compiled	[CE]  variable  problem  is  already  defined  in  method  getCovariances(EstimationProblem)	40	None	replace
609	[BUG]  [BUGGY]  checkSquares(this.problem.getSquares());  [CE]  cannot  find  symbol  problem  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throws  EstimationException  {        [BUGGY]  checkSquares(this.problem.getSquares());  [BUGGY]        final  int  rows  =  problem.getMeasurements().length;  final  int  cols  =  problem.getAllParameters().length;  final  int  max=  cols  *  rows;  double[][]  jTj  =  new  double[cols][cols];  for  (int  i  =  0;  i  <  cols;  ++i)  {  for  (int  j  =  i;  j  <  cols;  ++j)  {  double  sum  =  0;  for  (int  k  =  0;  k  <  max;  k  +=  cols)  {  [CLASS]  AbstractEstimator  [METHOD]  getCovariances  [RETURN_TYPE]  double[][]  EstimationProblem  problem  [VARIABLES]  EstimatedParameter[]  parameters  InvalidMatrixException  ime  boolean  double[]  jacobian  residuals  WeightedMeasurement[]  measurements  wm  double  chiSquare  cost  criterion  factor  residual  sum  double[][]  jTj  EstimationProblem  problem  int  cols  costEvaluations  i  index  j  jacobianEvaluations  k  max  maxCostEval  rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	162	162	1	replace	checkSquares(this.problem.getSquares());	  checkSquares(problem.getSquares());    	non-compiled	[CE]  cannot  find  symbol  problem	89	None	replace
