projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobian();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateMeasures();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ime.printStackTrace();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Ime.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ime.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=parameters.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.ime.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162verifyMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.results.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162bug.printStackTrace();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Problem.printStackTrace();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.printStackTrace();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableFormat.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableValues.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSet.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,dataArea);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this.parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameter);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJavabianEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquare());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getMeasurements().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=parameter.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateMeasures();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ensureMeasures();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedconstants:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedconstants:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexException(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(this.chiSquare);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=updateMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=ime.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkMeasures();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this.chiSquare);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexOutOfBounds();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),residuals;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=parameter.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardWarnings();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this.rawCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.warning("JSC_INTERNAL_ERROR");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Invalidestimate");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(problem.getSquares());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquares());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problems.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidparameter:"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162reportInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Unabletoinstantiateparameter:"+problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Unabletoinstantiateparameter:"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanon-functionproblem.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,column);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Ime.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problems.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=error.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problems.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,this.criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquare(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem,parameters.getSquare());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquare(),residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem,problem.getSquare());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getInstance(variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getInstance(this.variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,estimates);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.rawCostEval,this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.rawCostEval,results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.rawCostEval,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.rawCostEval,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedvariables:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedvariable:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedconstants:",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable."+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.results.getInvalidMatrixException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.results.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialsExceptionime=this.results.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Invalidestimate:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Invalidestimate",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Invalidestimate:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(variances,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(variances,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,rows,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparseallparameters.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparseparameters.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+jTj,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquares(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem,parameters.getSquares());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquares(),variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem,problem.getSquares());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.printStackTrace(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+problem,ime.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+problem.getMatrix());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getAllParameters());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getRows());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());ie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(variances,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.results.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedparameters:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedvariables:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ExitMatrixExceptionex=newExitMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ExitStatisticsExceptionex=newExitStatisticsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ExitExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newArrayIndexInOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialsExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerializationExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),max+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(reason);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,jTj,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,cols,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,max,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,max,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImetarMatrixExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ensureMeasures(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ensureMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EnsureMeasures();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations(false,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations(true,false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations(false,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),jacobian;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),jacobianEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),dataArea,residuals;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImmediateParentPointerime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialsExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.mean.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.message.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.warning("JSC_INTERNAL_ERROR",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.info("JSC_INTERNAL_ERROR");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.error("JSC_INTERNAL_ERROR");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalThrowableex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalIOExceptionex=newIOException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Invalidparameters:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problem,parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(problem.getSquares(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(problem,parameters.getSquares());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(problem.getSquares(),variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(variances.getSquares());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,null;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,dataArea,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,columns);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();FinalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalintArrayIndexOutOfBoundsExceptionex=newint[][]{ex};
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalintArrayIndexOutOfBoundsExceptionex=newint[1];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(),parameters,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJavabianEvaluations(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJavabianEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJavabianEvaluations(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations(false,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,problem.getName()+":"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,error,"Unabletoinstantiateparameter:"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexException(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexException(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexException(null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:"+variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,cols,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,cols,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),maxEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(message,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(message,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,problems);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,errors);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,parameters,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.parameters,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.parameters,this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.parameters,results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.parameters,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.results,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.results,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.results,errorResults);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=this.updateMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=ime.updateMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=updateMeasurements(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(this.chiSquare,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(this.chiSquare,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(this.chiSquare,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(this.chiSquare,this.criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.mean.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.message.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameter,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj,jTj.intValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj,variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this.results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Ime.getInstance(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSet.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableValues.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableFormat.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,jTj.intValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImemmediateParentPointerime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImetarMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSetUtil.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSetUtil.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSetUtil.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurements.checkNotNull(measures);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurements.checkNotNull(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectederror:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectederror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,error,"Unabletoinstantiateparameter:"+problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Unabletoinstantiateparameter:"+problem.getStandardMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,dataArea,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(dataArea,this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,dataset);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false,criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableFormat.getInstanceUTC();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableFormat.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=this.ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=parameter.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectednon-functionproblem.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanon-functionproblem.Pleasecheckthattheerrorisignored.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Problem.printStackTrace(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Problem.printStackTrace(System.err);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Problem.printStackTrace(error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162reportInvalidMatrixException("",ime);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162reportInvalidMatrixException("",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162reportInvalidMatrixException("".equals(problem.getMatrix()));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);Exceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(".Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:",+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(),max+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImmediateParentPointerime=parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,row);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,column,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,column,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,column,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getAllParameters());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getErrors());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getRows());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this,dataArea);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexOutOfBounds(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexOutOfBounds(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableValues.getInstance(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableValues.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableValues.getInstance(variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(variances,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.mean.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.message.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getMeasurements().length);finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getMeasurements().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getMeasurements().length);finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getAllParameters().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getMeasurements().length);finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problem.getInvalidMatrixException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problem.getInvalidMatrixException("",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),jacobianEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrix(),jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardWarnings(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardWarnings(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Unexpectedparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(false,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(false,criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(false,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Invalidparameters:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+getMessage());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=ime,parameters.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=this.ime.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=ime.getMeasurements(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,problem.getErrors());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,problem.getMatrix());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,problem.getMeasurements().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getAllParameters().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getMeasurements().length,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getSuffix().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162verifyMeasurements(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162validateMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,c);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=super.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=getMeasurements(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(true,false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(null,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkNotNull(measures);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkNotNull(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkMeasurements(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkMeasurements(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkMeasures(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162CheckMeasures();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(),parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(this.chiSquare);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:"+problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(null,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(this.variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getParameters().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(problem.getSquares(),residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImeMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImetarParameterime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162CheckMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(this.chiSquare,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Ime.getInstance(this,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Ime.getInstance(this,estimates);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Ime.getInstance(this,estimations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,fields);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSetUtil.getInstance(immutableSet);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSetUtil.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:n"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+problem.toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+problem,problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=parameters.getInvalidMatrixException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=residuals.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,"Invalidestimate");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,newdouble[][]{0,});
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=residuals.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),jacobianEvaluations,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableFormat.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableFormat.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(null,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj,criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ensureMeasures(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ensureMeasures(true,false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getParameters());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(variables,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,problem,"Unabletoinstantiateparameter:"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Unabletoinstantiateparameter:"+problem.toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=updateMeasurements(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=updateMeasurements(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.warning("JSC_INTERNAL_ERROR"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.warning("JSC_INTERNAL_ERROR:"+problem.getName());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameter,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finaljava.util.ArrayIndexOutOfBoundsExceptionex=newjava.util.ArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalintArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkMeasures(problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkMeasures(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImetarExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,column,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurements.checkNotNull(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurements.checkState(problem.getMeasurements().length>0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurements.checkState(problem.getMeasurements().length==0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(max,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,max,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=parameters.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Problem.log(null,problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Problem.log(null,problem.getMatrix());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.results,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Exampleerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Exampleerror:"));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();Ex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ex.add(newArrayIndexOutOfBoundsException());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("",0));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("")+";
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableValues.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.measure.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkNotNull(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkState(results==null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkNotNull(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,0,this.results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this.values);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(),parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(),problems);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.logAndClearBuffer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,"Indexoutofrange");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,"Invalidestimationproblem:"+problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Unabletoinstantiateparameter:"+problem.getAllParameters());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,problem,"Unabletoinstantiateparameter:"+problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(message,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexOutOfBounds(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedparameters:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(false,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=ime.createMeasurement(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=ime.findMeasurements(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162verifyMeasurements(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialsExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(token);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquares(),residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),costEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedannon-functionproblem.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,null,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparseparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),parameters,costs);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.results.getInvalidMatrixException(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162upgradeJacobianEvaluations(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getInstance(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ReportInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162reportInvalidMatrixException("",i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,newWeightedMeasurement[]{dataArea});
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,dataArea,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=getMeasurements(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=getMeasurements(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations().setMeasurements(newdouble[][]{jTj});
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations().setMeasurements(newint[][]{jTj});
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations().setMeasurements(newint[][]{0});
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this,uncertainties);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(),parameters,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.problems.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false,MAXIMUM_QUOTES);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=problem,parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableFormat.getInstance(JavaToken.FIELD_NAME);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:n");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.warning("JSC_INTERNAL_ERROR",problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getAllParameters());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,"Indexoutofrange.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Bug.log(Level.WARNING,"Indexoutofrange:"+Arrays.asList(cols));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(),parameters,reimbursement);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurements.checkState(problem.getMeasurements().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurements.checkState(problem.getMeasurements().length<2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=ime,problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=ime.getMeasurements(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(false,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=getMeasurements().restrictByNotNullOrUndefined();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,chiSquare;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,analysis);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImeUtil.getInstance(this.results,this.parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexInOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquare(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasurementproblem=updateMeasurements(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=this.problems.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();Exceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newjava.util.ArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImerialMatrixExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getSize().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableSet.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(jTj,jTj.toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardWarnings(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardWarnings(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,cols,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(variable);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getMeasurements().length);finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Failedtoparse:"+problem.getParameters().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,newTreeMap());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,dataArea,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,dataArea,this.chiSquare);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkState(problem.getMeasures());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkState(problem.getMeasures().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162MutableMeasures.checkState(problem.getMeasurements().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardMatrix(jTj,jTj.toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162updateJacobianEvaluations(false,false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results.length,results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Problem.printStackTrace("Jacobianproblem:"+problem.getMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this.results,problems);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this,errorRestriction);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this,parameter);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=Ime.getInstance(this,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(),maxCostEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(rows,offset,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Exceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters,exception);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(result,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(result.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+problem.getMessage());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=Ime.getInstance(this,dataArea);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanon-functionproblem.",parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations().maxCostEval=Math.max(result.getMeasurements().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations().maxCostEval=maxCostEval;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162UpdateJacobianEvaluations().maxCostEval=Math.max(result.length,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ImetarExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameter,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameter,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);e=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Expectedanerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162finalThrowableex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,Arrays.asList(rows));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(jTj,columns,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBounds(variants,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this.rawCostEval,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexException(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixIndexException(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(false,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquare(problem.getSquares(),coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Expectedthefollowingparameters:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Exceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(),parameters,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162InvalidMatrixExceptionime=ImmutableValues.getInstance(this.variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162logger.log(Level.WARNING,"Invalidestimate.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(message,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,newMeasurements());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,newMeasurement[]{});
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162Arrays.sort(this.results,this.measures);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162ArrayIndexOutOfBoundsExceptionie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getMeasurements());ie=newArrayIndexOutOfBoundsException("Invalidcalculationproblem:"+problem.getAllParameters());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardProblem(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162bug.printStackTrace(error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,jTj.toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162EstimationProblemproblem=ime.getStandardError(jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java162checkSquares(this.problem.getSquares());
