projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[i].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(colons[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(i,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(brace,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(colons[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(i,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(j,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);Jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);intindex++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=measurements[i].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cos[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize()+j;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(factors[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);intindex++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factors*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[i].getCols()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(data[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(jacobian[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(tokens[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);intindex=parameters[j].getIndex();jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(data[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(brace,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(data[j],parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(coefficients[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(colons[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(coas[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(branch,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,index);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);intindex=wm.getIndex(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(brace,j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm,cost.getPartialValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);double[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);jacobian[index++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,parameters[j],cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,measurements[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j]-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(parameters[j]-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],coefficient,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],cols,coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(variants[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],coefficient,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(cols[j],factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,index);Arrays.fill(jacobian,0,cols,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,index);Arrays.fill(jocobian,0,cols,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,index);Arrays.fill(jacobian,0,cols,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=measurements[i].getCols()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(braces[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cols[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);intindex++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);intindex++]=coefficient/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);intindex++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient/wm.getPartial(parameters[j]);intindex++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(i,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(variants[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,cols[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,index,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()*j-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79doubleindex=wm.getIndex();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()*2-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(rows[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(fields[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,index,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cols[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cols[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations);Arrays.fill(jacobian,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations);Arrays.fill(jocobian,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations);Arrays.fill(jacobian,0,cols,costsEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations);Arrays.fill(jacobian,0,cols,coûtEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=parameters[j].getPartialValues(wm.getPartialValues(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=parameters[j].getPartialValues(wm,j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(parameters[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cols,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(j,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,index+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(i,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols,measurements[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols,j,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getColumnsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnsCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factors*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=coefficient*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(factor,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],cost,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cols[j]);intindex=wm.getIndex(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);intindex=wm.getIndex(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j],cols[j]);intindex=wm.getIndex(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(variables[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(variables[j],factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]+1],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]+2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]*1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(variants[j]);intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(index,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(cols,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(parameters[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(i,j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,cols,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(j,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,index,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variant[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(cols,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(index,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(variables[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(variables[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);jacobian[i++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);Jacobian[i++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);intcols=parameters[j].getColumns();jacobian[i++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);intcols=parameters[j];jacobian[i++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],coefficient,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jocobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jacobian,0,columns,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jacobian,1,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/parameters.getPartial(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variables[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variables[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,cols);Arrays.fill(jacobian,0,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,cols);Arrays.fill(jocobian,0,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,cols);Arrays.fill(jacobian,0,error,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(costEvaluations[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(factors[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(cols,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variant[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,data[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,row,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,wm[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,parameters[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[i].getPartial(wm,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(colons[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(choos[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(factor,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialStructureValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialStructures();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialValues(j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);jacobian[index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);Jacobian[index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);intindex++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cocons[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cos[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialSize(j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialSize()+j;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,j+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols+1,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j].getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);Jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=factor*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,parameters[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient/wm.getPartial(i,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);double[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);double[index++]=cost*wm.getPartial(parameters[j].getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(parameters[j]);double[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(index,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);double[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[index++]=coefficient/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient/wm.getPartial(parameters[j]);double[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,factor.getPartial());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(j,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j],cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=cost*wm.getPartial(parameters[j].getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(data[j],cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],data[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j],parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(jacobian[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(jacobian[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getCols()*j;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnsCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize()*j;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize()+cols;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize()/j;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()*2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(brace,j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols,j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(brace,j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(j,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*variables[j].getPartial(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm[j],cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(j,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(cols[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient/wm.getPartial(parameters[j]);double[]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[]=coefficient/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=cost,wm.getPartialValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm,cost.getPartialEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(cols,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Jacobian[index++]=factor*wm.getPartial(parameters[j]);Jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);jacobian[i++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);Jacobian[i++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);intcols=parameters[j].getColumns();jacobian[i++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(i,wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(i,wm);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(i,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(variants[j]);intindex=wm.getIndex(variants[j]);jacobian[index++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(variants[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],cols,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartials(j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);intindex++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);intindex++]=cost*wm.getPartial(parameters[j].getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(parameters[j]);intindex++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=cost/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);Jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=coefficient/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(i,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(i,j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);intindex=parameters[j].getIndex();jacobian[index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);double[]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols.length);jacobian[index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()*3;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount()*4;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(data[j]);double[]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variants[j]);double[]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=parameters[j].getPartialValues(wm);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=parameters[j].getPartialValues(wm,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters.length,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]-1],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],costEvaluations-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=cost.getPartialValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/parameters.getPartial(wm[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm[j],i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialStdValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(j,i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm[j],parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],wm[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=coefficient/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);for(inti=0;i<rows;++i){jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);for(inti=0;i<cols;++i){jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(data[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j],i);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],coefficientEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/parameters[j].getPartial(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variables[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,index);arrays.fill(jacobian,0,cols,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(join[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(data[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(cols[j],factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,cols[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(data[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,index++]=cost*wm.getPartial(parameters[j]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=coefficient*wm.getPartial(i,j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);intcols=parameters[j].getColumnCount();jacobian[i++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);jacobian[i++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factors*wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factors*parameters[j].getPartial(wm,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,parameters[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(variants,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(variants);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(coefficients[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(this,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,parameters[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,parameters[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,parameters[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(values[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factors*wm.getPartial(parameters[j]);intindex++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(variants,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(variants);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(period);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(jacobian[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(jacobian[i],j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(variants[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=variables[j].getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(variants[j]-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(variables[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=measurements[j].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index,cols);arrays.fill(jacobian,0,index,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variances[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,j,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,parameters[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols+1,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols*1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=parameters[j].getIndex(variants[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(variants[j]);intindex=wm.getIndex(variants[j]);jacobian[index++]=factor*wm.getPartial(parameters[j]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,parameters[index]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,parameters[index].intValue);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Integerindex=wm.getIndex();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(j,i,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=residuals.getPartials(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize()+coefficient;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Jacobian[index++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j],parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);Jacobian[index++]=coefficient/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Jacobian[index++]=factor*wm.getPartial(parameters[j]);double[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,columns[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=coefficient*wm.getPartial(index,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,j,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,parameters[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,j,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(jacobian[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(tokens[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(parameters[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],costEvaluations+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],costEvaluations,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations);arrays.fill(jacobian,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variances[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=residuals.getPartialValues(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j],cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(data[j],parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,dataArea,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variants[j]);intindex=wm.getIndex(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variables[j]);intindex=wm.getIndex(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[i].getCols().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);double[]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,data.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,cols);Arrays.fill(jcobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows,cols);arrays.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factors/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],coefficient,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialValues(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm,cost.getPartialValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);jacobian[0]=factor/wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,parameters[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,parameters[j],j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(i,j+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=parameters[j].getPartialValues(wm.getParmeters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(j,j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(i,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(j,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],cost,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(costEvaluations[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,parameters[j],j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,measurements[j],j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(i,parameters[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(wm,parameters[j],coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(factor,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,columns[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,cols,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(index,j,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(j,parameters[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]+coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]+factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]+1],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);double[]=factor/wm.getPartial(parameters[j].doubleValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j],coefficient,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[j++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(index,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]-1],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],cost-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]-1,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,row,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,index++]=coefficient*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,index++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j],costEvaluations,coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(index,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);for(inti=0,cols=measurements.length;i<cols;++i){if(variants[i]>factor){thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);for(inti=0,cols=measurements.length;i<cols;++i){if(remainings[i]>factor){thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost*wm.getPartial(parameters[j]);for(inti=0,cols=measurements.length;++i){if(variants[i]>factor){thrownewIllegalArgumentException("");}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize()+factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(variables,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,index);Arrays.fill(jacobian,1,cols,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j],i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j],costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols,costEvaluations);Arrays.fill(jacobian,1,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,i);jacobian[i++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,j);jacobian[i++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[i++]=factor*wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variables,j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants,j,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j],costEvaluations,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=coefficient*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=result*wm.getPartial(parameters[j]);jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize(index,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Jacobian[index++]=factor*wm.getPartial(parameters[j]);intindex++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variables,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters[j].getPartial(variables[j],wm);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,rows[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=measurements[index].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(data[j],data[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,measurements[j],j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,parameters[j],j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(i,parameters[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,rows+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters.length-index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters[j].getPartial(j]));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,parameters[j].getPartial(j]),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(brace,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cols[j],j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j],factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(variables,j);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials(period);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(coales[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartials(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm,cost.getPartials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);jacobian[index++]=cost/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(parameters[j]);Arrays.fill(jacobian,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,index+1,wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,row,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Double[]parameters=wm.getPartialSize(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols()*factor-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(index,cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(jacobian[j],i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(jacobian[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(brace,j,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(factory[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*parameters.getPartial(wm,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variants[j],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost/wm.getPartial(colons[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(cocobian[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(coas[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(variants[j]);Jacobian[index++]=factor/wm.getPartial(parameters[j]);
