projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[j].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intcols=parameters[i].getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(cols[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor/wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(colons[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=cost*wm.getPartial(parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues(i,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79intindex=wm.getIndex();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variants[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(variables[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79jacobian[index++]=factor*wm.getPartial(brace,parameters[j]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialValues();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartialSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java79double[]parameters=wm.getPartials();
