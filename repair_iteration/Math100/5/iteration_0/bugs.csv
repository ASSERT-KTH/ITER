bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
9	[BUG] [BUGGY] double factor = -Math.sqrt(wm.getWeight()); [FE] ArrayIndexOutOfBoundsException [CONTEXT] protected void updateJacobian() { incrementJacobianEvaluationsCounter(); Arrays.fill(jacobian, 0); for (int i = 0, index = 0; i < rows; i++) { WeightedMeasurement wm = measurements[i]; [BUGGY] double factor = -Math.sqrt(wm.getWeight()); [BUGGY] for (int j = 0; j < cols; ++j) { jacobian[index++] = factor * wm.getPartial(parameters[j]); } } } [CLASS] AbstractEstimator [METHOD] updateJacobian [RETURN_TYPE] void  [VARIABLES] EstimatedParameter[] parameters WeightedMeasurement wm boolean double[] jacobian residuals WeightedMeasurement[] measurements double cost factor int cols costEvaluations i index j jacobianEvaluations maxCostEval rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	77	77	1	replace	
10	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] protected void updateJacobian() { incrementJacobianEvaluationsCounter(); Arrays.fill(jacobian, 0); for (int i = 0, index = 0; i < rows; i++) { WeightedMeasurement wm = measurements[i]; [BUGGY] [BUGGY] double factor = -Math.sqrt(wm.getWeight()); for (int j = 0; j < cols; ++j) { jacobian[index++] = factor * wm.getPartial(parameters[j]); } } } [CLASS] AbstractEstimator [METHOD] updateJacobian [RETURN_TYPE] void  [VARIABLES] EstimatedParameter[] parameters WeightedMeasurement wm boolean double[] jacobian residuals WeightedMeasurement[] measurements double cost factor int cols costEvaluations i index j jacobianEvaluations maxCostEval rows  	projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java	1.0	77	77	1	add	
