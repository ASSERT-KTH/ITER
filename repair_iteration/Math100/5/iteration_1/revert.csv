projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumn(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doublefactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());Doublefactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doublecoefficient=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getPartials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getScale(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFieldType(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRowSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);doublefactor=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);Doublefactor=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);doublecoefficient=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);intcols=wm.getWeight()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.columns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm,parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWidth());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeightEvaluation());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.cloneTree();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.toArray(newWeightedMeasurement[cols.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementwm[]=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getCols(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFull());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doublecols=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doubleindex=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getColls();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,costEvaluations.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getColumns(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);doublecols=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);Doublecols=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,index.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnIndex(costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.clone();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()*parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getValue());
