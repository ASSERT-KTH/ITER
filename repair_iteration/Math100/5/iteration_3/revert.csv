projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumn(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doublefactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());Doublefactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doublecoefficient=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getPartials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getScale(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFieldType(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRowSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);doublefactor=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);Doublefactor=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);doublecoefficient=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);intcols=wm.getWeight()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.columns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm,parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWidth());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeightEvaluation());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.cloneTree();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.toArray(newWeightedMeasurement[cols.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementwm[]=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getCols(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFull());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doublecols=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());doubleindex=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getColls();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,costEvaluations.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getColumns(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);doublecols=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);Doublecols=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1);intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,index.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnIndex(costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.clone();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()*parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize(i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getSize(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,parameters.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getSize()/scale);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,dataArea,wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,metrics.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]wm=wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementwm[]=parameters.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementwm[]=wm.getSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRowsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,metrics.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[index].getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),parameters[i]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),parameters[i].length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumnCount(),parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.toArray(newWeightedMeasurement[cols.size()+1]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.toArray(newWeightedMeasurement[cols.length()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.toArray(newWeightedMeasurement[labels.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,metrics.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,measurements[i].getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i],wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,measurement[i].getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=newWeightedMeasurement[wm.cols()];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=newWeightedMeasurement[wm.getCols()];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()/2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());cols=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());doublecols=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toArray(newSizedMeasurement[cols.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toArray(newSizedMeasurement[wm.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getRowCount(),parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getRowCount(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,parameters.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumnCount(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doubleindex=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doubleindex=-Math.exp(wm.getIndex());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()/1);intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm,parameters.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()*2-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=parameters.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getRows()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),parameters.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),parameters[wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),i,wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()*2-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementfactor=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());intcols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());intcols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());cols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumn(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumn(),jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getValue(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm,parameters.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getSize()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getSize()*parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),parameters.getColumnCount());intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),cols);intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.getPartials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize(i,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize(i,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Mathfactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFieldType(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,parameters.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFieldType(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),parameters.getColumnsCount());intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),cols);intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight()+1)+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWidth())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[index].getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=parameters.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,dataArea,wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRows()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getCols(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getCols(i,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getWidth());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getWidth());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWidth(),wm.getValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[index].getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,measurements[i].getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i],wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getFieldType(),jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getColls();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.colls();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[index].getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i],wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,measurements.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getColumns(i,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getColumns(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=newSizedMeasurement[wm.cols()];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=jacobian.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=newSizedMeasurement[wm.getCols()];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWidth());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=parameters.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=parameters,wm.getSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()*2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getScale(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getScale(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,dataArea,wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getCols()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getCols()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);doublefactor=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);Doublefactor=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);doublecoefficient=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);intcols=wm.getWeight()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=parameters.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=costEvaluations.getColumnIndex(wm);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnIndex(costEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=CostEvaluations.getColumnIndex(wm);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,parameters.getFull());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFull(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFull(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize()*2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeightEvaluation(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getWeightEvaluation());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getWeightEvaluation());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[index].getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,metrics.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;doublefactor=-Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;Doublefactor=-Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;doublecoefficient=-Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;intcols=wm.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,dataArea,wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,metrics.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()*2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()*2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=newWeightedMeasurement[wm.columns()];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=newWeightedMeasurement[wm.getColumns()];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,parameters.columns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());Doublefactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());doublefactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());doublecoefficient=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());double[]cols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),parameters.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getFullDuration(),wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),i,wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Math.sqrt(wm.getWeight(),i+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Math.sqrt(wm.getWeight()-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=parameters.getColumnSize()*wm.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()*parameters[i];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()*parameters[i].length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,parameters.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getColumn(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getRow());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,measurements[i].getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i]?wm.getScale():0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.toSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());Doublecols=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublecols=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());cols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFieldType(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFieldType(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=newSizedMeasurement(wm.cols());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Sizefactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[index].getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getRowValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,measurements[i].getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i],wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,measurements[i].getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.cloneTree();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getRowCount(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getRowCount(),metrics);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getSize()+index;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getScale(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnIndex(index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=parameters[wm.getColumnSize()*wm.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()*parameters[index].length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());doublecols=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getRowSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementwm[]=wm.toSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getTree();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getColumn(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getColumn(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm,parameters.getCols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getRowValue(i));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFieldType(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getRowValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()*2+index;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=parameters.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Dimensionfactor=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=parameters.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getSize(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=parameters,wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementwm[]=wm.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.cols()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,i.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getSize(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),metrics);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getSize(),dataArea,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);doublecols=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);doubleindex=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()+1);intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=columns.toArray(newWeightedMeasurement[cols.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=data[wm.toArray(newWeightedMeasurement[cols.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,dataArea,wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getFullDuration(),wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=costEvaluations,wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getColumn(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,dataArea,wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight());Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Matrix.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getSize(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getSize(),costs);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getSizeEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=jacobian.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=parameters.cols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getWeightEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight());intcols=wm.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,wm.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnsCount()*2+index;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnCount()*2+index;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getScale(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getSize(),wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getSize(),wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getRowCount(),parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=parameters.columns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toArray(newSizedMeasurement[columns.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toArray(newSizedMeasurement[wm.getColumns()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.toArray(newSizedMeasurement[size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.getColls();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.colsToSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnSize()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;doublecols=-Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;Doublecols=-Math.sqrt(wm.getWeight())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getFullDuration(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWidth(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),dataArea,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),parametersEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getColls();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.getSize(index,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getFieldType(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());Doublecols=-Math.sqrt(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.sqrt(wm.getWeight());Numbercols=wm.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,dataArea.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,data.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getRowCount(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=parameters.getColumnSize()*wm.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,costEvaluations.getWeightEvaluation());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.colons();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=newSizedMeasurement[wm.cols()];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementwm[]=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,costEvaluations.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()*costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm.columns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getRowSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77Doublefactor=-Math.cos(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getFullDuration(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getFullDuration(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,cost.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(parameters,wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(parameters[i],wm.getRowCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,costEvaluations.getPartials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(Wm.getColumnCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm.getCols(index,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(parameters[i],wm.getScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,cost.getColumn());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(parameters[i],wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getWidth());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWidth(),wm.getHeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.toArray(newWeightedMeasurement[wm.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm.toArray(newWeightedMeasurement[rows.size()]);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getWeight()+1);intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublecols=-Math.exp(wm.getWeight());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getFull(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm,wm.getFull());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getSize(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurement[]cols=wm,index.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),dataArea);intcols=wm.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getFieldType(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters.getSize(),wm.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight(),parameters.getColumnsCount());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.toScale());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFullDuration(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77WeightedMeasurement[]cols=wm,jacobianEvaluations.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getFieldType())+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,cost.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(parameters,wm.getFieldType());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,cost.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(parameters,wm.getFullDuration());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColumnIndex(costEvaluations,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm.getWeight())+1;intcols=wm.getWeight();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doubleindex=-Math.exp(wm.getWeight()+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77intcols=wm.getColsCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getFieldType(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,wm.getRow());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,parameters.getRowSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters[i].getValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getWeight()*2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.exp(wm.getColumn(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77doublefactor=-Math.sqrt(wm,parameters,cost.getSize());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java77SizedMeasurementcols[]=wm,index.getSize()+1;
