projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getResidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,metrics);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurement();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStdMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRsidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.messages();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getSyntheticProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.resiver.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.messages.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getResidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getMean();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS2();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.metadata.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problems.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this.resiver);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.restriction.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),costEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),costEvaluations+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=issues.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(result,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.resistances.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.resistances.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStandardProblem(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problems.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStandardProblem(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),costEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),costEvaluations+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()[0]-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS1();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS3();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(this,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(this,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,data);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStdMeasurements(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),cost,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors()[1];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors()[0].getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnSize()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnSize()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(resistance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(variable);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(this.result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(variable);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,cost,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.resistances.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()*1+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStdMeasurements(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()[1];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()[0]/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStandardMean();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStdMean();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.messages();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.message();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getCols();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColsEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),costEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),cols;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),costEvaluations,parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStdMeasurements(),costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()*1+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.data.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=task.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurement(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurement(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()[0]+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=parameters.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=this.resistance.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getRMS(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getRMS(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMSsidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRsidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowsCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem,parameters.getSyntheticProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problems.getSyntheticProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getSyntheticProblem(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure(),costEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure(),costEvaluations,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(null,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(null,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(this,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(problem,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem()/2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),cost,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),cost+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost,parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getResidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=issues.getResidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRows()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStandardMeasurements(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getRsidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStandardResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(null,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(null,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),costEvaluations,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),errors);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardErrors(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.message.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost,factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(value);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),costEvaluations+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),costEvaluations+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()/2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure(),costEvaluations+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost,parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.measurements.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(null,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors()[0]-problem.getStdErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problems.getStdErrors()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.result.getSyntheticProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(problem,this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.parameters.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurementRestriction();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRMS(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),costEvaluations-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem,parameters.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStandardMeasurements(),costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.resiver.getRMS(problem,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.resiver.getRMS(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=this.resistances.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),costEvaluations+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problems.getMeasurements()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=cost.getRMS(this,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRMS(this,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(this,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),costEvaluations-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),costEvaluations+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),cost+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),dataArea);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS4();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColsRowEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.messages();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),costEvaluations,maxCostEval;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors(),costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameter.getRMS(this,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problems.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.residual;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStdResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(this,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=issues.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStandardMeasurement();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(this,problems);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRsidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColsRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameter.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),costEvaluations,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()*2-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,parameter);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStandardMeasurements(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem(),cost;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),costEvaluations,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()*2-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(remaining);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurement(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnSize()+costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardErrors()-problem.getStandardErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardErrors(),cost;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardErrors(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),costEvaluations,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters!=null?parameters.getRMS(this):problem;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStandardMeasurements(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),cost,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()*2-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.measures.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=measurements.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.data.getRMS(problem,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem,parameters.getResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getMeanEvaluation();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem,parameters.getMean();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(remaining);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(restriction);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problems.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problems.getStdMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors()[0],cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost,factor;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure(),costEvaluations,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),costEvaluations,factor);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem,parameters.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()[0],cost);
