projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getResidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(this,metrics);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumns()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurement();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStdMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRsidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intwm=problem.getMeasurements()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.messages();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRawStructure(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRMS();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem()/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getResidual();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getSyntheticProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getSyntheticProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getRMS(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=this.resiver.getRMS(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.messages.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problems.getResidualMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemwm=problem.getMean();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getResidual(),cost;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.getRMS2();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnEvaluations()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=problem.metadata.getStandardMeasurements();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127int[]measurements=problem.getMeasurements(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getMeasurements()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStandardProblem(),cost;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127EstimationProblemproblem=problem.getStdErrors(),cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problem.getColumnsCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127WeightedMeasurement[]wm=parameters.getRMS(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java127intcols=problems.getColumns();
