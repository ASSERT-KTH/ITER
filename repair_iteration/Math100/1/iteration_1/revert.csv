projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Integercols=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73incrementJacobianEvaluationsCounter();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluationsCounter();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluationsCounter(0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateRowsCounter();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73initJacobianEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluationsCounter();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Arrays.copyOf(jacobian,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(remainders.length,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluations(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluationsCounter(0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0);Arrays.fill(jacobian,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0);Arrays.fill(jacobian,0,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0);Arrays.fill(jacobian,0,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0);Arrays.fill(jacobian,0,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0);Arrays.fill(jocobian,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(rows,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(cols,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluationsCounter(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73UpdateJacobianEvaluationsCounter();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=getRowCount()-cols;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,cols,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,cols,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateRowEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73UpdateJacobianEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluations(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;Integercols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;intcolls=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;introws=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=this.parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Arrays.copyOf(jacobian,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Arrays.copyOf(jacobian,maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Arrays.copyOf(jacobian,jacobianEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Arrays.copyOf(jacobian,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73init();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73initRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73initRowEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,1);Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,1);Arrays.fill(jacobian,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,1);Arrays.fill(jocobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,1);Arrays.fill(jacobian,3);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluations(true);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluations(false,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluationsCounter(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,jacobian.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,null,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,jacobianEvaluations.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateColumnsCounter();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73UpdateRowsCounter();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateRowsCounter(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluationsCounter(1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluationsCounter(1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluationsCounter(2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Integercols=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Integercols=getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Integercols=getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Integercols=getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(index,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(results.length,index);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(remainders.length,index+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(remainders.length,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(cols,0,jacobian);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,cols+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73initMeanEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73initSerials();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,1);Arrays.fill(jacobian,1,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(remainders.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73setJacobianEvaluationsCounter(this.maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;intcolumns=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Arrays.copyOf(jacobian,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateJacobianEvaluations(false);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,metrics.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Integercols=getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0);Arrays.fill(jacobian,1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73initStandardEvaluations();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Arrays.copyOf(jacobian,coefficient);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,row);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73Arrays.fill(jacobian,0,columns);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(remainders.length,parameters.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73introws=Math.min(remainders.length,2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73updateZeroes();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;Intcols=parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java73intcols=parameters.length;intcols=variables.length;
