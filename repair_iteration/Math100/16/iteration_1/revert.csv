projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<min;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=total;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=jTj;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){for(intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){For(intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){for(intk=0;k<rows);k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){for(intk=0;k<columns;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){for(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){For(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){for(intk=0;k<rows);k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){for(intk=0;k<rows;k+=min){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;for(intjTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;JTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;for(inti][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(sum,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){for(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){For(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){for(intk=0;k<rows);k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+jTj.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;intjTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.sqrt(sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;}jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=newdouble[cols][cols];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max);k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()-2;
