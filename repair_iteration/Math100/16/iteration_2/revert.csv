projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<min;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=total;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=jTj;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){for(intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){For(intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){for(intk=0;k<rows);k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){for(intk=0;k<columns;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){for(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){For(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){for(intk=0;k<rows);k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){for(intk=0;k<rows;k+=min){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;for(intjTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;JTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;for(inti][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(sum,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){for(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){For(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){for(intk=0;k<rows);k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=max){(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+jTj.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;intjTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.sqrt(sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=cols){intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;}jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=newdouble[cols][cols];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max);k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,rows.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){intk=0;k<max;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj.length-1,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,sum.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj.length-2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k++){for(intk=0;k<rows);k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(inti][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;for(inti][j]=jTj;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=max;for(inti][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;for(inti][j]=cols;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intk=0;k<cols;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172JTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,cols,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,residuals,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj,sum,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){for(intk=0;k<rows+max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){For(intk=0;k<rows+max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){for(intk=0;k<columns+max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){for(intk=0;k<rows+min;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,cols+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,cols+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,jTj.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){for(intk=0;k<cols;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){For(intk=0;k<cols;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){for(intk=0;k<cols;k+=min){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){intk=0;k<cols;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){(intk=0;k<max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){(intk=0;k<max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+1;k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols+max);k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+2;k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows*max);k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;}elseif(jTj[i][j]>max){jTj[i][j]=max;}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(results.length,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainings.length,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(results.length,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,cols-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,cols-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,cols.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172doublejTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;jTj[i][j]=sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;for(intjTj[i][j]=sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;JTj[i][j]=sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;for(inti][j]=sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172For(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+sum.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+sum,jTj.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(sum,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,sum,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172doublemax=Math.max(jTj,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){for(intk=0;k<max;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){For(intk=0;k<max;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){intk=0;k<max;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){for(intk=0;k<max);k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intjTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intjTj[i][j]=max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intjTj[i][j]=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=min){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=min){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length-1+sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj,max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnCount()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){For(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){For(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){For(intk=0;k<rows;k++){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172For(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<columns;k+=jTj){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,sum,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,cols,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(max,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=jTj){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=max+sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,cols,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){for(intk=0;k<cols;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){For(intk=0;k<cols;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){for(intk=0;k<cols);k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){intk=0;k<cols;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){for(intk=0;k<max;k+=rows){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){For(intk=0;k<max;k+=rows){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){for(intk=0;k<max;k+=columns){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){intk=0;k<max;k+=rows){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(remainder,sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172doublejTj=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(max,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.min(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColsCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.max(jTj[i],max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj.length){for(intk=0;k<cols;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj.length){For(intk=0;k<cols;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj.length){for(intk=0;k<cols);k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj.length){intk=0;k<cols;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.max(remainder,sum,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.min(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.max(jTj,residuals.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.max(remainder,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172doublemax=Math.min(cols,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){for(intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){For(intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){for(intk=0;k<rows);k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){for(intk=0;k<rows;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){for(intk=0;k<columns;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){for(intk=0;k<cols;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){For(intk=0;k<cols;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){for(intk=0;k<cols);k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){intk=0;k<cols;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj.length,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,sum.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows);k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRows().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,cols.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+1;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+2;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+jTj.length;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(sum,jTj.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,jTj.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,cols.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.sqrt(sum,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.sqrt(sum,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.sqrt(sum,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.sqrt(sum+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172For(intk=0;k<cols;k+=jTj){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172For(intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=newdouble[rows][cols];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=newdouble[cols][rows];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=newdouble[cols][max];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length/2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<jTj.length;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(rows,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(remainder,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(result,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumns().length-1+max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length/jTj.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length*jTj.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=value;for(inti][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=newdouble[cols][cols+1];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){(intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){(intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length-1+max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<columns;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){(intk=0;k<max;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,cols,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(rows,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){(intk=0;k<max;k+=rows){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){(intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=cols){intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){intk=0;k<rows;k+=cols){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(rows,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(cols,jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<columns;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnSize()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(cols,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,cols+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,cols-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){(intk=0;k<cols;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,jTj.length,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length-1,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(relatives.length,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;intjTj[i][j]=sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;jTj[i][j]=Sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){(intk=0;k<cols;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(max,sum+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=SumedMeasurement.doubleValue();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=5){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(rows,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=Math.sqrt(sum+2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=2){intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=max){intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=1){intk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;}else{jTj[i][j]=max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+jTj.length;k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=2){(intk=0;k<cols;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=jTj.length){(intk=0;k<cols;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k++){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=2){For(intk=0;k<rows;k+=1){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){intk=0;k<rows+max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+max;k+=jTj.length){(intk=0;k<rows+max;k+=jTj.length){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<min;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length+jTj.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getRowCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(cols,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+jTj;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getAllParameters().length+jTj.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<max;k+=rows){for(intk=0;k<max);k+=rows){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainders.length,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(relatives.length,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172if(jTj!=null){jTj[i][j]=sum;for(inti][j]=0;}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;for(inti][j]=0;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getMeasurements().length-4;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=cost;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.max(remainder,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172doubleresiduals=Math.max(remainder,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intresiduals=Math.max(remainder,jTj,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172doublemax=Math.max(result,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColsCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<columns;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnCount()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172Integerk=0;k<rows;k+=max){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(cols.length,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(result,jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;}jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;}jTj[i][j]=cols;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;}jTj[i][j]=max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intjTj=Math.max(remainder,jTj,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(sum,jTj.length-2);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172For(intk=0;k<cols;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=sum;jTj[i][j]=sum;jTj[i][j],sum;jTj[i][j]=sum;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols.length,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(cols,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(cols,jTj.length-1,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(jTj.length,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(remainder,jTj.length-1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,jTj.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intcols=problem.getColumnsCount()*2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<columns;k+=3){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<columns;k+=j){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,jTj.length,sum);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<cols;k+=3){for(intk=0;k<cols;k+=2){
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=result;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.max(cols,jTj.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172intmax=Math.min(jTj,jTj.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+2);k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows+1);k+=jacobian[k];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172jTj[i][j]=newdouble[cols][cols].doubleValue();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java172for(intk=0;k<rows;k+=){
