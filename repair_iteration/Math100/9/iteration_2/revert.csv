projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ime.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ime.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableFormat.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableValues.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableSet.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(result.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateParentPointerime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;introws=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;Integerrows=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;introws=problem.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;introws=problem.getSize().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getAllParameters().length;finalintrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getAllParameters().length;introws=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getAllParameters().length;Finalintrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getAllParameters().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.ime.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.results.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problems.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds()+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),max;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException("Squareerror:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getColumns().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparse:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("Result");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result".toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.results.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardWarnings();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;InvalidMatrixExceptionime=ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;finalintrows=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.chiSquare);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),costEvaluations.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problems.getRanges().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=ime.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=parameters.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problems.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),residuals;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixIndexOutOfBounds();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRanges().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=ime.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException(".");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRangeParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("problem");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problems.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImetarExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(mean);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowSize().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),dataArea.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),rowCount;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=ime.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problems.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=issue.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardMatrixOutOfBounds();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(mean);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getAllParameters().length;finalintrows=problem.getallParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Imerialsime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problem.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=parameters.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=residuals.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=this.results.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableSetUtil.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableSetUtil.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmutableSetime=ImmutableSet.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165nullrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.mean.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.message.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.results,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.results,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.results,this.maxCostEval);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException("".equals(problem.getMatrix()));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException("",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result","jTj",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result",jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result",jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getColumnCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Integerrows=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRanges();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRanges().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRanges().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowCount()-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.results.getInvalidMatrixException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Imerialsime=this.results.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRowCount();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getColumnCount()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRowCount()*2-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariables.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardMatrixOutOfBounds(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardMatrixOutOfBounds(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.restriction.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.result.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameters.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparse:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparse:"+jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparse:"+result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this.results,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this.results,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this.results,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this.results,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(),problems);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowCount();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165nullrows=problem.getRowCount();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(jTj,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Imerialsime=problem.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableValues.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmutableValuesime=ImmutableValues.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableValues.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardWarnings(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardErrors();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardWarnings(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(jTj,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165nullrows=problem.getMeasurements().length;ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165nullrows=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateParentPointerime=problem,parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateParentPointerime=problems.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length-1+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Imerialsime=problem.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInstanceException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getMeasurements().length;InvalidMatrixExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(),problems);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem,parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problems.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getIMerialMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Integerrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),max+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),max,parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),max,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateParentPointerime=parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),parameters.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),parameters.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),parameters.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),0,parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.mean.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.message.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrixException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrixException("",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),dataArea,residuals;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),variables;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null,null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null,null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null,null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("Result",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("Jacobianerror");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(this,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(this,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),problems);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(message,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(message,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(message,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),maxCostEval;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),0,costEvaluations.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(this,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(this,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(this,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImetarExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImetarExceptionime=problems.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException("Squareerror:"+jTj,criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException("Squareerror:"+jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException("Squareerror:"+jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),dataArea.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),dataArea.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),dataArea.length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165nullrows=problem.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowSize();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowSize().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getColumnSize().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(variance,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException(",n");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException(",",null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();e.printStackTrace();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();Exceptione=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.problem.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getColumns();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=this.ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=this.results.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problems.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.mean.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.message.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Rowscannotberemoved");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Rowsarenotinrange");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Rowscannotbedeprecated.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Rowscannotbedeprecated.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Rowscannotberemoved");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Rowsarenotinrange");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows,column);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableSet.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows().length/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getColumns().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows().length-2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;introws=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;Integerrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;introws=problem.getParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;introws=problem.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),Math.max(remainings.length,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),Math.max(results.length,max);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Integerrows=problem.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInstance(jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInstance(variance);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=problem.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.restriction.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Imerialsime=this.results.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableSet.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableFormat.getInstance(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixIndexOutOfBounds(),parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixIndexOutOfBounds(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,i);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),cols;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),rowCount+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),0,rowCount;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),index;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges()-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.problem.getRanges();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows,column);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(result,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("problem",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableFormat.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmutableFormatime=ImmutableFormat.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableFormat.getInstanceUTC();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Invalidparameter:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectederror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectederror:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result").toString();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("Result").toString();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:",jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problem.getInvalidMatrixException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=issue.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameters.getRanges().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameter.getRanges().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(jTj,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=error.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=residuals.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=this.ime.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getColumns(),cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getSize().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(result.length+1);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(problem.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(reason.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:"+jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:"+parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(message,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(message,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(message,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows().length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();FinalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(result.getAllParameters().length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalintcols=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),width;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(variances,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameters.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.restriction.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.problem.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=residuals.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=parameters.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=errorMatrix.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(variances,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(variances,variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRangeParameters();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRangeParameters(),parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRangeParameters().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance(this.result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem,parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrixException(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(message,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(message,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(this.rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(this,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(this.results,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj,jTj.intValue());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(ex.getMessage());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ExitStatisticsExceptionex=newExitStatisticsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,this.criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem,parameters.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problems.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrix(),parameters;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),dataArea,rowCount;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableValues.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableValues.getInstance(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problems.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(null,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(null,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=residuals.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=this.problem.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds()[0];
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),parameters.length+2;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows().length;Integerrows=problem.getMeasurements().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(mean,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameters.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problems.getRows();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImegMatrixExceptionime=problem.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowSize(),costEvaluations.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowSize(),length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),residuals,costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.measure.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameters.getColumnCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameter.getRows().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this,estimations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateParentPointerime=ProblemUtil.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateParentPointerime=problematic.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableSetUtil.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableSetUtilities.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),costEvaluations.length+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problems.getRows().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(problem,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();e.setIndexOutOfBoundsException(e);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();e.initCause(JavaScriptConstants.EXPR_RESULT);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException().initCause(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException().init(rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("JacobianProblem");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("JavaScriptException");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRowCount()/1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length+1L;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRangeParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(message,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(jTj,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException("Squareerror:"+jTj,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(this,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=issue.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+jTj,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this.results,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance(problem,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this,variables);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(null,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardMatrixOutOfBounds(),residuals;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result",jTj,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrixException("",criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("problem.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.results.getRanges().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;InvalidMatrixExceptionime=ime.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=residuals.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=parameters.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("Expectedanerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(",");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("",0));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problems.getRanges().length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),costEvaluations;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),max,residuals;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(),costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:"+problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problems.getRangeParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.results,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Finalintrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(this.rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=residuals.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Exampleerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Exampleerror:"));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=parameter.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImetarExceptionime=issue.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInstance(null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInstance(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(this,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(this,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newjava.util.ArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();Ex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.measure.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.measure.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result",jTj.toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("result".toString(),residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(mean,residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRanges(),costEvaluations.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problems.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problem.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=problem.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=residuals.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(rows.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(this.result.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(jTj,iSquare);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=parameter.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",residuals);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable:"+problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows(),length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=problem.getInvalidMatrixException(".");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165if(problem.getAllParameters()!=null){finalintrows=problem.getAllParameters().length;introws=problem.getAllParameters().length;}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameters.getRanges();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problems.getRanges();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(this.results,rows,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(null,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=this.results.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=residuals.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problems.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=parameters.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=problems.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparse:"+parameters,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparse:"+problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=issue.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableFormat.getInstance(variances);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableFormat.getInstance(this.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,costEvaluations);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixIndexOutOfBounds(),residuals;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Expectedrow:n");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Expectedrowrows:n");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),max,parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.restriction.getRanges().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();Exceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Exampleerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this,problem.results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException("".equals(problem.getInvalidMatrixException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException("".equals(problem));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparse:"+problem,parameters);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=ime,problem.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=issue.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(),parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Integerrows=problem.getMeasurements().length;ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("Success");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem("JavaScripterror");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges().length/2+1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(message,result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(problem,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=ime,problem.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException(",",criterion);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem.getInvalidMatrixException(",null");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.results.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165nullrows=problem.getAllParameters().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),errorResults);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),errorRestriction);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finaljava.util.ArrayIndexOutOfBoundsExceptionex=newjava.util.ArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();finalArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableValues.getInstance(variants);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanon-functionproblem.");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem,parameters.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Exceptione=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(message,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165if(problem.getAllParameters()!=null){finalintrows=problem.getAllParameters().length;finalintrows=problem.getAllParameters().length;}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(message,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getInvalidMatrixException(message,sourceName);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Errorreadingvariableresiduals:n");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImeUtil.getInstance(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(result,dataset.length);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem,parameters.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRows(),cols.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException();ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError()*1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(message,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getProblem(),parameters,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRanges(),costEvaluations.length-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165e.printStackTrace();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Exceptione=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Expectedanerror:"+"expectedanerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardWarnings(message);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardWarnings(this);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardParameters();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=this.results.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(mean,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.problems.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRanges(),parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;booleanrows=problem.getAllParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;introws=problem.getallParameters().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException(null,null,0);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=problem.getRows(),rowCount-1;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=ime,problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowSize(),dataArea.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getRowSize(),parameters.length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Expectedrow:n");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException("Expectedanerror:");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(this.chiSquare,this.period);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165Integerrows=problem.getMeasurements().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this,dataArea);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this,errorRestriction);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=Ime.getInstance(this.result);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(problem,null);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBoundsException("Failedtoparsevariable.",error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=ImmutableFormat.getInstance(results);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165if(problem.getAllParameters()!=null){finalintrows=problem.getAllParameters().length;introws=problem.getAllParameters().length;}else{returnsuper.getCovariances();}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerializationExceptionime=problem.getInvalidMatrixException("");
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem,parameters.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problems.getInstance();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImmediateParentPointerime=issue.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.problems.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=problem,parameters.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(message,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException(message,sourceName);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165if(problem.getAllParameters()!=null){finalintrows=problem.getAllParameters().length;Finalintrows=problem.getAllParameters().length;}
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameter.getRowCount();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialMatrixExceptionime=error.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getAllParameters().length;ArrayIndexOutOfBoundsExceptionex=newArrayIndexOutOfBoundsException(""));
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixOutOfBounds(),parameters,chiSquare);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=ime.getMeasurements().length;InvalidMatrixExceptionime=problem.getInvalidMatrixException();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165InvalidMatrixExceptionime=this.problems.getInvalidMatrix();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardError(jTj,jTj.toString());
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165introws=problem.getColumns().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this,errorRestriction);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this,error);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(cols,rows);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(this,cols);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixIndexInOfBounds();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getMatrixException("Squareerror:"+jTj,jTj);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=Ime.getInstance(this.results,problem);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165EstimationProblemproblem=ime.getStandardProblem(),parameters,cost);
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=this.problem.getColumns().length;
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165ImerialsExceptionime=system.getImmediateParentPointer();
projects/Math100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java165finalintrows=parameter.getRanges();
