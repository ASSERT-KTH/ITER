patch is same with buggy,54,replace,,super(); ,super();
compilation error,54,replace,[CE] constructor Object in class Object cannot be applied to given types;,super(); ,super(">");
compilation error,54,add,[CE] constructor StandardToolTipTagFragmentGenerator in class StandardToolTipTagFragmentGenerator cannot be applied to given types;,,this(null);
compilation error,54,add,[CE] constructor StandardToolTipTagFragmentGenerator in class StandardToolTipTagFragmentGenerator cannot be applied to given types;,,this(null, null);
compilation error,65,replace,[CE] ,return " title=\"" + toolTipText + "\" alt=\"\""; ,return""" + toolTipText +"" alt=""";
compilation error,65,replace,[CE] missing return statement,return " title=\"" + toolTipText + "\" alt=\"\""; , 
compilation error,55,replace,[CE] illegal start of expression,} ,if(this.tagFragment!= null) { this.tagFragmentGenerator = new StandardToolTipTagFragmentGenerator(); } else { this.tagFragmentGenerator = new StandardToolTipTagFragmentGenerator(); }
compilation error,55,replace,[CE] illegal start of expression,} ,if(getToolTipTags().isEmpty()) { this.toolTipTagFragmentGenerator = new StandardToolTipTagFragmentGenerator(); }
compilation error,55,replace,[CE] illegal start of expression,} , 
compilation error,55,add,[CE] cannot find symbol tagFragment,,if(this.tagFragment!= null) { this.tagFragmentGenerator = new StandardToolTipTagFragmentGenerator(); }
compilation error,65,add,[CE] cannot find symbol,,if(toolTipText instanceof StandardToolTipTagFragment) { ToolTipTagTagFragmentGenerator.generateToolTipTagFragment(toolTipText); }
compilation error,65,add,[CE] ,,if(toolTipText instanceof StandardToolTipTagFragment) { ToolTipTagTagFragmentGenerator.generateToolTipTagFragment(toolTipText); } else { toolTipTagFragmentGenerator = new StandardToolTipTagFragmentGenerator
compilation error,65,add,[CE] ,,if(toolTipText instanceof StandardToolTipTagFragment) { ToolTipTagTagFragmentGenerator.generateToolTipTagFragment(toolTipText); } else { toolTipTagFragmentGenerator = new StandardToolTipTag
compilation error,55,add,[CE] cannot find symbol,,if(super.isStandardToolTip()) { throw new IllegalArgumentException(""); }
compilation error,55,add,[CE] cannot find symbol,,if(super.isStandardToolTip()) { throw new IllegalArgumentException(""); } else { Preconditions.checkNotNull(standardToolTipTagFragmentGenerator()); }
compilation error,55,add,[CE] cannot find symbol,,if(super.isStandardToolTip()) { StandardToolTipTagFragmentGenerator(); } else { this.tagFragmentGenerator = new StandardToolTipTagFragmentGenerator(); }
compilation error,54,add,[CE] cannot find symbol,,Preconditions.checkNotNull(StandardToolTipTagFragmentGenerator());
compilation error,54,add,[CE] cannot find symbol,,Preconditions.checkNotNull(StandardTipTagFragmentGenerator());
patch is same with buggy,54,replace,,super(); ,super();
compilation error,54,replace,[CE] constructor Object in class Object cannot be applied to given types;,super(); ,super(" { ");
compilation error,65,add,[CE] reached end of file while parsing,,if(toolTipText!= null) { if(toolTipText.length() == 0) { throw new IllegalArgumentException(""); }
compilation error,65,add,[CE] reached end of file while parsing,,if(toolTipText!= null) { if(toolTipText.length() == 0) { toolTipText = ToolTipText.substring(0, toolTipText.length() - 2); }
compilation error,65,add,[CE] cannot find symbol Validate,,Validate.isTrue(toolTipText.length() == 0);
compilation error,65,replace,[CE] ,return " title=\"" + toolTipText + "\" alt=\"\""; ,return""" + toolTipText +"" alt="""";
compilation error,55,replace,[CE] illegal start of expression,} ,setBaseToolTipGenerator(new StandardToolTipTagFragmentGenerator());
compilation error,55,replace,[CE] illegal start of expression,} ,setBaseToolTipGenerator(new DefaultToolTipTagFragmentGenerator());
compilation error,65,add,[CE] cannot find symbol Validate,,Validate.notNull(toolTipText);
compilation error,65,add,[CE] cannot find symbol Validate,,Validate.notNull(toolTipText); this.toolTipText = toolTipText;
compilation error,65,add,[CE] cannot find symbol Validate,,Validate.notNull(toolTipText); this.toolTipText = toolTipText.toString();
patch is same with buggy,54,replace,,super(); ,super();
compilation error,54,replace,[CE] cannot find symbol,super(); ,checkInvariant();
compilation error,55,add,[CE] cannot find symbol Feature,,if(isEnabled(Feature.AUTO_CLOSE_TARGET)&& isEnabled(Feature.FLAG_DEFAULT_LOAD_FACTOR)) { this.tagFragmentGenerator = new StandardToolTipTagFragmentGenerator(); }
compilation error,55,add,[CE] cannot find symbol Feature,,if(isEnabled(Feature.AUTO_CLOSE_TARGET)&& isEnabled(Feature.FLAG_DEFAULT_LOAD_FACTOR)) { this.toolTipTagFragmentGenerator = new StandardToolTipTagFragmentGenerator(); }
compilation error,55,add,[CE] ';' expected,,if(isEnabled(Feature.AUTO_CLOSE_TARGET)&& isEnabled(Feature.FLAG_DEFAULT_LOAD_FACTOR)) { this.toolTipTagFragmentGenerator = new StandardToolTipTagFragmentGenerator()); }
compilation error,65,replace,[CE] ,return " title=\"" + toolTipText + "\" alt=\"\""; ,return" title="" + toolTipText + "" alt="""";
compilation error,65,replace,[CE] ,return " title=\"" + toolTipText + "\" alt=\"\""; ,return" title="" + toolTipText + "" alt=""";
compilation error,54,add,[CE] constructor StandardToolTipTagFragmentGenerator in class StandardToolTipTagFragmentGenerator cannot be applied to given types;,,this("n");
compilation error,55,replace,[CE] illegal start of expression,} ,if(isEnabled(Feature.AUTO_CLOSE_TARGET)) { throw new IllegalArgumentException(""); }
compilation error,55,replace,[CE] illegal start of expression,} ,if(isEnabled(Feature.QUOTE_FIELD_NAMES)) { throw new IllegalArgumentException(""); }
