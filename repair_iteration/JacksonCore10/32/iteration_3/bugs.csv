bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
2	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  offset2.length;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  offset2.length;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  offset2.length;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2.length;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
3	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  offset2.length;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  offset2.length;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  offset2.length;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2.length;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
4	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  offset2.length;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  offset2.length;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  offset2.length;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2.length;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
5	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    bucketSize;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    bucketSize;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    bucketSize;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  offset2));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  offset2));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  offset2));	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
9	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  _secondaryStart));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  _secondaryStart));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  _secondaryStart));	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
10	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(16,  Math.pow(16,  bucketSize));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(16,  Math.pow(16,  bucketSize));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(16,  Math.pow(16,  bucketSize));	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
11	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  bucketSize;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  bucketSize;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  bucketSize;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _secondaryStart;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
12	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _secondaryStart;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
13	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart  +  2;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart  +  2;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart  +  2;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _secondaryStart;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
14	[BUG]  [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
15	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketOffset);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketOffset);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucketOffset);	  final    int    bucketSize    =    (1    <    <    _seed);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
16	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _seed  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _seed  +  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _seed  +  1);	  final    int    bucketSize    =    (1    <    <    _seed);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _count);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _count);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _count);	  final    int    bucketSize    =    (1    <    <    _seed);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
18	[BUG]  [BUGGY]  for(int  offset2  =  _spilloverEnd  +  1;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _spilloverEnd  +  1;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _spilloverEnd  +  1;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
22	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
23	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
24	[BUG]  [BUGGY]  for(int  offset2  =  _seed  +  offset2;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _seed  +  offset2;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _seed  +  offset2;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
25	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
26	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
27	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
28	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  3;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  3;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  3;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    2;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  0;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  0;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  0;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    2;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  offset2)/  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  offset2)/  _secondaryStart);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  offset2)/  _secondaryStart);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize)/    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
31	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(16,  Math.pow(16,  bucketSize)/  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(16,  Math.pow(16,  bucketSize)/  _secondaryStart);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(16,  Math.pow(16,  bucketSize)/  _secondaryStart);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize)/    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
32	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart  +  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart  +  1);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize)/    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
33	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  for(int  offset2  =  _spilloverEnd  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _spilloverEnd  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _spilloverEnd  +  1;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  -  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  -  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  -  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    -    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
36	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  1;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2    -    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
37	[BUG]  [BUGGY]  for(int  offset2  =  _offset2  -  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _offset2  -  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _offset2  -  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    -    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
38	[BUG]  [BUGGY]  for(int  offset2  =  _count  -  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count  -  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count  -  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    -    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
39	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryEnd;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryEnd;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryEnd;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryEnd;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryEnd;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryEnd;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryEnd;  offset2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryEnd;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryEnd;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
42	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  for(int  offset2  =  0;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  0;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  0;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    bucketSize    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
45	[BUG]  [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count  +  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    bucketSize    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
46	[BUG]  [BUGGY]  for(int  offset2  =  _bucketSize  +  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _bucketSize  +  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _bucketSize  +  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    bucketSize    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
47	[BUG]  [BUGGY]  for(int  offset2  =  _count;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
48	[BUG]  [BUGGY]  for(int  offset2  =  _offset;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _offset;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _offset;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
49	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
50	[BUG]  [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1  +  1;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset1    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
51	[BUG]  [BUGGY]  for(int  offset2  =  offset1;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset1    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
52	[BUG]  [BUGGY]  for(int  offset2  =  offset1;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset1    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
53	[BUG]  [BUGGY]  for(int  offset2  =  offset1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset1    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
54	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _count;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
55	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  0;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  0;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  0;  offset2)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _count;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
56	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _seed;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    offset2;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
57	[BUG]  [BUGGY]  for(int  offset2  =  offset2  /  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  /  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  /  _seed;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    offset2;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
58	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart  +  1;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _secondaryStart;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _secondaryStart;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart  +  1;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
61	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
63	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
64	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
65	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
66	[BUG]  [BUGGY]  for(int  offset2  =  _spilloverEnd  +  2;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _spilloverEnd  +  2;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _spilloverEnd  +  2;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
67	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  0;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  0;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  0;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    =    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed.length;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed.length;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed.length;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    =    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed.length;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed.length;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed.length;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    =    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    bucketSize;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
72	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  1;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    bucketSize;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
73	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
74	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
75	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
76	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
77	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize  +  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucketSize  +  1);	  final    int    bucketSize    =    (1    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
78	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize)+  1;  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucketSize)+  1;	  final    int    bucketSize    =    (1    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
79	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize)-  1;  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucketSize)-  1;	  final    int    bucketSize    =    (1    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
80	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _seed;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _seed;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  _seed;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _seed;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  for(int  offset2  =  _seed  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _seed  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _seed  +  1;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _seed;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
83	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
84	[BUG]  [BUGGY]  for(int  offset2  =  0;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  0;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  0;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
85	[BUG]  [BUGGY]  for(int  offset2  =  _count;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
86	[BUG]  [BUGGY]  for(int  offset2  =  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  1;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
87	[BUG]  [BUGGY]  for(int  offset2  =  _count  +  _count;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count  +  _count;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count  +  _count;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
88	[BUG]  [BUGGY]  final  int  len2  =  _longNameOffset  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _longNameOffset);  final  int  bucketSize  =(1  <  <  _longNameOffset);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _longNameOffset  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _longNameOffset);  final  int  bucketSize  =(1  <  <  _longNameOffset);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _longNameOffset  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _longNameOffset);  final  int  bucketSize  =(1  <  <  _longNameOffset);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    final    int    bucketSize    =(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
89	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  32)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  32)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  32)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    final    int    bucketSize    =(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  3)  <  <  2);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  3)  <  <  2);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryShift  +  ((  offset  >>  3)  <  <  2);  final  int  bucketSize  =(1  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    final    int    bucketSize    =(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
91	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  3)  <  <  2);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  3)  <  <  2);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  3)  <  <  2);  final  int  bucketSize  =(1  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    final    int    bucketSize    =(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
92	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
93	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
94	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
95	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (bucketSize  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (bucketSize  +  2))  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  (bucketSize  +  2))  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
96	[BUG]  [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  2);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
97	[BUG]  [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  2);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
98	[BUG]  [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  8);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  8);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
99	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
100	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
101	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  _secondaryStart;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  _secondaryStart;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  _secondaryStart;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
102	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed.length;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
103	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    bucketSize;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
104	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
105	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
106	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _bucketSize;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
107	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
108	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
109	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart  +  bucketSize;  offset2  <  offset2;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart  +  bucketSize;  offset2  <  offset2;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart  +  bucketSize;  offset2  <  offset2;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
110	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  8;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  8;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  8;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
111	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(offset2  -  bucketSize));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(offset2  -  bucketSize));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  (int)(offset2  -  bucketSize));	  final    int    bucketSize    =(int)Math.pow(10,    (int)(bucketSize    -    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
112	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  -  offset2));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  -  offset2));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  -  offset2));	  final    int    bucketSize    =(int)Math.pow(10,    (int)(bucketSize    -    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
113	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  /  bucketSize));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  /  bucketSize));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  /  bucketSize));	  final    int    bucketSize    =(int)Math.pow(10,    (int)(bucketSize    -    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
114	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(_secondaryStart  -  bucketSize));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(_secondaryStart  -  bucketSize));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  (int)(_secondaryStart  -  bucketSize));	  final    int    bucketSize    =(int)Math.pow(10,    (int)(bucketSize    -    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
115	[BUG]  [BUGGY]  final  int  bucketSize  =(offset  <  <  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(offset  <  <  2);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(offset  <  <  2);	  final    int    bucketSize    =(offset    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
116	[BUG]  [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucketSize  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucketSize  +  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(offset  <  <  _bucketSize  +  1);	  final    int    bucketSize    =(offset    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  final  int  bucketSize  =(offset  <  <  4);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(offset  <  <  4);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(offset  <  <  4);	  final    int    bucketSize    =(offset    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
118	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket  +  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucket  +  1);	  final    int    bucketSize    =    (1    <    <    _bucket);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
119	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket.length);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucket.length);	  final    int    bucketSize    =    (1    <    <    _bucket);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
120	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket  +  offset2);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket  +  offset2);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucket  +  offset2);	  final    int    bucketSize    =    (1    <    <    _bucket);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
121	[BUG]  [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucket);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucket);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(offset  <  <  _bucket);	  final    int    bucketSize    =    (1    <    <    _bucket);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
122	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  _secondaryStart);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  _secondaryStart);	  final    int    bucketSize    =(int)Math.pow(10,    bucketSize);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
123	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  offset2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  offset2);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  offset2);	  final    int    bucketSize    =(int)Math.pow(10,    bucketSize);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
124	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  bucketSize  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  bucketSize  -  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  bucketSize  -  1);	  final    int    bucketSize    =(int)Math.pow(10,    bucketSize);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
125	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  HASH_SIZE);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  HASH_SIZE);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  HASH_SIZE);	  final    int    bucketSize    =(int)Math.pow(10,    bucketSize);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
126	[BUG]  [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count  +  1;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _count;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
127	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _count;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  _count;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  _count;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _count;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
128	[BUG]  [BUGGY]  for(int  offset2  =  _hashSize  +  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _hashSize  +  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _hashSize  +  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    bucketSize    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
129	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart  +  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart  +  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    bucketSize    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
130	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(1,  Math.pow(10,  bucketSize)/  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(1,  Math.pow(10,  bucketSize)/  _secondaryStart);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(1,  Math.pow(10,  bucketSize)/  _secondaryStart);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize)/    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
131	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  8;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  8;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  8;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
132	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  8);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
133	[BUG]  [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryShift  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  8);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
134	[BUG]  [BUGGY]  for(int  offset2  =  offset1  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
135	[BUG]  [BUGGY]  for(int  offset2  =  offset2  *  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  *  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  *  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
136	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  _secondaryStart;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _secondaryStart;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
137	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _count;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
138	[BUG]  [BUGGY]  for(int  offset2  =  offset1  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
139	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  3)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  3)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  3)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    final    int    bucketSize    =(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
140	[BUG]  [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  3)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryShift  +  ((  offset  >>  3)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryShift  +  ((  offset  >>  3)  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    final    int    bucketSize    =(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
141	[BUG]  [BUGGY]  for(int  offset2  =  offset2  *  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  *  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  *  _seed;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    offset2;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
142	[BUG]  [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {	  for(int    offset2    =    offset1    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
143	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  8)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  8)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  8)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    bucketSize;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
144	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    bucketSize;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
145	[BUG]  [BUGGY]  final  int  bucketSize  =(offset  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(offset  <  <  8);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(offset  <  <  8);	  final    int    bucketSize    =(offset    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
146	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(16,  bucketSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(16,  bucketSize);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(16,  bucketSize);	  final    int    bucketSize    =(int)Math.pow(10,    bucketSize);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
147	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
148	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
149	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket  +  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket  +  2);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucket  +  2);	  final    int    bucketSize    =    (1    <    <    _bucket);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
150	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)-  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)-  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)-  1);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
151	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2!=  _seed;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2!=  _seed;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2!=  _seed;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    =    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
152	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _seed;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _seed;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _seed;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    =    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
153	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
154	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _bucketSize;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _bucketSize;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _bucketSize;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    bucketSize;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
155	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _count;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _count;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  _count;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _count;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
156	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _seed;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _seed;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  _seed;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _seed;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
157	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
158	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  bucketSize;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
159	[BUG]  [BUGGY]  for(int  offset2  =  0;  offset2  <  end;  offset2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  0;  offset2  <  end;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  0;  offset2  <  end;  offset2)  {	  for(int    offset2    =    offset2;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
160	[BUG]  [BUGGY]  for(int  offset2  =  0;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  0;  offset2  <  bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  0;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
161	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
162	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _count;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
163	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _count;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _count;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _count;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
164	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  _count;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  _count;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _count;  offset2  <  _count;  offset2)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _count;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
165	[BUG]  [BUGGY]  for(int  offset2  =  offset2  *  _count;  offset2  <  _count;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  *  _count;  offset2  <  _count;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  *  _count;  offset2  <  _count;  offset2)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _count;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
166	[BUG]  [BUGGY]  for(int  offset2  =  offset2  *  _count;  offset2  <  _count;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  *  _count;  offset2  <  _count;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  *  _count;  offset2  <  _count;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
167	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _count;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _count;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
168	[BUG]  [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _count  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _count  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
169	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
170	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _seed;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _seed;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _seed;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
171	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
172	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  _secondaryStart;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  -  _secondaryStart;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  _secondaryStart;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _secondaryStart;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
173	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  end;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  end;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  end;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
174	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  0;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  0;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  0;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    2;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
175	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2!=  0;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2!=  0;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2!=  0;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    2;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
176	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _secondaryStart);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _secondaryStart);	  final    int    bucketSize    =    (1    <    <    _seed);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
177	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2.length;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
178	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  *  bucketSize));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  *  bucketSize));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  *  bucketSize));	  final    int    bucketSize    =(int)Math.pow(10,    (int)(bucketSize    -    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
179	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
180	[BUG]  [BUGGY]  for(int  offset2  =  _seed  +  _spilloverEnd;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _seed  +  _spilloverEnd;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _seed  +  _spilloverEnd;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
181	[BUG]  [BUGGY]  for(int  offset2  =  offset  +  bucketSize;  offset2  <  _seed;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset  +  bucketSize;  offset2  <  _seed;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset  +  bucketSize;  offset2  <  _seed;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
182	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  1);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  1);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  1);  final  int  bucketSize  =(1  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    final    int    bucketSize    =(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
183	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart  -  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart  -  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart  -  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    -    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
184	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
185	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  3;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  3;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  3;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    _spilloverEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
186	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
187	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
188	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  2;  offset2  <  end;  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  2;  offset2  <  end;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  2;  offset2  <  end;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
189	[BUG]  [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  end;  offset2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  end;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1  +  1;  offset2  <  end;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
190	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  8)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  8)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  8)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
191	[BUG]  [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucketSize)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucketSize)+  1;  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(offset  <  <  _bucketSize)+  1;	  final    int    bucketSize    =(offset    <    <    _bucketSize);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
192	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _secondaryStart;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
193	[BUG]  [BUGGY]  for(int  offset2  =  _seed  +  _spilloverEnd;  offset2  <  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _seed  +  _spilloverEnd;  offset2  <  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _seed  +  _spilloverEnd;  offset2  <  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
194	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart,  _spilloverEnd);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart,  _spilloverEnd);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart,  _spilloverEnd);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize)/    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
195	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart,  _count);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart,  _count);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart,  _count);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize)/    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
196	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  =  _seed;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  =  _seed;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  =  _seed;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    =    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
197	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  =  _seed;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  =  _seed;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  =  _seed;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    =    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
198	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _count;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
199	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize  -  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize  -  1));  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize  -  1));	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
200	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)+  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)+  1);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)+  1);	  final    int    bucketSize    =(int)Math.pow(10,    Math.pow(10,    bucketSize));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
201	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  8)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  8)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  8)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
202	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  2;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  2;  offset2  <  bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  2;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    bucketSize;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
203	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  3;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  3;  offset2  <  bucketSize;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  3;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    bucketSize;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
204	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  hash);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  hash);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  hash);	  final    int    bucketSize    =(int)Math.pow(10,    bucketSize);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
205	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(2,  bucketSize);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =(int)Math.pow(2,  bucketSize);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(2,  bucketSize);	  final    int    bucketSize    =(int)Math.pow(10,    bucketSize);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
206	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _spilloverEnd);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _spilloverEnd);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _spilloverEnd);	  final    int    bucketSize    =    (1    <    <    _seed);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
207	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _seed,  _spilloverEnd);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  bucketSize  =  (1  <  <  _seed,  _spilloverEnd);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _seed,  _spilloverEnd);	  final    int    bucketSize    =    (1    <    <    _seed);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
208	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  2;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  2;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  2;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
209	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _secondaryStart;  offset2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _secondaryStart;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  >=  _secondaryStart;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
210	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryEnd;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryEnd;  offset2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _secondaryEnd;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryEnd;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
211	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    offset2;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
212	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2  +  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2  +  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2  +  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    offset2;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
213	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _seed;    offset2    <    offset2;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
214	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  8)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  8)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  8)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    3)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
215	[BUG]  [BUGGY]  for(int  offset2  =  _seed;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _seed;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _seed;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
216	[BUG]  [BUGGY]  for(int  offset2  =  _secondaryStart;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _secondaryStart;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _secondaryStart;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
217	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    bucketSize;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
218	[BUG]  [BUGGY]  for(int  offset2  =  _seed  +  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _seed  +  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _seed  +  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    bucketSize    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
219	[BUG]  [BUGGY]  for(int  offset2  =  _spilloverEnd  +  _spilloverEnd;  offset2  <  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _spilloverEnd  +  _spilloverEnd;  offset2  <  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _spilloverEnd  +  _spilloverEnd;  offset2  <  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
220	[BUG]  [BUGGY]  for(int  offset2  =  _spilloverEnd  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  _spilloverEnd  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  _spilloverEnd  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    _spilloverEnd;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
221	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (16  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (16  +  2))  <  <  _secondaryShift);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  (16  +  2))  <  <  _secondaryShift);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
222	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  1))  <  <  2);	  final    int    len2    =    _secondaryStart    +    ((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
223	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);      [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  3)  {  [BUGGY]      if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    offset2.length;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
