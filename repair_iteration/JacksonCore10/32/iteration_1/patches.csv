bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  bucketSize;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  =  _seed;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _seed;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  end;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  end;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  end;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  bucketSize;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  bucketSize;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  bucketSize;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _spilloverEnd;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _spilloverEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  2;  offset2)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  2;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  2;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  end;  offset2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  end;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  end;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _secondaryStart;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucketSize);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucketSize);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucketSize);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =(offset  <  <  _bucketSize);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(offset  <  <  _bucketSize);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =  (1  <  <  _bucket);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _bucket);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  final  int  bucketSize  =  (1  <  <  _seed);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =  (1  <  <  _seed);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =  (1  <  <  _seed);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  bucketSize;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  _count;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2.length;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  offset2;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  bucketSize;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  bucketSize  +  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  bucketSize  +  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  -  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryEnd;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryEnd;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  final  int  bucketSize  =(1  <  <  _secondaryShift);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  len2  =  _secondaryStart  +  ((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  bucketSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  bucketSize);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  bucketSize);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryEnd;  offset2)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryEnd;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryEnd;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    end;    offset2)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  for(int  offset2  =  offset2;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  offset2;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryStart;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _secondaryStart;  offset2  <  _secondaryStart;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
43	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  1;  offset2  <  bucketSize;  offset2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  end;  offset2  +=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset1  +  1;  offset2  <  end;  offset2  +=  2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset1  +  1;  offset2  <  end;  offset2  +=  2)  {	  for(int    offset2    =    offset2    +    1;    offset2    <    end;    offset2    +=    2)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _seed;  offset2  <  _spilloverEnd;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _spilloverEnd;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  3)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _count;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _count;  offset2  <  _count;  offset2)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _count;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize));  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize));	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  -  bucketSize));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  -  bucketSize));  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  (int)(bucketSize  -  bucketSize));	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart);  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	final  int  bucketSize  =(int)Math.pow(10,  Math.pow(10,  bucketSize)/  _secondaryStart);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  3)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _seed;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _seed;  offset2  +=  4)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _seed;  offset2  +=  4)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  _spilloverEnd;  offset2  <  _seed;  offset2  +=  4)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _seed;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  3)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);    [BUGGY]  for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  3)  {  [BUGGY]    if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	for(int  offset2  =  offset2  +  bucketSize;  offset2  <  _secondaryStart;  offset2  +=  3)  {	  for(int    offset2    =    offset2    +    bucketSize;    offset2    <    _secondaryStart;    offset2    +=    4)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
