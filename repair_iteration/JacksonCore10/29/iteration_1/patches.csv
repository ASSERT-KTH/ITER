bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift));  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift));	  return    offset;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  return  offset2  +  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +  2;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  2;	  return    offset2    +    3;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  return  _secondaryStart  -  offset2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  _secondaryStart  -  offset2;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  -  offset2;	  return    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  return  offset2,  _secondaryStart;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2,  _secondaryStart;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  _secondaryStart;	  return    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  return  _secondaryStart  +  offset2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  _secondaryStart  +  offset2;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +  offset2;	  return    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  return  offset2  +  _secondaryShift;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +  _secondaryShift;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryShift;	  return    offset2    +    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  return  offset2  +  _secondaryStart  +  3;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +  _secondaryStart  +  3;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryStart  +  3;	  return    offset2    +    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  return  offset2  +  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +  _secondaryStart  +  1;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryStart  +  1;	  return    offset2    +    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  _secondaryShift);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2;	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  return  offset2  +(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +(1  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(1  <  <  _secondaryShift);	  return    offset2    +(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  return  offset2  +(0  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +(0  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(0  <  <  _secondaryShift);	  return    offset2    +(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  return  offset2  +(3  <  <  _secondaryShift)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +(3  <  <  _secondaryShift)+  1;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(3  <  <  _secondaryShift)+  1;	  return    offset2    +(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  1);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  _secondaryShift);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  _secondaryShift  =  _secondaryShift;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  8);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  8);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  3);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  return  offset2  +  _secondaryStart  +  4;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +  _secondaryStart  +  4;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryStart  +  4;	  return    offset2    +    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  return  offset2,  offset2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2,  offset2;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  offset2;	  return    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  _secondaryShift);	  return    offset;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  _secondaryShift));  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  _secondaryShift));	  return    offset;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  offset2  :  0;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  offset2  :  0;	  return    offset;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))  +  _secondaryStart);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))  +  _secondaryStart);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  (_secondaryShift  +  1))  +  _secondaryStart);	  return    offset;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  offset2  :  0;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  offset2  :  0;	  return    offset;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  return  offset2  +  4;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +  4;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  4;	  return    offset2    +    3;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  return  offset2  /(3  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  /(3  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  /(3  <  <  _secondaryShift);	  return    offset2    +(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  return  offset2,  hashArea;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2,  hashArea;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  hashArea;	  return    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  _secondaryShift);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {      [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [BUGGY]    }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
