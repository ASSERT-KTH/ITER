bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);	  offset2    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;	  offset2    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  4);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  4);	  offset2    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  return  offset2  +(3  <  <  _secondaryShift)+  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +(3  <  <  _secondaryShift)+  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(3  <  <  _secondaryShift)+  2;	  return    offset2    +(3    <    <    _secondaryShift)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
5	[BUG]  [BUGGY]  return  offset2  +(3  <  <  _secondaryShift)/  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +(3  <  <  _secondaryShift)/  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(3  <  <  _secondaryShift)/  1;	  return    offset2    +(3    <    <    _secondaryShift)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  return  offset2  +(1  <  <  _secondaryShift)+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +(1  <  <  _secondaryShift)+  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(1  <  <  _secondaryShift)+  1;	  return    offset2    +(3    <    <    _secondaryShift)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2;	  return    offset2    +((    _secondaryStart    +    1)/((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
8	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryEnd  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryEnd  +  2))  <  <  _secondaryShift);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryEnd  +  2))  <  <  _secondaryShift);	  return    offset2    +((    _secondaryStart    +    1)/((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
9	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)/((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
10	[BUG]  [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)/((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
11	[BUG]  [BUGGY]  return  offset2  -  _secondaryStart;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  -  _secondaryStart;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  -  _secondaryStart;	  return    _secondaryStart    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  return  _secondaryStart  -  offset2  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  -  offset2  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  -  offset2  +  1;	  return    _secondaryStart    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  return  _secondaryStart  -  offset2  +  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  -  offset2  +  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  -  offset2  +  3;	  return    _secondaryStart    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  _secondaryShift));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  _secondaryShift));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
18	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
19	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  1);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  1);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
20	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
21	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3;	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
22	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  4;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  4;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  4;	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
23	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3;	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
24	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  4);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  4);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    16);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
25	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    16);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
26	[BUG]  [BUGGY]  return  offset2  +  _secondaryStart  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +  _secondaryStart  +  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryStart  +  2;	  return    offset2    +    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  return  offset2  +  _secondaryShift  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +  _secondaryShift  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryShift  +  1;	  return    offset2    +    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  +  offset2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  +  offset2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  +  offset2);	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
29	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  +  offset2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  +  offset2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  +  offset2;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
30	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  1))  +  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  1))  +  _secondaryStart);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  1))  +  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
31	[BUG]  [BUGGY]  return  offset2  /(0  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  /(0  <  <  _secondaryShift);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  /(0  <  <  _secondaryShift);	  return    offset2    +(0    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
33	[BUG]  [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
34	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  _secondaryShift));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  _secondaryShift));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
35	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  1))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  1))  <  <  _secondaryShift));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  1))  <  <  _secondaryShift));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
36	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
37	[BUG]  [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
38	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2;	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
39	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryShift  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryShift  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1)+((  _secondaryShift  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
40	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryShift  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1)+((  _secondaryShift  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
41	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
42	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryEnd    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  4);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  4);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryEnd    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  return  _secondaryStart  +((  _secondaryEnd  +  1)+((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  _secondaryEnd  +  1)+((  _secondaryStart  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  _secondaryEnd  +  1)+((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryEnd    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  return  offset2,  hashArea,  _secondaryStart;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  hashArea,  _secondaryStart;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  hashArea,  _secondaryStart;	  return    offset2,    hashArea;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
46	[BUG]  [BUGGY]  return  offset2,  hashArea,  _secondaryEnd;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  hashArea,  _secondaryEnd;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  hashArea,  _secondaryEnd;	  return    offset2,    hashArea;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
47	[BUG]  [BUGGY]  return  _secondaryStart,  offset2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart,  offset2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart,  offset2;	  return    offset2,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  return  offset2,  _secondaryStart  +  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  _secondaryStart  +  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  _secondaryStart  +  3;	  return    offset2,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  return  offset2,  _secondaryShift;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  _secondaryShift;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  _secondaryShift;	  return    offset2,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);	  offset2    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    1))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3;	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4;	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  2;	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8;	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
55	[BUG]  [BUGGY]  return  offset2,  offset2  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  offset2  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  offset2  +  1;	  return    offset2,    offset2;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
56	[BUG]  [BUGGY]  return  offset2,  offset2  +  3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  offset2  +  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  offset2  +  3;	  return    offset2,    offset2;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
57	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    1))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
58	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    1))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
59	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    1))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
60	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  1);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  1);	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
61	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  3);	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
62	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
63	[BUG]  [BUGGY]  return  _secondaryStart  +  offset3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +  offset3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +  offset3;	  return    _secondaryStart    +    offset2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
64	[BUG]  [BUGGY]  return  _secondaryStart  +  offset2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +  offset2  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +  offset2  +  1;	  return    _secondaryStart    +    offset2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
66	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  1))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  1))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  1))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
67	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  _secondaryShift  +  1))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  _secondaryShift  +  1))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  _secondaryShift  +  1))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
68	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    3);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  return  offset2  /(1  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  /(1  <  <  _secondaryShift);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  /(1  <  <  _secondaryShift);	  return    offset2    /(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
70	[BUG]  [BUGGY]  return  offset2  /(3  <  <  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  /(3  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  /(3  <  <  2);	  return    offset2    /(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
71	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  return  offset2  +  _secondaryShift  +  3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +  _secondaryShift  +  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryShift  +  3;	  return    offset2    +    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  return  offset2  +  _secondaryShift  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +  _secondaryShift  +  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryShift  +  2;	  return    offset2    +    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  3;	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
75	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  4;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  4;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  4;	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
76	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  2;	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
77	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  3);	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  4);	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  8);	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
81	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  2))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  2))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  >>  (_secondaryShift  +  2))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
82	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryStart;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryStart;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryStart;	  _secondaryShift    =    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
83	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +  1;	  _secondaryShift    =    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
84	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +  2;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +  2;	  _secondaryShift    =    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
85	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +  3;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +  3;	  _secondaryShift    =    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);	  offset2    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    1))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  16);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  16);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  16);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
88	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  8));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  8));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  8));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
89	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  16));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  16));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  16));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  32));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  32));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  1))  <  <  32));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
91	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  _secondaryShift));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  _secondaryShift));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
92	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  8);	  return    offset2    +((    _secondaryStart    +    1)/((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
93	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)/((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
94	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)/((    _secondaryStart    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
95	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    3);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
96	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
97	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
98	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  8));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  8));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  8));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
99	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  16));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  32));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  32));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  32));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
101	[BUG]  [BUGGY]  return  offset2  /(3  <  <  _secondaryShift  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  /(3  <  <  _secondaryShift  +  1);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  /(3  <  <  _secondaryShift  +  1);	  return    offset2    /(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
102	[BUG]  [BUGGY]  return  offset2  +(0  <  <  _secondaryShift  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +(0  <  <  _secondaryShift  +  1);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(0  <  <  _secondaryShift  +  1);	  return    offset2    +(0    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
103	[BUG]  [BUGGY]  return  _secondaryShift  +((  offset  +  1)+((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  offset  +  1)+((  _secondaryStart  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  offset  +  1)+((  _secondaryStart  +  2))  <  <  2);	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
104	[BUG]  [BUGGY]  return  offset2  +(1  <  <  _secondaryShift  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +(1  <  <  _secondaryShift  +  1);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(1  <  <  _secondaryShift  +  1);	  return    offset2    +(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
105	[BUG]  [BUGGY]  return  offset2  +(1  <  <  _secondaryShift  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +(1  <  <  _secondaryShift  +  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(1  <  <  _secondaryShift  +  2);	  return    offset2    +(1    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
106	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  8;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  8;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  8;	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
107	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
108	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  16);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  16);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  16);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    16);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
109	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  8);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    16);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
110	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryShift);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryShift);	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
111	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1))  +  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1))  +  _secondaryStart  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1))  +  _secondaryStart  +  1;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
112	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1))  +  _secondaryStart  +  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1))  +  _secondaryStart  +  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1))  +  _secondaryStart  +  3;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
113	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  8;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  8;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  8;	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
114	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  3;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  3;	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
115	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  8);	  offset2    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
116	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);	  offset2    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  return  _secondaryShift  +((  offset  +  1)+((  _secondaryStart  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  offset  +  1)+((  _secondaryStart  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryShift  +((  offset  +  1)+((  _secondaryStart  +  2))  <  <  2;	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
118	[BUG]  [BUGGY]  return  offset2  +  _secondaryShift  +  4;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +  _secondaryShift  +  4;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +  _secondaryShift  +  4;	  return    offset2    +    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
119	[BUG]  [BUGGY]  return  _secondaryStart  +  offset2  +  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +  offset2  +  3;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +  offset2  +  3;	  return    _secondaryStart    +    offset2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
120	[BUG]  [BUGGY]  return  offset2,  _secondaryEnd;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  _secondaryEnd;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  _secondaryEnd;	  return    offset2,    offset2;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
121	[BUG]  [BUGGY]  return  offset2  +((  offset  >=  (_secondaryShift  +  1))?  offset2  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >=  (_secondaryShift  +  1))?  offset2  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >=  (_secondaryShift  +  1))?  offset2  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
122	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  8);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
123	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  3);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
124	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  8);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
125	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryShift  +((  offset  >>  (_secondaryShift  +  1))  <  <  4);	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
126	[BUG]  [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  _secondaryStart  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
127	[BUG]  [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  4);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  4);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryShift  +  1)+((  _secondaryStart  +  2))  <  <  4);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
128	[BUG]  [BUGGY]  return  offset2,  hashArea  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  hashArea  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  hashArea  +  1;	  return    offset2,    hashArea;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
129	[BUG]  [BUGGY]  _secondaryShift  =  0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  0;	  _secondaryShift    =    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
130	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryEnd  +  2))  <  <  8);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryEnd    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
131	[BUG]  [BUGGY]  return  offset2  +((  _secondaryEnd  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryEnd  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryEnd  +  1)+((  _secondaryStart  +  2))  <  <  _secondaryShift);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryEnd    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
132	[BUG]  [BUGGY]  return  offset2,  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  _secondaryStart  +  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  _secondaryStart  +  1;	  return    offset2,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
133	[BUG]  [BUGGY]  return  offset2,  _secondaryStart  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  _secondaryStart  +  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  _secondaryStart  +  2;	  return    offset2,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
134	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  3);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  3);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  3);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    3);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
135	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
136	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  0  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  0  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  0  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
137	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  _secondaryStart  :  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  _secondaryStart  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  (_secondaryShift  +  2))?  _secondaryStart  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
138	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  0  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  0  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  0  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
139	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  _secondaryStart  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  _secondaryStart  :  0;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  offset  >>  (_secondaryShift  +  1))?  _secondaryStart  :  0;	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))?    offset2    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
140	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  16);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  16);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryShift  +  2))  <  <  16);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    16);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
141	[BUG]  [BUGGY]  return  offset2,  hash;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  hash;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2,  hash;	  return    offset2,    hashArea;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
142	[BUG]  [BUGGY]  _secondaryShift  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;	  _secondaryShift    =    _secondaryShift    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
143	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  1))  <  <  _secondaryShift));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  1))  <  <  _secondaryShift));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  1))  <  <  _secondaryShift));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
144	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  2);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
145	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  8));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  8));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  8));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
146	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  16));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  16));  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  1))  <  <  16));	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    1))    <    <    _secondaryShift));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
147	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryShift  +  2))  <  <  2;	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryShift    +    2))    <    <    3);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
148	[BUG]  [BUGGY]  return  offset2  /(32  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  /(32  <  <  _secondaryShift);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  /(32  <  <  _secondaryShift);	  return    offset2    /(3    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
149	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  8);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)/((  _secondaryStart  +  2))  <  <  8);	  return    offset2    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
150	[BUG]  [BUGGY]  _secondaryShift  =  _count;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _count;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _count;	  _secondaryShift    =    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
151	[BUG]  [BUGGY]  _secondaryShift  =  _calcOffset(hash);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryShift  =  _calcOffset(hash);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryShift  =  _calcOffset(hash);	  _secondaryShift    =    _secondaryShift;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
152	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2;	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
153	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  4;	  _secondaryStart    =    _secondaryStart    +((    offset    >>    (_secondaryShift    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
154	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryStart);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
155	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryEnd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryEnd);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  1))  +  _secondaryEnd);	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
156	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >=  (_secondaryShift  +  1))  +  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >=  (_secondaryShift  +  1))  +  _secondaryStart);  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  >=  (_secondaryShift  +  1))  +  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryShift    +    1))    +    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
157	[BUG]  [BUGGY]  return  offset2  +(0  <  <  _secondaryShift)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +(0  <  <  _secondaryShift)+  1;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +(0  <  <  _secondaryShift)+  1;	  return    offset2    +(0    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
158	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2;  [BUGGY]      }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	return  offset2  +((  _secondaryStart  +  1)+((  _secondaryStart  +  2))  <  <  2;	  return    _secondaryShift    +((    _secondaryStart    +    1)+((    _secondaryStart    +    2))    <    <    2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
