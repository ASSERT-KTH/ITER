bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _names.add(oldNames.length);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(oldNames.length);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(oldNames.length);	  _names.add(oldNames);    	non-compiled	[CE]  	8	None	replace
2	[BUG]  [BUGGY]  _names.remove(oldNames.length);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.remove(oldNames.length);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.remove(oldNames.length);	  _names.add(oldNames);    	non-compiled	[CE]  	8	None	replace
3	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  return;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    return;    }    	non-compiled	[CE]  	12	None	replace
4	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  0)  {  return;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  0)  {  return;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames  ==  null)  {  if(oldNames.length  ==  0)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    return;    }    	non-compiled	[CE]  	12	None	replace
5	[BUG]  [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  1)  {  return;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  1)  {  return;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  if(oldNames.length  ==  1)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    return;    }    	non-compiled	[CE]  	12	None	replace
6	[BUG]  [BUGGY]  _names.put(name,  newName);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.put(name,  newName);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.put(name,  newName);	  _names.add(newName);    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  _names.put(name,  newSize  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.put(name,  newSize  +  1);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.put(name,  newSize  +  1);	  _names.put(name,    newSize);    	non-compiled	[CE]  	9	None	replace
8	[BUG]  [BUGGY]  _names.put(name,  newSize  +  2);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.put(name,  newSize  +  2);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.put(name,  newSize  +  2);	  _names.put(name,    newSize);    	non-compiled	[CE]  	9	None	replace
9	[BUG]  [BUGGY]  _names.put(name,  oldNames);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.put(name,  oldNames);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.put(name,  oldNames);	  _names.put(name,    newSize);    	non-compiled	[CE]  	9	None	replace
10	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
11	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames  ==  null)  {  if(oldNames.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
12	[BUG]  [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  if(oldNames.length  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
13	[BUG]  [BUGGY]  _names[i]  =  name;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names[i]  =  name;  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names[i]  =  name;	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i--)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	5	None	replace
14	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  _names[i]  =  name;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  _names[i]  =  name;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  _names[i]  =  name;  }	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i--)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	5	None	replace
15	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i--)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	5	None	replace
16	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	6	None	replace
17	[BUG]  [BUGGY]  _names.clear();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.clear();  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.clear();	  _names.remove(name);    	non-compiled	[CE]  	14	None	replace
18	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	||(oldNames!=  null  &&  oldNames.length  >  0)||(oldNames.length  >  0))  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    _hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
19	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
20	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
21	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  0,  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
22	[BUG]  [BUGGY]  _hashArea  =  new  int[oldNames.length  +  2];  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _hashArea  =  new  int[oldNames.length  +  2];  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_hashArea  =  new  int[oldNames.length  +  2];	  _hashArea    =    new    int[oldNames.length    +    3];    	non-compiled	[CE]  	3	None	replace
23	[BUG]  [BUGGY]  _names.add(name,  newSize  +  1);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(name,  newSize  +  1);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(name,  newSize  +  1);	  _names.add(name,    newSize);    	non-compiled	[CE]  	13	None	replace
24	[BUG]  [BUGGY]  _names.add(newSize,  name);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(newSize,  name);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(newSize,  name);	  _names.add(name,    newSize);    	non-compiled	[CE]  	13	None	replace
25	[BUG]  [BUGGY]  _names.add(oldNames,  newSize);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(oldNames,  newSize);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(oldNames,  newSize);	  _names.add(name,    newSize);    	non-compiled	[CE]  	13	None	replace
26	[BUG]  [BUGGY]  _names.add(name,  newSize  +  2);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(name,  newSize  +  2);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(name,  newSize  +  2);	  _names.add(name,    newSize);    	non-compiled	[CE]  	13	None	replace
27	[BUG]  [BUGGY]  _names.addAll(oldNames.length);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.addAll(oldNames.length);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.addAll(oldNames.length);	  _names.addAll(oldNames);    	non-compiled	[CE]  	16	None	replace
28	[BUG]  [BUGGY]  _names.addAll(newNames);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.addAll(newNames);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.addAll(newNames);	  _names.addAll(oldNames);    	non-compiled	[CE]  	16	None	replace
29	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames  ==  null)  {  if(oldNames.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
30	[BUG]  [BUGGY]  _hashArea  =  new  int[oldNames.length  +  4];  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _hashArea  =  new  int[oldNames.length  +  4];  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_hashArea  =  new  int[oldNames.length  +  4];	  _hashArea    =    new    int[oldNames.length    +    1];    	non-compiled	[CE]  	4	None	replace
31	[BUG]  [BUGGY]  _hashArea  =  new  int[oldNames.length];  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _hashArea  =  new  int[oldNames.length];  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_hashArea  =  new  int[oldNames.length];	  _hashArea    =    new    int[oldNames.length    +    3];    	non-compiled	[CE]  	3	None	replace
32	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  2;  i  >=  0;  i--)  {  _names[i]  =  name;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  2;  i  >=  0;  i--)  {  _names[i]  =  name;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  2;  i  >=  0;  i--)  {  _names[i]  =  name;  }	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i--)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	5	None	replace
33	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  =  DEFAULT_T_SIZE;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  =  DEFAULT_T_SIZE;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  =  DEFAULT_T_SIZE;  }	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	6	None	replace
34	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  2;  i  >=  0;  i++)  {  _names[i]  =  name;  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  2;  i  >=  0;  i++)  {  _names[i]  =  name;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  2;  i  >=  0;  i++)  {  _names[i]  =  name;  }	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	6	None	replace
35	[BUG]  [BUGGY]  _names.add(oldName);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(oldName);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(oldName);	  _names.add(newName);    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  _names.remove(oldNames);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.remove(oldNames);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.remove(oldNames);	  _names.add(oldNames);    	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  _names.add(newNames);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(newNames);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(newNames);	  _names.add(oldNames);    	non-compiled	[CE]  	8	None	replace
38	[BUG]  [BUGGY]  _names.put(name,  DEFAULT_T_SIZE);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.put(name,  DEFAULT_T_SIZE);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.put(name,  DEFAULT_T_SIZE);	  _names.put(name,    newSize);    	non-compiled	[CE]  	9	None	replace
39	[BUG]  [BUGGY]  _names.removeAll(oldNames);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.removeAll(oldNames);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.removeAll(oldNames);	  _names.addAll(oldNames);    	non-compiled	[CE]  	16	None	replace
40	[BUG]  [BUGGY]  _names.add(name,  oldNames);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(name,  oldNames);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(name,  oldNames);	  _names.add(name,    newSize);    	non-compiled	[CE]  	13	None	replace
41	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length!=  0)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length!=  0)  {  return;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames  ==  null)  {  if(oldNames.length!=  0)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    return;    }    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names!=  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
43	[BUG]  [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names  ==  null)  {  for(int  i  =  0,  hashArea.length  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
44	[BUG]  [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names  ==  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
45	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names!=  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names!=  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  hashArea.length;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
46	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldNames.length  +  2];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldNames.length  +  2];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldNames.length  +  2];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    _hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
47	[BUG]  [BUGGY]  if(_names!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  =  name;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  =  name;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  0;  i++)  {  _names[i]  =  name;  }	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  _names.put(name,  newSize  -  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.put(name,  newSize  -  1);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.put(name,  newSize  -  1);	  _names.put(name,    newSize);    	non-compiled	[CE]  	9	None	replace
49	[BUG]  [BUGGY]  _hashArea  =  new  String[oldNames.length  +  1];  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _hashArea  =  new  String[oldNames.length  +  1];  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_hashArea  =  new  String[oldNames.length  +  1];	  _hashArea    =    new    int[oldNames.length    +    1];    	non-compiled	[CE]  	4	None	replace
50	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  2;  i--)  {  _names[i]  =  name;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  2;  i--)  {  _names[i]  =  name;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldNames.length  -  1;  i  >=  2;  i--)  {  _names[i]  =  name;  }	  if(oldNames!=    null)    {    for(int    i    =    oldNames.length    -    1;    i    >=    0;    i--)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	5	None	replace
51	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(oldNames!=  null)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames  ==  null)  {  if(oldNames!=  null)  {  return;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames  ==  null)  {  if(oldNames!=  null)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    return;    }    	non-compiled	[CE]  	12	None	replace
52	[BUG]  [BUGGY]  if(oldNames!=  null  ||  oldNames.length  ==  0)  {  return;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null  ||  oldNames.length  ==  0)  {  return;  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null  ||  oldNames.length  ==  0)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    return;    }    	non-compiled	[CE]  	12	None	replace
53	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names.addAll(oldNames);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  _names.addAll(oldNames);  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  _names.addAll(oldNames);  }	  _names.addAll(oldNames);    	non-compiled	[CE]  	16	None	replace
54	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names.addAll(oldNames);  }  else  {  _names.addAll(oldNames);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  _names.addAll(oldNames);  }  else  {  _names.addAll(oldNames);  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  _names.addAll(oldNames);  }  else  {  _names.addAll(oldNames);  }	  _names.addAll(oldNames);    	non-compiled	[CE]  	16	None	replace
55	[BUG]  [BUGGY]  if(_names  ==  null)  {  if(oldNames!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names  ==  null)  {  if(oldNames!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names  ==  null)  {  if(oldNames!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
56	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names.add(oldNames);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  _names.add(oldNames);  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  _names.add(oldNames);  }	  _names.add(oldNames);    	non-compiled	[CE]  	8	None	replace
57	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names.add(oldNames);  }  else  {  _names.add(name);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  _names.add(oldNames);  }  else  {  _names.add(name);  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  _names.add(oldNames);  }  else  {  _names.add(name);  }	  _names.add(oldNames);    	non-compiled	[CE]  	8	None	replace
58	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names.add(oldNames);  }  else  {  _names  =  new  String[oldNames.length  +  1];  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  _names.add(oldNames);  }  else  {  _names  =  new  String[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  _names.add(oldNames);  }  else  {  _names  =  new  String[oldNames.length  +  1];  }	  _names.add(oldNames);    	non-compiled	[CE]  	8	None	replace
59	[BUG]  [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names  ==  null)  {  for(int  i  =  0,  hashArea  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
60	[BUG]  [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(_names  ==  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(_names  ==  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  hashArea  =  new  int[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	17	None	replace
61	[BUG]  [BUGGY]  _names.add(name,  newSize  -  1);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  _names.add(name,  newSize  -  1);  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	_names.add(name,  newSize  -  1);	  _names.add(name,    newSize);    	non-compiled	[CE]  	13	None	replace
62	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldHashArea.length  +  1];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldHashArea.length  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldHashArea.length  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    _hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
63	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldSize  +  1];  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldSize  +  1];  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  for(int  i  =  0,  len  =  oldNames.length;  i  <  len;  ++i)  {  _hashArea  =  new  int[oldSize  +  1];  }	  if(oldNames!=    null)    {    for(int    i    =    0,    len    =    oldNames.length;    i    <    len;    ++i)    {    _hashArea    =    new    int[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
64	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names.add(newName);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  _names.add(newName);  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  _names.add(newName);  }	  _names.add(newName);    	non-compiled	[CE]  	7	None	replace
65	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names.add(newName);  }  else  {  _names.add(name);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];      [BUGGY]  if(oldNames!=  null)  {  _names.add(newName);  }  else  {  _names.add(name);  }  [BUGGY]            int  copyCount  =  0;  int[]  q  =  new  int[16];  for  (int  offset  =  0,  end  =  oldEnd;  offset  <  end;  offset  +=  4)  {  int  len  =  oldHashArea[offset+3];  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	if(oldNames!=  null)  {  _names.add(newName);  }  else  {  _names.add(name);  }	  _names.add(newName);    	non-compiled	[CE]  	7	None	replace
