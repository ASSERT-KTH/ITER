bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] q[0] = oldHashArea[offset]; [FE] AssertionFailedError [CONTEXT] int[] q = new int[16]; for (int offset = 0, end = oldEnd; offset < end; offset += 4) { int len = oldHashArea[offset+3]; if (len == 0) { // empty slot, skip continue; } ++copyCount; String name = oldNames[offset>>2]; switch (len) { case 1: [BUGGY] q[0] = oldHashArea[offset]; [BUGGY] addName(name, q, 1); break; case 2: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.8164965809277261	1109	1109	4	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int[] q = new int[16]; for (int offset = 0, end = oldEnd; offset < end; offset += 4) { int len = oldHashArea[offset+3]; if (len == 0) { // empty slot, skip continue; } ++copyCount; String name = oldNames[offset>>2]; switch (len) { case 1: [BUGGY] [BUGGY] q[0] = oldHashArea[offset]; addName(name, q, 1); break; case 2: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.8164965809277261	1109	1109	4	add	
3	[BUG] [BUGGY] addName(name, q, 1); [FE] AssertionFailedError [CONTEXT] for (int offset = 0, end = oldEnd; offset < end; offset += 4) { int len = oldHashArea[offset+3]; if (len == 0) { // empty slot, skip continue; } ++copyCount; String name = oldNames[offset>>2]; switch (len) { case 1: q[0] = oldHashArea[offset]; [BUGGY] addName(name, q, 1); [BUGGY] break; case 2: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.8164965809277261	1110	1110	4	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (int offset = 0, end = oldEnd; offset < end; offset += 4) { int len = oldHashArea[offset+3]; if (len == 0) { // empty slot, skip continue; } ++copyCount; String name = oldNames[offset>>2]; switch (len) { case 1: q[0] = oldHashArea[offset]; [BUGGY] [BUGGY] addName(name, q, 1); break; case 2: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.8164965809277261	1110	1110	4	add	
5	[BUG] [BUGGY] break; [FE] AssertionFailedError [CONTEXT] int len = oldHashArea[offset+3]; if (len == 0) { // empty slot, skip continue; } ++copyCount; String name = oldNames[offset>>2]; switch (len) { case 1: q[0] = oldHashArea[offset]; addName(name, q, 1); [BUGGY] break; [BUGGY] case 2: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.8164965809277261	1111	1111	4	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int len = oldHashArea[offset+3]; if (len == 0) { // empty slot, skip continue; } ++copyCount; String name = oldNames[offset>>2]; switch (len) { case 1: q[0] = oldHashArea[offset]; addName(name, q, 1); [BUGGY] [BUGGY] break; case 2: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.8164965809277261	1111	1111	4	add	
7	[BUG] [BUGGY] offset = _findOffsetForAdd(calcHash(q[0])); [FE] AssertionFailedError [CONTEXT] { _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { [BUGGY] offset = _findOffsetForAdd(calcHash(q[0])); [BUGGY] _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	821	821	4	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { [BUGGY] [BUGGY] offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	821	821	4	add	
9	[BUG] [BUGGY] _hashArea[offset] = q[0]; [FE] AssertionFailedError [CONTEXT] _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); [BUGGY] _hashArea[offset] = q[0]; [BUGGY] _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	822	822	4	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _verifySharing(); if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); [BUGGY] [BUGGY] _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	822	822	4	add	
11	[BUG] [BUGGY] _hashArea[offset+3] = 1; [FE] AssertionFailedError [CONTEXT] if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; [BUGGY] _hashArea[offset+3] = 1; [BUGGY] } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	823	823	4	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (_intern) { name = InternCache.instance.intern(name); } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; [BUGGY] [BUGGY] _hashArea[offset+3] = 1; } break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	823	823	4	add	
13	[BUG] [BUGGY] break; [FE] AssertionFailedError [CONTEXT] } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } [BUGGY] break; [BUGGY] case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; case 3: { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } int offset; switch (qlen) { case 1: { offset = _findOffsetForAdd(calcHash(q[0])); _hashArea[offset] = q[0]; _hashArea[offset+3] = 1; } [BUGGY] [BUGGY] break; case 2: { offset = _findOffsetForAdd(calcHash(q[0], q[1])); _hashArea[offset] = q[0]; _hashArea[offset+1] = q[1]; _hashArea[offset+3] = 2; } break; case 3: { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] addName [RETURN_TYPE] String  String name int[] q int qlen [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	add	
15	[BUG] [BUGGY] offset = _spilloverEnd; [FE] AssertionFailedError [CONTEXT] offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  [BUGGY] offset = _spilloverEnd; [BUGGY] _spilloverEnd += 4;         [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	914	914	4	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  [BUGGY] [BUGGY] offset = _spilloverEnd; _spilloverEnd += 4;         [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	914	914	4	add	
17	[BUG] [BUGGY] _spilloverEnd += 4; [FE] AssertionFailedError [CONTEXT] final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; [BUGGY] _spilloverEnd += 4; [BUGGY]         if (_spilloverEnd >= hashArea.length) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	915	915	4	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; [BUGGY] [BUGGY] _spilloverEnd += 4;         if (_spilloverEnd >= hashArea.length) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	915	915	4	add	
19	[BUG] [BUGGY] if (_spilloverEnd >= hashArea.length) { [FE] AssertionFailedError [CONTEXT] _spilloverEnd += 4;         [BUGGY] if (_spilloverEnd >= hashArea.length) { [BUGGY] if (_failOnDoS) { _reportTooManyCollisions(); }   _needRehash = true; } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	925	925	4	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _spilloverEnd += 4;         [BUGGY] [BUGGY] if (_spilloverEnd >= hashArea.length) { if (_failOnDoS) { _reportTooManyCollisions(); }   _needRehash = true; } return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	925	925	4	add	
21	[BUG] [BUGGY] return offset; [FE] AssertionFailedError [CONTEXT]   if (_spilloverEnd >= hashArea.length) { if (_failOnDoS) { _reportTooManyCollisions(); }   _needRehash = true; } [BUGGY] return offset; [BUGGY] } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	933	933	4	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   if (_spilloverEnd >= hashArea.length) { if (_failOnDoS) { _reportTooManyCollisions(); }   _needRehash = true; } [BUGGY] [BUGGY] return offset; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	933	933	4	add	
23	[BUG] [BUGGY] int hash = q1 ^ _seed; [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { [BUGGY] int hash = q1 ^ _seed; [BUGGY]      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash >>> 12); return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	977	977	4	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { [BUGGY] [BUGGY] int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash >>> 12); return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	977	977	4	add	
25	[BUG] [BUGGY] hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash >>> 12); [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      [BUGGY] hash += (hash >>> 16); // to xor hi- and low- 16-bits  hash ^= (hash >>> 12); [BUGGY] hash ^= (hash >>> 12); return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	983	984	4	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      [BUGGY] [BUGGY] hash += (hash >>> 16); // to xor hi- and low- 16-bits  hash ^= (hash >>> 12); hash ^= (hash >>> 12); return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	983	984	4	add	
27	[BUG] [BUGGY] hash ^= (hash >>> 12); [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits [BUGGY] hash ^= (hash >>> 12); [BUGGY] return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	984	984	4	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits [BUGGY] [BUGGY] hash ^= (hash >>> 12); return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	984	984	4	add	
29	[BUG] [BUGGY] return hash; [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash >>> 12); [BUGGY] return hash; [BUGGY] } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public int calcHash(int q1) { int hash = q1 ^ _seed;      hash += (hash >>> 16); // to xor hi- and low- 16-bits hash ^= (hash >>> 12); [BUGGY] [BUGGY] return hash; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] calcHash [RETURN_TYPE] int  int q1 [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q quads String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart minAdd newSize offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	add	
31	[BUG] [BUGGY] if (len > q.length) { [FE] AssertionFailedError [CONTEXT] q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: [BUGGY] if (len > q.length) { [BUGGY] q = new int[len]; }  int qoff = oldHashArea[offset+1]; System.arraycopy(oldHashArea, qoff, q, 0, len); addName(name, q, len); break; } }  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1124	1124	4	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] q[1] = oldHashArea[offset+1]; addName(name, q, 2); break; case 3: q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: [BUGGY] [BUGGY] if (len > q.length) { q = new int[len]; }  int qoff = oldHashArea[offset+1]; System.arraycopy(oldHashArea, qoff, q, 0, len); addName(name, q, len); break; } }  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1124	1124	4	add	
33	[BUG] [BUGGY] int qoff = oldHashArea[offset+1]; [FE] AssertionFailedError [CONTEXT] q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: if (len > q.length) { q = new int[len]; }  [BUGGY] int qoff = oldHashArea[offset+1]; [BUGGY] System.arraycopy(oldHashArea, qoff, q, 0, len); addName(name, q, len); break; } }   if (copyCount != oldCount) { throw new IllegalStateException("Failed rehash(): old count="+oldCount+", copyCount="+copyCount); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1128	1128	4	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] q[0] = oldHashArea[offset]; q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: if (len > q.length) { q = new int[len]; }  [BUGGY] [BUGGY] int qoff = oldHashArea[offset+1]; System.arraycopy(oldHashArea, qoff, q, 0, len); addName(name, q, len); break; } }   if (copyCount != oldCount) { throw new IllegalStateException("Failed rehash(): old count="+oldCount+", copyCount="+copyCount); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1128	1128	4	add	
35	[BUG] [BUGGY] System.arraycopy(oldHashArea, qoff, q, 0, len); [FE] AssertionFailedError [CONTEXT] q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: if (len > q.length) { q = new int[len]; }  int qoff = oldHashArea[offset+1]; [BUGGY] System.arraycopy(oldHashArea, qoff, q, 0, len); [BUGGY] addName(name, q, len); break; } }   if (copyCount != oldCount) { throw new IllegalStateException("Failed rehash(): old count="+oldCount+", copyCount="+copyCount); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1129	1129	4	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] q[1] = oldHashArea[offset+1]; q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: if (len > q.length) { q = new int[len]; }  int qoff = oldHashArea[offset+1]; [BUGGY] [BUGGY] System.arraycopy(oldHashArea, qoff, q, 0, len); addName(name, q, len); break; } }   if (copyCount != oldCount) { throw new IllegalStateException("Failed rehash(): old count="+oldCount+", copyCount="+copyCount); } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1129	1129	4	add	
37	[BUG] [BUGGY] addName(name, q, len); [FE] AssertionFailedError [CONTEXT] q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: if (len > q.length) { q = new int[len]; }  int qoff = oldHashArea[offset+1]; System.arraycopy(oldHashArea, qoff, q, 0, len); [BUGGY] addName(name, q, len); [BUGGY] break; } }   if (copyCount != oldCount) { throw new IllegalStateException("Failed rehash(): old count="+oldCount+", copyCount="+copyCount); } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1130	1130	4	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] q[2] = oldHashArea[offset+2]; addName(name, q, 3); break; default: if (len > q.length) { q = new int[len]; }  int qoff = oldHashArea[offset+1]; System.arraycopy(oldHashArea, qoff, q, 0, len); [BUGGY] [BUGGY] addName(name, q, len); break; } }   if (copyCount != oldCount) { throw new IllegalStateException("Failed rehash(): old count="+oldCount+", copyCount="+copyCount); } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	1130	1130	4	add	
39	[BUG] [BUGGY] public int bucketCount() { return _hashSize; } [FE] AssertionFailedError [CONTEXT] [BUGGY] public int bucketCount() { return _hashSize; } [BUGGY]  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] bucketCount [RETURN_TYPE] int  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr flags longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6708203932499369	373	373	4	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] public int bucketCount() { return _hashSize; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] bucketCount [RETURN_TYPE] int  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea mainHash String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart childCount count curr flags longNameOffset seed size spilloverEnd sz tertiaryShift  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6708203932499369	373	373	4	add	
41	[BUG] [BUGGY] if (tertSlots <= 1024) { // buckets of 16 slots (up to 1024 == 64 x 16) return 6; [FE] AssertionFailedError [CONTEXT]  int tertSlots = (primarySlots) >> 2;  if (tertSlots < 64) { return 4; } if (tertSlots <= 256) { // buckets of 8 slots (up to 256 == 32 x 8) return 5; } [BUGGY] if (tertSlots <= 1024) { // buckets of 16 slots (up to 1024 == 64 x 16)   return 6; [BUGGY] return 6; }  return 7; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _calcTertiaryShift [RETURN_TYPE] int  int primarySlots [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri primarySlots q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertSlots tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6708203932499369	1198	1199	4	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  int tertSlots = (primarySlots) >> 2;  if (tertSlots < 64) { return 4; } if (tertSlots <= 256) { // buckets of 8 slots (up to 256 == 32 x 8) return 5; } [BUGGY] [BUGGY] if (tertSlots <= 1024) { // buckets of 16 slots (up to 1024 == 64 x 16)   return 6; return 6; }  return 7; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _calcTertiaryShift [RETURN_TYPE] int  int primarySlots [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri primarySlots q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertSlots tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6708203932499369	1198	1199	4	add	
43	[BUG] [BUGGY] return 6; [FE] AssertionFailedError [CONTEXT] int tertSlots = (primarySlots) >> 2;  if (tertSlots < 64) { return 4; } if (tertSlots <= 256) { // buckets of 8 slots (up to 256 == 32 x 8) return 5; } if (tertSlots <= 1024) { // buckets of 16 slots (up to 1024 == 64 x 16) [BUGGY] return 6; [BUGGY] }  return 7; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _calcTertiaryShift [RETURN_TYPE] int  int primarySlots [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri primarySlots q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertSlots tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6708203932499369	1199	1199	4	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int tertSlots = (primarySlots) >> 2;  if (tertSlots < 64) { return 4; } if (tertSlots <= 256) { // buckets of 8 slots (up to 256 == 32 x 8) return 5; } if (tertSlots <= 1024) { // buckets of 16 slots (up to 1024 == 64 x 16) [BUGGY] [BUGGY] return 6; }  return 7; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _calcTertiaryShift [RETURN_TYPE] int  int primarySlots [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS fill intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri primarySlots q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertSlots tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6708203932499369	1199	1199	4	add	
45	[BUG] [BUGGY] int spillCount = (_spilloverEnd - _spilloverStart()) >> 2; [FE] AssertionFailedError [CONTEXT] private void _verifyNeedForRehash() {  if (_count > (_hashSize >> 1)) { // over 50% [BUGGY] int spillCount = (_spilloverEnd - _spilloverStart()) >> 2; [BUGGY] if ((spillCount > (1 + _count >> 7)) || (_count > (_hashSize * 0.80))) { _needRehash = true; } } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifyNeedForRehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	864	864	4	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void _verifyNeedForRehash() {  if (_count > (_hashSize >> 1)) { // over 50% [BUGGY] [BUGGY] int spillCount = (_spilloverEnd - _spilloverStart()) >> 2; if ((spillCount > (1 + _count >> 7)) || (_count > (_hashSize * 0.80))) { _needRehash = true; } } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifyNeedForRehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	864	864	4	add	
47	[BUG] [BUGGY] if ((spillCount > (1 + _count >> 7))  || (_count > (_hashSize * 0.80))) { [FE] AssertionFailedError [CONTEXT] private void _verifyNeedForRehash() {  if (_count > (_hashSize >> 1)) { // over 50% int spillCount = (_spilloverEnd - _spilloverStart()) >> 2; [BUGGY] if ((spillCount > (1 + _count >> 7))     || (_count > (_hashSize * 0.80))) { [BUGGY] || (_count > (_hashSize * 0.80))) { _needRehash = true; } } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifyNeedForRehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	865	866	4	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void _verifyNeedForRehash() {  if (_count > (_hashSize >> 1)) { // over 50% int spillCount = (_spilloverEnd - _spilloverStart()) >> 2; [BUGGY] [BUGGY] if ((spillCount > (1 + _count >> 7))     || (_count > (_hashSize * 0.80))) { || (_count > (_hashSize * 0.80))) { _needRehash = true; } } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifyNeedForRehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	865	866	4	add	
49	[BUG] [BUGGY] _needRehash = true; [FE] AssertionFailedError [CONTEXT] private void _verifyNeedForRehash() {  if (_count > (_hashSize >> 1)) { // over 50% int spillCount = (_spilloverEnd - _spilloverStart()) >> 2; if ((spillCount > (1 + _count >> 7)) || (_count > (_hashSize * 0.80))) { [BUGGY] _needRehash = true; [BUGGY] } } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifyNeedForRehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	867	867	4	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void _verifyNeedForRehash() {  if (_count > (_hashSize >> 1)) { // over 50% int spillCount = (_spilloverEnd - _spilloverStart()) >> 2; if ((spillCount > (1 + _count >> 7)) || (_count > (_hashSize * 0.80))) { [BUGGY] [BUGGY] _needRehash = true; } } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifyNeedForRehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	867	867	4	add	
51	[BUG] [BUGGY] rehash(); [FE] AssertionFailedError [CONTEXT] private void _verifySharing() { if (_hashShared) { _hashArea = Arrays.copyOf(_hashArea, _hashArea.length); _names = Arrays.copyOf(_names, _names.length); _hashShared = false; } if (_needRehash) { [BUGGY] rehash(); [BUGGY] } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifySharing [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	880	880	4	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void _verifySharing() { if (_hashShared) { _hashArea = Arrays.copyOf(_hashArea, _hashArea.length); _names = Arrays.copyOf(_names, _names.length); _hashShared = false; } if (_needRehash) { [BUGGY] [BUGGY] rehash(); } } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _verifySharing [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	880	880	4	add	
53	[BUG] [BUGGY] int offset2 = _secondaryStart + ((offset >> 3) << 2); [FE] AssertionFailedError [CONTEXT] {  int offset = _calcOffset(hash); final int[] hashArea = _hashArea; if (hashArea[offset+3] == 0) {  return offset; }  [BUGGY] int offset2 = _secondaryStart + ((offset >> 3) << 2); [BUGGY] if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	897	897	4	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  int offset = _calcOffset(hash); final int[] hashArea = _hashArea; if (hashArea[offset+3] == 0) {  return offset; }  [BUGGY] [BUGGY] int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	897	897	4	add	
55	[BUG] [BUGGY] if (hashArea[offset2+3] == 0) { [FE] AssertionFailedError [CONTEXT] {  int offset = _calcOffset(hash); final int[] hashArea = _hashArea; if (hashArea[offset+3] == 0) {  return offset; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); [BUGGY] if (hashArea[offset2+3] == 0) { [BUGGY]  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {  int offset = _calcOffset(hash); final int[] hashArea = _hashArea; if (hashArea[offset+3] == 0) {  return offset; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); [BUGGY] [BUGGY] if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	add	
57	[BUG] [BUGGY] return offset2; [FE] AssertionFailedError [CONTEXT] int offset = _calcOffset(hash); final int[] hashArea = _hashArea; if (hashArea[offset+3] == 0) {  return offset; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  [BUGGY] return offset2; [BUGGY] }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int offset = _calcOffset(hash); final int[] hashArea = _hashArea; if (hashArea[offset+3] == 0) {  return offset; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  [BUGGY] [BUGGY] return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	900	900	4	add	
59	[BUG] [BUGGY] offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); [FE] AssertionFailedError [CONTEXT] return offset; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  [BUGGY] offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); [BUGGY] final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	904	904	4	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return offset; }  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  [BUGGY] [BUGGY] offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	904	904	4	add	
61	[BUG] [BUGGY] final int bucketSize = (1 << _tertiaryShift); [FE] AssertionFailedError [CONTEXT] }  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); [BUGGY] final int bucketSize = (1 << _tertiaryShift); [BUGGY] for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; _spilloverEnd += 4; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	905	905	4	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); [BUGGY] [BUGGY] final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; _spilloverEnd += 4; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	905	905	4	add	
63	[BUG] [BUGGY] for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { [FE] AssertionFailedError [CONTEXT]  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); [BUGGY] for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { [BUGGY] if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; _spilloverEnd += 4;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); [BUGGY] [BUGGY] for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; _spilloverEnd += 4;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	906	906	4	add	
65	[BUG] [BUGGY] if (hashArea[offset2+3] == 0) { [FE] AssertionFailedError [CONTEXT] int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { [BUGGY] if (hashArea[offset2+3] == 0) { [BUGGY]  return offset2; } }  offset = _spilloverEnd; _spilloverEnd += 4;   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int offset2 = _secondaryStart + ((offset >> 3) << 2); if (hashArea[offset2+3] == 0) {  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { [BUGGY] [BUGGY] if (hashArea[offset2+3] == 0) {  return offset2; } }  offset = _spilloverEnd; _spilloverEnd += 4;   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	add	
67	[BUG] [BUGGY] return offset2; [FE] AssertionFailedError [CONTEXT]  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  [BUGGY] return offset2; [BUGGY] } }  offset = _spilloverEnd; _spilloverEnd += 4;    [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  return offset2; }  offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift); final int bucketSize = (1 << _tertiaryShift); for (int end = offset2 + bucketSize; offset2 < end; offset2 += 4) { if (hashArea[offset2+3] == 0) {  [BUGGY] [BUGGY] return offset2; } }  offset = _spilloverEnd; _spilloverEnd += 4;    [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] _findOffsetForAdd [RETURN_TYPE] int  int hash [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash q String[] _names names int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount count curr end flags hash ix len len2 longNameOffset longStart offset offset2 origOffset pri q1 q2 q3 qlen sec seed size spill spillCount spillOffset spilloverEnd sz tert tertiaryShift total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	add	
69	[BUG] [BUGGY] _needRehash = false; [FE] AssertionFailedError [CONTEXT] { [BUGGY] _needRehash = false; [BUGGY]  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1062	1062	4	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { [BUGGY] [BUGGY] _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1062	1062	4	add	
71	[BUG] [BUGGY] _hashShared = false; [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  [BUGGY] _hashShared = false; [BUGGY]    final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1064	1064	4	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  [BUGGY] [BUGGY] _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1064	1064	4	add	
73	[BUG] [BUGGY] final int[] oldHashArea = _hashArea; [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   [BUGGY] final int[] oldHashArea = _hashArea; [BUGGY] final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   [BUGGY] [BUGGY] final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	add	
75	[BUG] [BUGGY] final String[] oldNames = _names; [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; [BUGGY] final String[] oldNames = _names; [BUGGY] final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1069	1069	4	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; [BUGGY] [BUGGY] final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1069	1069	4	add	
77	[BUG] [BUGGY] final int oldSize = _hashSize; [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; [BUGGY] final int oldSize = _hashSize; [BUGGY] final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1070	1070	4	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; [BUGGY] [BUGGY] final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1070	1070	4	add	
79	[BUG] [BUGGY] final int oldCount = _count; [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; [BUGGY] final int oldCount = _count; [BUGGY] final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1071	1071	4	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; [BUGGY] [BUGGY] final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; } [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1071	1071	4	add	
81	[BUG] [BUGGY] final int newSize = oldSize + oldSize; [FE] AssertionFailedError [CONTEXT] _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; [BUGGY] final int newSize = oldSize + oldSize; [BUGGY] final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	
82	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _needRehash = false;  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; [BUGGY] [BUGGY] final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	add	
83	[BUG] [BUGGY] final int oldEnd = _spilloverEnd; [FE] AssertionFailedError [CONTEXT]  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; [BUGGY] final int oldEnd = _spilloverEnd; [BUGGY]     if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1073	1073	4	replace	
84	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  _hashShared = false;   final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; [BUGGY] [BUGGY] final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1073	1073	4	add	
85	[BUG] [BUGGY] if (newSize > MAX_T_SIZE) { [FE] AssertionFailedError [CONTEXT] final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    [BUGGY] if (newSize > MAX_T_SIZE) { [BUGGY] nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1078	1078	4	replace	
86	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] final int[] oldHashArea = _hashArea; final String[] oldNames = _names; final int oldSize = _hashSize; final int oldCount = _count; final int newSize = oldSize + oldSize; final int oldEnd = _spilloverEnd;    [BUGGY] [BUGGY] if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1078	1078	4	add	
87	[BUG] [BUGGY] _hashArea = new int[oldHashArea.length + (oldSize<<3)]; [FE] AssertionFailedError [CONTEXT] final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  [BUGGY] _hashArea = new int[oldHashArea.length + (oldSize<<3)]; [BUGGY] _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	
88	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] final int oldEnd = _spilloverEnd;    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  [BUGGY] [BUGGY] _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);   [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	add	
89	[BUG] [BUGGY] _hashSize = newSize; [FE] AssertionFailedError [CONTEXT]    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; [BUGGY] _hashSize = newSize; [BUGGY] _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);    [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1084	1084	4	replace	
90	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; [BUGGY] [BUGGY] _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);    [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1084	1084	4	add	
91	[BUG] [BUGGY] _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize); [FE] AssertionFailedError [CONTEXT]    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; [BUGGY] _secondaryStart = (newSize << 2); // 4 ints per entry  _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary    _tertiaryShift = _calcTertiaryShift(newSize); [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);     [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	
92	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; [BUGGY] [BUGGY] _secondaryStart = (newSize << 2); // 4 ints per entry  _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary    _tertiaryShift = _calcTertiaryShift(newSize); _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);     [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	add	
93	[BUG] [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize); [FE] AssertionFailedError [CONTEXT]   if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary  _tertiaryShift = _calcTertiaryShift(newSize); [BUGGY] _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);      [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	
94	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry [BUGGY] [BUGGY] _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary  _tertiaryShift = _calcTertiaryShift(newSize); _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);      [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	add	
95	[BUG] [BUGGY] _tertiaryShift = _calcTertiaryShift(newSize); [FE] AssertionFailedError [CONTEXT]  if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary [BUGGY] _tertiaryShift = _calcTertiaryShift(newSize); [BUGGY]   _names = new String[oldNames.length << 1]; nukeSymbols(false);      [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1087	1087	4	replace	
96	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (newSize > MAX_T_SIZE) { nukeSymbols(true); return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary [BUGGY] [BUGGY] _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; nukeSymbols(false);      [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1087	1087	4	add	
97	[BUG] [BUGGY] _names = new String[oldNames.length << 1]; [FE] AssertionFailedError [CONTEXT] return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  [BUGGY] _names = new String[oldNames.length << 1]; [BUGGY] nukeSymbols(false);      int copyCount = 0; int[] q = new int[16]; for (int offset = 0, end = oldEnd; offset < end; offset += 4) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1090	1090	4	replace	
98	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return; }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  [BUGGY] [BUGGY] _names = new String[oldNames.length << 1]; nukeSymbols(false);      int copyCount = 0; int[] q = new int[16]; for (int offset = 0, end = oldEnd; offset < end; offset += 4) { [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1090	1090	4	add	
99	[BUG] [BUGGY] nukeSymbols(false); [FE] AssertionFailedError [CONTEXT] }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; [BUGGY] nukeSymbols(false); [BUGGY]      int copyCount = 0; int[] q = new int[16]; for (int offset = 0, end = oldEnd; offset < end; offset += 4) { int len = oldHashArea[offset+3]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	replace	
100	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }  _hashArea = new int[oldHashArea.length + (oldSize<<3)]; _hashSize = newSize; _secondaryStart = (newSize << 2); // 4 ints per entry _tertiaryStart = _secondaryStart + (_secondaryStart >> 1); // right after secondary _tertiaryShift = _calcTertiaryShift(newSize);  _names = new String[oldNames.length << 1]; [BUGGY] [BUGGY] nukeSymbols(false);      int copyCount = 0; int[] q = new int[16]; for (int offset = 0, end = oldEnd; offset < end; offset += 4) { int len = oldHashArea[offset+3]; [CLASS] ByteQuadsCanonicalizer TableInfo [METHOD] rehash [RETURN_TYPE] void  [VARIABLES] boolean _failOnDoS _hashShared _intern _needRehash failOnDoS intern ByteQuadsCanonicalizer _parent parent src AtomicReference _tableInfo int[] _hashArea hashArea mainHash oldHashArea q quads String[] _names names oldNames String name int DEFAULT_T_SIZE MAX_ENTRIES_FOR_REUSE MAX_T_SIZE MIN_HASH_SIZE MULT MULT2 MULT3 _count _hashSize _longNameOffset _secondaryStart _seed _spilloverEnd _tertiaryShift _tertiaryStart bucketSize childCount copyCount count curr end flags hash i ix len len2 longNameOffset longStart minAdd newSize next offset offset2 oldCount oldEnd oldSize origOffset pri q1 q2 q3 qlen qoff sec seed size spill spillCount spillOffset spilloverEnd start sz tert tertiaryShift toAdd total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1091	1091	4	add	
