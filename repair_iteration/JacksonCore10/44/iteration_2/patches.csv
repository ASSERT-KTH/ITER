bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _names[i]  =  name;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names[i]  =  name;  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names[i]  =  name;	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	9	None	replace
2	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  name;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  name;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  name;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	9	None	replace
3	[BUG]  [BUGGY]  _names[i]  =  oldNames[i];  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names[i]  =  oldNames[i];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names[i]  =  oldNames[i];	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    oldNames[i];    }    	non-compiled	[CE]  	15	None	replace
4	[BUG]  [BUGGY]  _names[i]  =  new  String[oldNames.length];  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names[i]  =  new  String[oldNames.length];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names[i]  =  new  String[oldNames.length];	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    oldNames[i];    }    	non-compiled	[CE]  	15	None	replace
5	[BUG]  [BUGGY]  _names[i]  =  null;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names[i]  =  null;  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names[i]  =  null;	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    oldNames[i];    }    	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  _hashArea  =  new  int[oldEnd  +  (newSize  <  <  2)];  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[oldEnd  +  (newSize  <  <  2)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[oldEnd  +  (newSize  <  <  2)];	  _hashArea    =    new    int[oldEnd    +    (oldSize    <    <    2)];    	non-compiled	[CE]  	3	None	replace
7	[BUG]  [BUGGY]  _hashArea  =  new  int[oldEnd  +  (newSize  <  <  1)];  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[oldEnd  +  (newSize  <  <  1)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[oldEnd  +  (newSize  <  <  1)];	  _hashArea    =    new    int[oldEnd    +    (oldSize    <    <    2)];    	non-compiled	[CE]  	3	None	replace
8	[BUG]  [BUGGY]  _hashArea  =  new  int[2  +  (oldSize  <  <  2)];  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[2  +  (oldSize  <  <  2)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[2  +  (oldSize  <  <  2)];	  _hashArea    =    new    int[oldEnd    +    (oldSize    <    <    2)];    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  _names[i]  =  new  String(oldNames[i]);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names[i]  =  new  String(oldNames[i]);  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names[i]  =  new  String(oldNames[i]);	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldSize;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	17	None	replace
10	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldSize;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	17	None	replace
11	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	8	None	replace
12	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldName  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldName  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE))  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldName	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	8	None	replace
13	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length];  nukeSymbols(true);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length];  nukeSymbols(true);  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length];  nukeSymbols(true);	  _names    =    new    String[oldNames.length];    nukeSymbols(false);    	non-compiled	[CE]  	13	None	replace
14	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  }  else  {  nukeSymbols(false);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  }  else  {  nukeSymbols(false);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  }  else  {  nukeSymbols(false);  }	  _names    =    new    String[oldNames.length];    nukeSymbols(false);    	non-compiled	[CE]  	13	None	replace
15	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }	  _names    =    new    String[oldNames.length];    nukeSymbols(false);    	non-compiled	[CE]  	13	None	replace
16	[BUG]  [BUGGY]  _hashArea  =  new  int[oldHashArea.length  +  (newSize  <  <  6)];  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[oldHashArea.length  +  (newSize  <  <  6)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[oldHashArea.length  +  (newSize  <  <  6)];	  _hashArea    =    new    int[oldHashArea.length    +    (newSize    <    <    2)];    	non-compiled	[CE]  	5	None	replace
17	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  1];  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length  +  1];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length  +  1];	  _names    =    new    String[oldNames.length];    	non-compiled	[CE]  	18	None	replace
18	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  2];  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length  +  2];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length  +  2];	  _names    =    new    String[oldNames.length];    	non-compiled	[CE]  	18	None	replace
19	[BUG]  [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea  <  <  1)];  [CE]  [FE]            AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea  <  <  1)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[oldEnd  +  (oldHashArea  <  <  1)];	  _hashArea    =    new    int[oldEnd    +    (oldHashArea    <    <    3)];    	non-compiled	[CE]  	16	None	replace
20	[BUG]  [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea  <  <  2)];  [CE]  [FE]              AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea  <  <  2)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[oldEnd  +  (oldHashArea  <  <  2)];	  _hashArea    =    new    int[oldEnd    +    (oldHashArea    <    <    3)];    	non-compiled	[CE]  	16	None	replace
21	[BUG]  [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea.length  <  <  2)];  [CE]  [FE]              AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea.length  <  <  2)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[oldEnd  +  (oldHashArea.length  <  <  2)];	  _hashArea    =    new    int[oldHashArea.length    +    (oldEnd    <    <    2)];    	non-compiled	[CE]  	7	None	replace
22	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames  ==  null)  {  if(oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    MAX_ENTRIES_FOR_REUSE    ||    oldNames[oldNames.length    -    1]    ==    name)    {    return;    }    	non-compiled	[CE]  	10	None	replace
23	[BUG]  [BUGGY]  if(oldNames!=  null  ||  oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null  ||  oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null  ||  oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    MAX_ENTRIES_FOR_REUSE    ||    oldNames[oldNames.length    -    1]    ==    name)    {    return;    }    	non-compiled	[CE]  	10	None	replace
24	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]!=  name)  {  return;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames  ==  null)  {  if(oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]!=  name)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames  ==  null)  {  if(oldNames.length  ==  MAX_ENTRIES_FOR_REUSE  ||  oldNames[oldNames.length  -  1]!=  name)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    MAX_ENTRIES_FOR_REUSE    ||    oldNames[oldNames.length    -    1]    ==    name)    {    return;    }    	non-compiled	[CE]  	10	None	replace
25	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	14	None	replace
26	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	14	None	replace
27	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(true);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(true);  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length  +  1];  nukeSymbols(true);	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	12	None	replace
28	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  <  <  1];  nukeSymbols(false);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length  <  <  1];  nukeSymbols(false);  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length  <  <  1];  nukeSymbols(false);	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	12	None	replace
29	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  2];  nukeSymbols(false);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length  +  2];  nukeSymbols(false);  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length  +  2];  nukeSymbols(false);	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	12	None	replace
30	[BUG]  [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea.length  <  <  1)];  [CE]  [FE]            AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[oldEnd  +  (oldHashArea.length  <  <  1)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[oldEnd  +  (oldHashArea.length  <  <  1)];	  _hashArea    =    new    int[oldHashArea.length    +    (oldEnd    <    <    1)];    	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames  ==  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames  ==  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  return;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    if(oldNames[i]!=    null)    {    return;    }    	non-compiled	[CE]  	11	None	replace
32	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]  ==  null)  {  return;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]  ==  null)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]  ==  null)  {  return;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    if(oldNames[i]!=    null)    {    return;    }    	non-compiled	[CE]  	11	None	replace
33	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  continue;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  continue;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  continue;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    if(oldNames[i]!=    null)    {    return;    }    	non-compiled	[CE]  	11	None	replace
34	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  <  <  1];  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length  <  <  1];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length  <  <  1];	  _names    =    new    String[oldNames.length];    	non-compiled	[CE]  	18	None	replace
35	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames  ==  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames  ==  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }	  _names    =    new    String[oldNames.length];    nukeSymbols(false);    	non-compiled	[CE]  	13	None	replace
36	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  DEFAULT_T_SIZE;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  DEFAULT_T_SIZE;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  DEFAULT_T_SIZE;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	9	None	replace
37	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  name.length;  i++)  {  _names[i]  =  name;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  name.length;  i++)  {  _names[i]  =  name;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  0;  i  <  name.length;  i++)  {  _names[i]  =  name;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    name;    }    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  }	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	12	None	replace
39	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null  ||  oldNames[i]!=  null)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null  ||  oldNames[i]!=  null)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null  ||  oldNames[i]!=  null)  {  return;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    if(oldNames[i]!=    null)    {    return;    }    	non-compiled	[CE]  	11	None	replace
40	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(newNames[i]);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(newNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  _names[i]  =  new  String(newNames[i]);  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	8	None	replace
41	[BUG]  [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  DEFAULT_T_SIZE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  DEFAULT_T_SIZE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  if(oldNames.length  ==  DEFAULT_T_SIZE  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    MAX_ENTRIES_FOR_REUSE    ||    oldNames[oldNames.length    -    1]    ==    name)    {    return;    }    	non-compiled	[CE]  	10	None	replace
42	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  _names.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  _names.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  _names.length;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldSize;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	17	None	replace
43	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  0;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  0;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  0;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldSize;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	17	None	replace
44	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  oldNames[i];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  oldNames[i];  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  oldNames[i];  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    oldNames[i];    }    	non-compiled	[CE]  	15	None	replace
45	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  name;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  name;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldEnd;  i  <  oldNames.length;  i++)  {  _names[i]  =  name;  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    oldNames[i];    }    	non-compiled	[CE]  	15	None	replace
46	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldNames.length;  i++)  {  _names[i]  =  oldNames[i];  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldNames.length;  i++)  {  _names[i]  =  oldNames[i];  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldNames.length;  i++)  {  _names[i]  =  oldNames[i];  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldNames.length;    i++)    {    _names[i]    =    oldNames[i];    }    	non-compiled	[CE]  	15	None	replace
47	[BUG]  [BUGGY]  _names[0]  =  new  String(oldNames[0]);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names[0]  =  new  String(oldNames[0]);  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names[0]  =  new  String(oldNames[0]);	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	8	None	replace
48	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }  else  {  _names  =  new  String[oldNames.length];  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }  else  {  _names  =  new  String[oldNames.length];  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length];  nukeSymbols(false);  }  else  {  _names  =  new  String[oldNames.length];  }	  _names    =    new    String[oldNames.length];    nukeSymbols(false);    	non-compiled	[CE]  	13	None	replace
49	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  <  <  2];  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _names  =  new  String[oldNames.length  <  <  2];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_names  =  new  String[oldNames.length  <  <  2];	  _names    =    new    String[oldNames.length];    	non-compiled	[CE]  	18	None	replace
50	[BUG]  [BUGGY]  if(oldNames[i]  ==  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames[i]  ==  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames[i]  ==  null)  {  for(int  i  =  0;  i  <  oldNames.length;  i++)  {  if(oldNames[i]!=  null)  {  return;  }	  if(oldNames!=    null)    {    for(int    i    =    0;    i    <    oldNames.length;    i++)    {    if(oldNames[i]!=    null)    {    return;    }    	non-compiled	[CE]  	11	None	replace
51	[BUG]  [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  2  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  if(oldNames.length  ==  2  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  if(oldNames.length  ==  2  ||  oldNames[oldNames.length  -  1]  ==  name)  {  return;  }	  if(oldNames!=    null)    {    if(oldNames.length    ==    MAX_ENTRIES_FOR_REUSE    ||    oldNames[oldNames.length    -    1]    ==    name)    {    return;    }    	non-compiled	[CE]  	10	None	replace
52	[BUG]  [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames!=  null)  {  for(int  i  =  oldStart;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldSize;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	17	None	replace
53	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  for(int  i  =  0;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  if(oldNames  ==  null)  {  for(int  i  =  0;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	if(oldNames  ==  null)  {  for(int  i  =  0;  i  <  oldSize;  i++)  {  _names[i]  =  new  String(oldNames[i]);  }	  if(oldNames    ==    null)    {    for(int    i    =    oldEnd;    i    <    oldSize;    i++)    {    _names[i]    =    new    String(oldNames[i]);    }    	non-compiled	[CE]  	17	None	replace
54	[BUG]  [BUGGY]  _hashArea  =  new  int[1  +  (oldSize  <  <  2)];  [CE]  [FE]                AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[1  +  (oldSize  <  <  2)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[1  +  (oldSize  <  <  2)];	  _hashArea    =    new    int[oldEnd    +    (oldSize    <    <    2)];    	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  _hashArea  =  new  int[2  +  (oldSize  <  <  1)];  [CE]  [FE]              AssertionFailedError      [CONTEXT]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }        [BUGGY]  _hashArea  =  new  int[2  +  (oldSize  <  <  1)];  [BUGGY]      _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1083	1083	4	replace	_hashArea  =  new  int[2  +  (oldSize  <  <  1)];	  _hashArea    =    new    int[oldEnd    +    (oldSize    <    <    1)];    	non-compiled	[CE]  	2	None	replace
