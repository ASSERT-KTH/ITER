bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(offset2[offset2]!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2[offset2]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2[offset2]!=  0)  {	  if(offset2[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if(offset2  <  _spilloverEnd  &&  offset2[offset2]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  _spilloverEnd  &&  offset2[offset2]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  _spilloverEnd  &&  offset2[offset2]  ==  0)  {	  if(offset2[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  if(offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2[offset2+3]  ==  0)  {	  if(offset2[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(offset2[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2[offset2+1]!=  0)  {	  if(offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  if(offset2  ==  offset2  &&  offset2[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  &&  offset2[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  &&  offset2[offset2+1]  ==  0)  {	  if(offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  if(offset2  <  (offset2+1)||(offset2  >=  end))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  (offset2+1)||(offset2  >=  end))  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  (offset2+1)||(offset2  >=  end))  {	  if(offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  if(offset2  >=  bucketSize[offset2+1])  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize[offset2+1])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize[offset2+1])  {	  if(offset2    >=    hashArea[offset2+1])    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  if(offset2!=  hashArea[offset2+1])  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2!=  hashArea[offset2+1])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2!=  hashArea[offset2+1])  {	  if(offset2    >=    hashArea[offset2+1])    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  if(offset2  ==  hashArea  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    ==    hashArea    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
10	[BUG]  [BUGGY]  if(offset2  ==  hashArea  ||  offset2[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea  ||  offset2[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea  ||  offset2[offset2+1]  ==  0)  {	  if(offset2    ==    hashArea    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
11	[BUG]  [BUGGY]  if(offset2  ==  hashArea  &&  offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea  &&  offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea  &&  offset2[offset2+3]  ==  0)  {	  if(offset2    ==    hashArea    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
12	[BUG]  [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
13	[BUG]  [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
14	[BUG]  [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  ==  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  ==  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end)  {  if(_spilloverEnd  ==  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
15	[BUG]  [BUGGY]  if(offset2  >=  end)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end)  {	  if(offset2    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
16	[BUG]  [BUGGY]  if(offset2!=  end)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2!=  end)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2!=  end)  {	  if(offset2    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
17	[BUG]  [BUGGY]  if(offset2  ==  offset2)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2)  {	  if(offset2    ==    end)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
18	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
19	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  array[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  array[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  array[offset2+1]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
20	[BUG]  [BUGGY]  if(offset2  >=  hashSize  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashSize  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashSize  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
21	[BUG]  [BUGGY]  if(offset2  ==  hashArea.length  ||  offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea.length  ||  offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea.length  ||  offset2[offset2+3]  ==  0)  {	  if(offset2    ==    hashArea.length    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  if(offset2  ==  hashArea.length  &&  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea.length  &&  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea.length  &&  bucketSize[offset2+3]  ==  0)  {	  if(offset2    ==    hashArea.length    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(offset2  ==  offset2  &&  bucketSize[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  &&  bucketSize[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  &&  bucketSize[offset2+4]  ==  0)  {	  if(offset2    ==    offset2    &&    bucketSize[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  if(offset2  ==  offset2  &&  bucketSize[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  &&  bucketSize[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  &&  bucketSize[offset2+3]!=  0)  {	  if(offset2    ==    offset2    &&    bucketSize[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  if(offset2  ==  offset2  &&  bucketSize[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  &&  bucketSize[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  &&  bucketSize[offset2+1]!=  0)  {	  if(offset2    ==    offset2    &&    bucketSize[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
26	[BUG]  [BUGGY]  if(offset2  ==  offset2  ||  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  ||  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  ||  bucketSize[offset2+1]  ==  0)  {	  if(offset2    ==    offset2    &&    bucketSize[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
27	[BUG]  [BUGGY]  if(hashArea[offset2+4]!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(hashArea[offset2+4]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(hashArea[offset2+4]!=  0)  {	  if(hashArea[offset2+4]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  if(offset2  <  =  bucketSize  &&  offset2  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  =  bucketSize  &&  offset2  <  =  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  =  bucketSize  &&  offset2  <  =  0)  {	  if(hashArea[offset2+4]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  if(offset2  >=  offset2  &&  bucketSize[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  &&  bucketSize[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  &&  bucketSize[offset2+1]!=  0)  {	  if(offset2    >=    offset2    &&    bucketSize[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  if(offset2  >=  offset2  ||  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  ||  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  ||  bucketSize[offset2+1]  ==  0)  {	  if(offset2    >=    offset2    &&    bucketSize[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  final  int  len2  =  _seed.length()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  _seed.length()  +  1;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  _seed.length()  +  1;	  final    int    len2    =    _seed.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  final  int  len2  =  bucketSize.length();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  bucketSize.length();  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  bucketSize.length();	  final    int    len2    =    _seed.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  final  int  len2  =  _seed.length()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  _seed.length()  -  1;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  _seed.length()  -  1;	  final    int    len2    =    _seed.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  if(end  >=  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  >=  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  continue;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  >=  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  continue;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
35	[BUG]  [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  continue;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  continue;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
36	[BUG]  [BUGGY]  _spilloverEnd  >  bucketSize)  {  continue;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _spilloverEnd  >  bucketSize)  {  continue;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_spilloverEnd  >  bucketSize)  {  continue;	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
37	[BUG]  [BUGGY]  if(offset2  ==  hashArea[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea[offset2+4]  ==  0)  {	  if(offset2    ==    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
38	[BUG]  [BUGGY]  if(offset2  ==  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize[offset2+3]  ==  0)  {	  if(offset2    ==    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
39	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  offset2[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  offset2[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  offset2[offset2+1]!=  0)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
40	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  ||  offset2[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  ||  offset2[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  ||  offset2[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
41	[BUG]  [BUGGY]  if(offset2  ==  bucketSize[offset2+1])  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize[offset2+1])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize[offset2+1])  {	  if(offset2    ==    hashArea[offset2+1])    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
42	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
43	[BUG]  [BUGGY]  if(offset2  ==  hashSize  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashSize  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashSize  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
44	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  area[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  area[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  area[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
45	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  array[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  array[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  array[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
46	[BUG]  [BUGGY]  if(offset2  >=  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize[offset2+3]  ==  0)  {	  if(offset2    >=    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
47	[BUG]  [BUGGY]  if(offset2  >=  hashArea[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea[offset2+4]  ==  0)  {	  if(offset2    >=    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
48	[BUG]  [BUGGY]  if(offset2  <  _spilloverEnd  &&  hashArea[offset2]!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  _spilloverEnd  &&  hashArea[offset2]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  _spilloverEnd  &&  hashArea[offset2]!=  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  if(offset2  <  =  _spilloverEnd  &&  hashArea[offset2]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  =  _spilloverEnd  &&  hashArea[offset2]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  =  _spilloverEnd  &&  hashArea[offset2]  ==  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  if(offset2  <  _spilloverEnd  ||  offset2  <  hashArea[offset2]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  _spilloverEnd  ||  offset2  <  hashArea[offset2]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  _spilloverEnd  ||  offset2  <  hashArea[offset2]  ==  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  _spilloverEnd  +=  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _spilloverEnd  +=  2;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_spilloverEnd  +=  2;	  _spilloverEnd    +=    4;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
52	[BUG]  [BUGGY]  _spilloverEnd  +=  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _spilloverEnd  +=  1;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_spilloverEnd  +=  1;	  _spilloverEnd    +=    4;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
53	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  offset2[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  offset2[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  offset2[offset2+4]  ==  0)  {	  if(offset2    >=    bucketSize    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
54	[BUG]  [BUGGY]  if(offset2  >=  bucketSize[offset2+3])  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize[offset2+3])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize[offset2+3])  {	  if(offset2    >=    hashArea[offset2+3])    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
55	[BUG]  [BUGGY]  if(offset2  >=  hashArea[offset2+4])  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea[offset2+4])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea[offset2+4])  {	  if(offset2    >=    hashArea[offset2+3])    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
56	[BUG]  [BUGGY]  if(offset2  ==  bucketSize[offset2+3])  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize[offset2+3])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize[offset2+3])  {	  if(offset2    ==    hashArea[offset2+3])    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
57	[BUG]  [BUGGY]  if(offset2  ==  hashArea[offset2+4])  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea[offset2+4])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea[offset2+4])  {	  if(offset2    ==    hashArea[offset2+3])    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  if(offset2  >=  offset2  &&  bucketSize[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  &&  bucketSize[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  &&  bucketSize[offset2+4]  ==  0)  {	  if(offset2    >=    offset2    &&    bucketSize[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  if(offset2  >=  offset2  &&  bucketSize[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  &&  bucketSize[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  &&  bucketSize[offset2+3]!=  0)  {	  if(offset2    >=    offset2    &&    bucketSize[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
60	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  array[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  array[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  array[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
61	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  buffer[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  buffer[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  buffer[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
62	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
63	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  bucketSize[offset2+3]!=  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
64	[BUG]  [BUGGY]  if(end  >=  offset2)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  >=  offset2)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  >=  offset2)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    <    =    0)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
65	[BUG]  [BUGGY]  ||  offset2  >=  end)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  ||  offset2  >=  end)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	||  offset2  >=  end)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    <    =    0)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
66	[BUG]  [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  =  1)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  =  1)  {  return  bucketSize;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end)  {  if(_spilloverEnd  <  =  1)  {  return  bucketSize;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    <    =    0)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
67	[BUG]  [BUGGY]  _secondaryStart  +=  end;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _secondaryStart  +=  end;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_secondaryStart  +=  end;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
68	[BUG]  [BUGGY]  _secondaryStart  +=  4;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _secondaryStart  +=  4;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_secondaryStart  +=  4;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
69	[BUG]  [BUGGY]  if(offset2  <  end)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  end)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  end)  {	  if(offset2    <    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
70	[BUG]  [BUGGY]  if(offset2  <  =  bucketSize)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  =  bucketSize)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  =  bucketSize)  {	  if(offset2    <    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
71	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  end  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  end  +  1);  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.pow(10,  end  +  1);	  final    int    bucketSize    =(int)Math.pow(10,    end);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  end  -  offset2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  end  -  offset2);  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.pow(10,  end  -  offset2);	  final    int    bucketSize    =(int)Math.pow(10,    end);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  end  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.pow(10,  end  -  1);  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.pow(10,  end  -  1);	  final    int    bucketSize    =(int)Math.pow(10,    end);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
74	[BUG]  [BUGGY]  if(offset2  >=  offset2  &&  array[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  &&  array[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  &&  array[offset2+4]  ==  0)  {	  if(offset2    >=    offset2    &&    array[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
75	[BUG]  [BUGGY]  if(offset2  >=  offset2  &&  array[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  &&  array[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  &&  array[offset2+3]!=  0)  {	  if(offset2    >=    offset2    &&    array[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
76	[BUG]  [BUGGY]  if(end  >=  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  >=  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  >=  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
77	[BUG]  [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  return  offset2;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end)  {  if(_spilloverEnd  <  bucketSize)  {  return  offset2;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
78	[BUG]  [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
79	[BUG]  [BUGGY]  if(offset2  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  0)  {	  if(offset2    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
80	[BUG]  [BUGGY]  if(offset2  >=  hashArea.length  &&  offset2[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea.length  &&  offset2[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea.length  &&  offset2[offset2+1]!=  0)  {	  if(offset2    >=    hashArea.length    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
81	[BUG]  [BUGGY]  if(offset2  >=  hashArea.length  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea.length  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea.length  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    >=    hashArea.length    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
82	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  array[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  array[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  array[offset2+3]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
83	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
84	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  buffer[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  buffer[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  buffer[offset2+3]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
85	[BUG]  [BUGGY]  final  int  len2  =  _hashArea.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  _hashArea.length  -  1;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  _hashArea.length  -  1;	  final    int    len2    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
86	[BUG]  [BUGGY]  final  int  len2  =  _hashArea.length  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  _hashArea.length  +  1;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  _hashArea.length  +  1;	  final    int    len2    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  final  int  len2  =  _hashArea.length  -  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  _hashArea.length  -  2;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  _hashArea.length  -  2;	  final    int    len2    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  if(offset2  ==  offset2  &&  array[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  &&  array[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  &&  array[offset2+4]  ==  0)  {	  if(offset2    ==    offset2    &&    array[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
89	[BUG]  [BUGGY]  if(offset2  ==  offset2  &&  array[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  &&  array[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  &&  array[offset2+3]!=  0)  {	  if(offset2    ==    offset2    &&    array[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
90	[BUG]  [BUGGY]  if(offset2  ==  offset2  ||  array[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  ||  array[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  ||  array[offset2+3]  ==  0)  {	  if(offset2    ==    offset2    &&    array[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
91	[BUG]  [BUGGY]  if(offset2  ==  offset2  &&  array[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  &&  array[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  &&  array[offset2+1]  ==  0)  {	  if(offset2    ==    offset2    &&    array[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
92	[BUG]  [BUGGY]  if(offset2!=  bucketSize)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2!=  bucketSize)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2!=  bucketSize)  {	  if(offset2    >=    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
93	[BUG]  [BUGGY]  if(offset2  >=  offset2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2)  {	  if(offset2    >=    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
94	[BUG]  [BUGGY]  if(offset2  >=  hashArea[offset2+1]  ||  offset2  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea[offset2+1]  ||  offset2  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea[offset2+1]  ||  offset2  ==  0)  {	  if(offset2    >=    hashArea[offset2+1]    ||    offset2    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
95	[BUG]  [BUGGY]  if(offset2  >=  bucketSize[offset2+1]  ||  offset2  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize[offset2+1]  ||  offset2  >=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize[offset2+1]  ||  offset2  >=  0)  {	  if(offset2    >=    hashArea[offset2+1]    ||    offset2    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
96	[BUG]  [BUGGY]  if(offset2  >=  hashArea[offset2+1]  ||  offset2!=  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea[offset2+1]  ||  offset2!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea[offset2+1]  ||  offset2!=  0)  {	  if(offset2    >=    hashArea[offset2+1]    ||    offset2    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
97	[BUG]  [BUGGY]  if(offset2  ==  hashArea.length  ||  offset2[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea.length  ||  offset2[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea.length  ||  offset2[offset2+1]  ==  0)  {	  if(offset2    ==    hashArea.length    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
98	[BUG]  [BUGGY]  if(offset2  ==  hashArea.length  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea.length  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea.length  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    ==    hashArea.length    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
99	[BUG]  [BUGGY]  if(end  <  bucketSize)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  <  bucketSize)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  <  bucketSize)  {	  if(end    >    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
100	[BUG]  [BUGGY]  if(end  <  =  bucketSize)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  <  =  bucketSize)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  <  =  bucketSize)  {	  if(end    >    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
101	[BUG]  [BUGGY]  if(end  >=  bucketSize)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  >=  bucketSize)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  >=  bucketSize)  {	  if(end    >    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
102	[BUG]  [BUGGY]  if(offset2  ==  bucketSize[offset2+1]  ||  offset2  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize[offset2+1]  ||  offset2  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize[offset2+1]  ||  offset2  ==  0)  {	  if(offset2    ==    hashArea[offset2+1]    ||    offset2    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
103	[BUG]  [BUGGY]  if(offset2  ==  hashArea[offset2+1]  ||  offset2!=  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea[offset2+1]  ||  offset2!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea[offset2+1]  ||  offset2!=  0)  {	  if(offset2    ==    hashArea[offset2+1]    ||    offset2    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
104	[BUG]  [BUGGY]  if(offset2  ==  hashArea[offset2+1]  &&  offset2  ==  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea[offset2+1]  &&  offset2  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea[offset2+1]  &&  offset2  ==  0)  {	  if(offset2    ==    hashArea[offset2+1]    ||    offset2    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
105	[BUG]  [BUGGY]  if(offset2  >=  offset2  &&  array[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  &&  array[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  &&  array[offset2+1]!=  0)  {	  if(offset2    >=    offset2    &&    array[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
106	[BUG]  [BUGGY]  if(offset2  >=  offset2  ||  array[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  ||  array[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  ||  array[offset2+1]  ==  0)  {	  if(offset2    >=    offset2    &&    array[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
107	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  offset2[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  offset2[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  offset2[offset2+1]!=  0)  {	  if(offset2    >=    bucketSize    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
108	[BUG]  [BUGGY]  if(offset2!=  bucketSize  &&  offset2[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2!=  bucketSize  &&  offset2[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2!=  bucketSize  &&  offset2[offset2+1]  ==  0)  {	  if(offset2    >=    bucketSize    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
109	[BUG]  [BUGGY]  if(offset2  >=  hashArea.length  &&  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea.length  &&  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea.length  &&  bucketSize[offset2+3]  ==  0)  {	  if(offset2    >=    hashArea.length    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
110	[BUG]  [BUGGY]  if(offset2  >=  hashArea.length  &&  offset2[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea.length  &&  offset2[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea.length  &&  offset2[offset2+3]!=  0)  {	  if(offset2    >=    hashArea.length    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
111	[BUG]  [BUGGY]  if(hashArea[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(hashArea[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(hashArea[offset2+3]!=  0)  {	  if(hashArea[offset2]!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
112	[BUG]  [BUGGY]  if(offset2  ==  hash  ||  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hash  ||  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hash  ||  bucketSize[offset2+1]  ==  0)  {	  if(offset2    ==    offset2    ||    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
113	[BUG]  [BUGGY]  if(offset2  ==  offset2  ||  hashArea[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  offset2  ||  hashArea[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  offset2  ||  hashArea[offset2+3]  ==  0)  {	  if(offset2    ==    offset2    ||    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
114	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.floor(end);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.floor(end);  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.floor(end);	  final    int    bucketSize    =(int)Math.floor(offset2);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
115	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2)+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2)+  1;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.floor(offset2)+  1;	  final    int    bucketSize    =(int)Math.floor(offset2);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
116	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2)+  2;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2)+  2;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.floor(offset2)+  2;	  final    int    bucketSize    =(int)Math.floor(offset2);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
117	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2)-  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2)-  1;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.floor(offset2)-  1;	  final    int    bucketSize    =(int)Math.floor(offset2);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  ||  offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  ||  offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  ||  offset2[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
119	[BUG]  [BUGGY]  if(offset2  ==  hashArea[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea[offset2+1]  ==  0)  {	  if(offset2    ==    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
120	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2,  end);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.floor(offset2,  end);  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.floor(offset2,  end);	  final    int    bucketSize    =(int)Math.floor(offset2);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
121	[BUG]  [BUGGY]  if(end  >  offset2)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  >  offset2)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  >  offset2)  {	  if(end    >    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
122	[BUG]  [BUGGY]  if(offset2  >=  end  &&  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end  &&  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end  &&  bucketSize[offset2+3]  ==  0)  {	  if(offset2    >=    bucketSize    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
123	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  _hashArea[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  _hashArea[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  _hashArea[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
124	[BUG]  [BUGGY]  final  int  len2  =  _hashArea[offset2+3];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  _hashArea[offset2+3];  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  _hashArea[offset2+3];	  final    int    len2    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
125	[BUG]  [BUGGY]  if(offset2  >=  end  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    >=    bucketSize    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
126	[BUG]  [BUGGY]  _secondaryStart  +=  8;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _secondaryStart  +=  8;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_secondaryStart  +=  8;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
127	[BUG]  [BUGGY]  _secondaryStart  +=  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _secondaryStart  +=  2;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_secondaryStart  +=  2;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
128	[BUG]  [BUGGY]  if(offset2  >=  hashArea[offset2+0])  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea[offset2+0])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea[offset2+0])  {	  if(offset2    >=    hashArea[offset2+3])    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
129	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  ||  offset2  >=  hashArea[offset2+1]  ||  offset2  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  ||  offset2  >=  hashArea[offset2+1]  ||  offset2  >=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  ||  offset2  >=  hashArea[offset2+1]  ||  offset2  >=  0)  {	  if(offset2    >=    hashArea[offset2+1]    ||    offset2    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
130	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  ||  offset2  ==  hashArea[offset2+1]  ||  offset2  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  ||  offset2  ==  hashArea[offset2+1]  ||  offset2  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  ||  offset2  ==  hashArea[offset2+1]  ||  offset2  ==  0)  {	  if(offset2    ==    hashArea[offset2+1]    ||    offset2    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
131	[BUG]  [BUGGY]  if(offset2  ==  hashArea[offset2+1]  ||  bucketSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea[offset2+1]  ||  bucketSize  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea[offset2+1]  ||  bucketSize  ==  0)  {	  if(offset2    ==    hashArea[offset2+1]    ||    offset2    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
132	[BUG]  [BUGGY]  final  int  len2  =  _seed.length()  +  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  _seed.length()  +  2;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  _seed.length()  +  2;	  final    int    len2    =    _seed.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
133	[BUG]  [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  0)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end)  {  if(_spilloverEnd  <  0)  {  return  bucketSize;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end)  {  if(_spilloverEnd  <  0)  {  return  bucketSize;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    <    =    0)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
134	[BUG]  [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  <  offset2)  {  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    <    =    0)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
135	[BUG]  [BUGGY]  if(offset2  ==  end  &&  bucketSize[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  end  &&  bucketSize[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  end  &&  bucketSize[offset2+1]  ==  0)  {	  if(offset2    ==    offset2    &&    bucketSize[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
136	[BUG]  [BUGGY]  final  int  bucketSize  =(int)Math.pow(1,  end);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  bucketSize  =(int)Math.pow(1,  end);  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  bucketSize  =(int)Math.pow(1,  end);	  final    int    bucketSize    =(int)Math.pow(10,    end);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
137	[BUG]  [BUGGY]  if(offset2  <  _spilloverEnd  &&  _hashArea[offset2]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  _spilloverEnd  &&  _hashArea[offset2]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  _spilloverEnd  &&  _hashArea[offset2]  ==  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
138	[BUG]  [BUGGY]  if(offset2  >=  _spilloverEnd  &&  _hashArea[offset2]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  _spilloverEnd  &&  _hashArea[offset2]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  _spilloverEnd  &&  _hashArea[offset2]  ==  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
139	[BUG]  [BUGGY]  if(offset2  >=  _spilloverEnd  &&  hashArea[offset2]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  _spilloverEnd  &&  hashArea[offset2]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  _spilloverEnd  &&  hashArea[offset2]  ==  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
140	[BUG]  [BUGGY]  if(offset2  <  _spilloverEnd  &&  _hashArea[offset2]!=  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  _spilloverEnd  &&  _hashArea[offset2]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  _spilloverEnd  &&  _hashArea[offset2]!=  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
141	[BUG]  [BUGGY]  _spilloverEnd  +=  8;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  _spilloverEnd  +=  8;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	_spilloverEnd  +=  8;	  _spilloverEnd    +=    4;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
142	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  _hashArea[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  _hashArea[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  _hashArea[offset2+1]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
143	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  area[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  area[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  area[offset2+1]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
144	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  _hashArea[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  _hashArea[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  _hashArea[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
145	[BUG]  [BUGGY]  if(offset2!=  bucketSize[offset2+1])  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2!=  bucketSize[offset2+1])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2!=  bucketSize[offset2+1])  {	  if(offset2    ==    hashArea[offset2+1])    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
146	[BUG]  [BUGGY]  if(end  >  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  >  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  >  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
147	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  _hashArea[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  _hashArea[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  _hashArea[offset2+3]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
148	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  area[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  area[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  area[offset2+3]  ==  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
149	[BUG]  [BUGGY]  if(offset2  >=  hashArea[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  hashArea[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  hashArea[offset2+1]  ==  0)  {	  if(offset2    >=    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
150	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  offset2  <  =  MAX_ENTRIES_FOR_REUSE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  offset2  <  =  MAX_ENTRIES_FOR_REUSE)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  offset2  <  =  MAX_ENTRIES_FOR_REUSE)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
151	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+4]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  bucketSize[offset2+4]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  bucketSize[offset2+4]  ==  0)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
152	[BUG]  [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  continue;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  <  offset2)  {  if(_spilloverEnd  >  bucketSize)  {  continue;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
153	[BUG]  [BUGGY]  if(offset2  ==  end  &&  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  end  &&  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  end  &&  bucketSize[offset2+3]  ==  0)  {	  if(offset2    ==    offset2    &&    bucketSize[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
154	[BUG]  [BUGGY]  if(offset2  ==  hashArea.length  &&  offset2[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  hashArea.length  &&  offset2[offset2+1]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  hashArea.length  &&  offset2[offset2+1]!=  0)  {	  if(offset2    ==    hashArea.length    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
155	[BUG]  [BUGGY]  if(offset2  <  _spilloverEnd  &&  hashArea[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  _spilloverEnd  &&  hashArea[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  _spilloverEnd  &&  hashArea[offset2+3]  ==  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
156	[BUG]  [BUGGY]  if(offset2  <  _spilloverEnd  ||  hashArea[offset2]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  _spilloverEnd  ||  hashArea[offset2]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  _spilloverEnd  ||  hashArea[offset2]  ==  0)  {	  if(offset2    <    _spilloverEnd    &&    hashArea[offset2]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
157	[BUG]  [BUGGY]  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(_spilloverEnd  >  bucketSize)  {  return  offset2;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
158	[BUG]  [BUGGY]  if(end  >  bucketSize)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  >  bucketSize)  {  return  offset2;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  >  bucketSize)  {  return  offset2;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
159	[BUG]  [BUGGY]  if(offset2  <  bucketSize  &&  offset2[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  bucketSize  &&  offset2[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  bucketSize  &&  offset2[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  if(offset2!=  offset2  ||  offset2  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2!=  offset2  ||  offset2  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2!=  offset2  ||  offset2  ==  0)  {	  if(offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
161	[BUG]  [BUGGY]  if(offset2  ==  _secondaryStart)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  _secondaryStart)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  _secondaryStart)  {	  if(offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
162	[BUG]  [BUGGY]  if(offset2  >=  offset2  &&  offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  offset2  &&  offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  offset2  &&  offset2[offset2+3]  ==  0)  {	  if(offset2    >=    hashArea.length    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
163	[BUG]  [BUGGY]  if(offset2  >=  end  &&  offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  end  &&  offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  end  &&  offset2[offset2+3]  ==  0)  {	  if(offset2    >=    hashArea.length    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
164	[BUG]  [BUGGY]  if(offset2  <  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  bucketSize  &&  bucketSize[offset2+3]  ==  0)  {	  if(offset2    ==    offset2    &&    bucketSize[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
165	[BUG]  [BUGGY]  final  int  len2  =  hashArea.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  final  int  len2  =  hashArea.length;  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	final  int  len2  =  hashArea.length;	  final    int    len2    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
166	[BUG]  [BUGGY]  if(end  ==  bucketSize)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(end  ==  bucketSize)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(end  ==  bucketSize)  {	  if(offset2    ==    bucketSize)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
167	[BUG]  [BUGGY]  if(offset2  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
168	[BUG]  [BUGGY]  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(_spilloverEnd  >  bucketSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
169	[BUG]  [BUGGY]  if(offset2  <  bucketSize[offset2+1])  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  bucketSize[offset2+1])  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  bucketSize[offset2+1])  {	  if(offset2    >=    hashArea[offset2+1])    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
170	[BUG]  [BUGGY]  if(offset2  ==  end  &&  offset2[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  end  &&  offset2[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  end  &&  offset2[offset2+1]  ==  0)  {	  if(offset2    ==    hashArea    &&    offset2[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
171	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  hashArea[offset2+3]!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  hashArea[offset2+3]!=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  hashArea[offset2+3]!=  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
172	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  ||  offset2  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  ||  offset2  >=  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  ||  offset2  >=  0)  {	  if(offset2    >=    hashArea[offset2+1]    ||    offset2    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
173	[BUG]  [BUGGY]  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(_spilloverEnd  <  =  0)  {  return  bucketSize;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    <    =    0)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
174	[BUG]  [BUGGY]  if(offset2  <  bucketSize  &&  offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  bucketSize  &&  offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  bucketSize  &&  offset2[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
175	[BUG]  [BUGGY]  if(offset2!=  bucketSize  &&  offset2[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2!=  bucketSize  &&  offset2[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2!=  bucketSize  &&  offset2[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    offset2[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
176	[BUG]  [BUGGY]  if(offset2  >=  bucketSize  &&  offset2  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  >=  bucketSize  &&  offset2  <  =  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  >=  bucketSize  &&  offset2  <  =  0)  {	  if(offset2    >=    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
177	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  &&  offset2  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  &&  offset2  <  =  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  &&  offset2  <  =  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
178	[BUG]  [BUGGY]  if(offset2  <  bucketSize  &&  hashArea[offset2+1]  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  bucketSize  &&  hashArea[offset2+1]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  bucketSize  &&  hashArea[offset2+1]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
179	[BUG]  [BUGGY]  if(offset2  <  bucketSize  &&  hashArea[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  bucketSize  &&  hashArea[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  bucketSize  &&  hashArea[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
180	[BUG]  [BUGGY]  if(offset2  <  bucketSize  &&  array[offset2+3]  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  <  bucketSize  &&  array[offset2+3]  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  <  bucketSize  &&  array[offset2+3]  ==  0)  {	  if(offset2    ==    bucketSize    &&    hashArea[offset2+3]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
181	[BUG]  [BUGGY]  if(offset2  ==  bucketSize  ||  offset2  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(offset2  ==  bucketSize  ||  offset2  ==  0)  {  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(offset2  ==  bucketSize  ||  offset2  ==  0)  {	  if(offset2    ==    hashArea[offset2+1]    ||    offset2    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
182	[BUG]  [BUGGY]  if(_spilloverEnd  >  bucketSize)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);  if  (hashArea[offset2+3]  ==  0)  {  return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {      [BUGGY]  if(_spilloverEnd  >  bucketSize)  {  continue;  }  [BUGGY]        return  offset2;  }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	907	907	4	replace	if(_spilloverEnd  >  bucketSize)  {  continue;  }	  if(offset2    >=    end)    {    if(_spilloverEnd    >    bucketSize)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
