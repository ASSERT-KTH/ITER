bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  offset2!=  end)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  ||  offset2!=  end)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	||  offset2!=  end)  {  return  bucketSize;  }	  ||    offset2    >=    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2	[BUG]  [BUGGY]  ||  offset2  ==  end)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  ||  offset2  ==  end)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	||  offset2  ==  end)  {  return  bucketSize;  }	  ||    offset2    >=    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
3	[BUG]  [BUGGY]  ||  offset2  >=  _secondaryStart)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  ||  offset2  >=  _secondaryStart)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	||  offset2  >=  _secondaryStart)  {  return  bucketSize;  }	  ||    offset2    >=    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
4	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  -  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  -  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  -  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+4))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+4))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  <  (offset2+4))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  0xffff);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  0xffff);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  0xffff);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  0xFFFF);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  0xFFFF);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  0xFFFF);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  return  bucketSize  /  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  /  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  /  1;	  return    bucketSize    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  return  bucketSize  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  -  2;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  -  2;	  return    bucketSize    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  return  bucketSize  -  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  -  4;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  -  4;	  return    bucketSize    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  if(offset2  ==  end)  {  return  _spilloverStart;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  ==  end)  {  return  _spilloverStart;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  ==  end)  {  return  _spilloverStart;  }	  if(offset2    ==    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
12	[BUG]  [BUGGY]  ||  offset2  ==  end)  {  return  _spilloverEnd;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  ||  offset2  ==  end)  {  return  _spilloverEnd;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	||  offset2  ==  end)  {  return  _spilloverEnd;  }	  if(offset2    ==    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
13	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >>  (offset2+2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
14	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (offset2+3))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
15	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
16	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2/(offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2/(offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2/(offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
17	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >=  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >=  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >=  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
18	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+3))  <  <  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+3))  <  <  1);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+3))  <  <  1);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
19	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryStart  +  2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryStart  +  2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >>  (_secondaryStart  +  2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  +  1))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  +  2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  if(end!=  offset2)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end!=  offset2)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end!=  offset2)  {  return  bucketSize;  }	  if(offset2!=    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  1);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  1);	  _secondaryStart    =    bucketSize    +((    offset2    >>    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
24	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  8);	  _secondaryStart    =    bucketSize    +((    offset2    >>    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
25	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  2);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  2);	  _secondaryStart    =    bucketSize    +((    offset2    >>    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
26	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  16);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  16);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >>  (offset2))  <  <  16);	  _secondaryStart    =    bucketSize    +((    offset2    >>    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
27	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (offset2+3))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (offset2+3))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (offset2+3))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+3))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+3))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  <  (offset2+3))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
30	[BUG]  [BUGGY]  if(offset1!=  end)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset1!=  end)  {  return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset1!=  end)  {  return  offset2;  }	  if(offset2!=    end)    {    return    offset1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
31	[BUG]  [BUGGY]  if(offset2  >=  bucketSize)  {  return  offset2  +  1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  >=  bucketSize)  {  return  offset2  +  1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  >=  bucketSize)  {  return  offset2  +  1;  }	  if(offset2    >=    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
32	[BUG]  [BUGGY]  if(offset2!=  bucketSize)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2!=  bucketSize)  {  return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2!=  bucketSize)  {  return  offset2;  }	  if(offset2    >=    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
33	[BUG]  [BUGGY]  if(offset2  >=  bucketSize)  {  return  offset1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  >=  bucketSize)  {  return  offset1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  >=  bucketSize)  {  return  offset1;  }	  if(offset2    >=    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
34	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  _secondaryStart);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
35	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (_secondaryStart))  <  <  _secondaryStart);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
36	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+4))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+4))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2+4))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+2))  <  <  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+2))  <  <  1);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2+2))  <  <  1);	  _secondaryStart    =    bucketSize    +((    offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+2))  <  <  8;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+2))  <  <  8;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2+2))  <  <  8;	  _secondaryStart    =    bucketSize    +((    offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  _secondaryStart  +=  bucketSize  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  +=  bucketSize  +  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  +=  bucketSize  +  1;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
41	[BUG]  [BUGGY]  _secondaryStart  +=  end;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  +=  end;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  +=  end;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
42	[BUG]  [BUGGY]  _secondaryStart  +=  8;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  +=  8;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  +=  8;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
43	[BUG]  [BUGGY]  return  offset2  -  _secondaryStart;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  -  _secondaryStart;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  -  _secondaryStart;	  return    _secondaryStart    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  return  _secondaryStart  -  offset2  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  -  offset2  +  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  -  offset2  +  1;	  return    _secondaryStart    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  return  _secondaryStart  -  offset2+3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  -  offset2+3;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  -  offset2+3;	  return    _secondaryStart    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  return  offset2  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +  1;	  return    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
47	[BUG]  [BUGGY]  return  offset2,  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2,  _secondaryStart  +  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2,  _secondaryStart  +  1;	  return    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryShift  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >=    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
49	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >=    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
50	[BUG]  [BUGGY]  return  _secondaryShift  +((  offset  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  offset  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryShift  +((  offset  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >=    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
51	[BUG]  [BUGGY]  return  _secondaryShift  +((  offset  >>  (offset2  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryShift  +((  offset  >>  (offset2  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryShift  +((  offset  >>  (offset2  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >=    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
52	[BUG]  [BUGGY]  return  bucketSize  /  3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  /  3;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  /  3;	  return    bucketSize    +    3;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
53	[BUG]  [BUGGY]  return  bucketSize  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  +  2;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  +  2;	  return    bucketSize    +    3;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
54	[BUG]  [BUGGY]  return  bucketSize  +  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  +  4;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  +  4;	  return    bucketSize    +    3;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
55	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >>  (offset2+2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
56	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+2))  <  <  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+2))  <  <  1);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  >>  (offset2+2))  <  <  1);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
57	[BUG]  [BUGGY]  return  bucketSize  -  offset2  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  -  offset2  +  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  -  offset2  +  1;	  return    bucketSize    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  return  bucketSize  -  offset2+3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  -  offset2+3;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  -  offset2+3;	  return    bucketSize    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  return  offset2  -  bucketSize;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  -  bucketSize;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  -  bucketSize;	  return    bucketSize    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  return  bucketSize  /  offset2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  /  offset2;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  /  offset2;	  return    bucketSize    -    offset2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >>  (offset2  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
62	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
63	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >=  (offset2  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >=  (offset2  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >=  (offset2  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
64	[BUG]  [BUGGY]  if(end  <  offset2)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  <  offset2)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  <  offset2)  {  return  bucketSize;  }	  if(end    >=    offset2)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
65	[BUG]  [BUGGY]  if(offset2  >=  end)  {  return  _spilloverEnd;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  >=  end)  {  return  _spilloverEnd;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  >=  end)  {  return  _spilloverEnd;  }	  if(offset2!=    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
66	[BUG]  [BUGGY]  if(offset2!=  end)  {  return  _spilloverStart;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2!=  end)  {  return  _spilloverStart;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2!=  end)  {  return  _spilloverStart;  }	  if(offset2!=    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
67	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart  +  2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (_secondaryStart  +  2))  <  <  8);	  return    _secondaryStart    +((    offset    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
68	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  <  (offset2+2))  <  <  8);	  return    _secondaryStart    +((    offset    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
69	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (offset2+2))  <  <  4);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (offset2+2))  <  <  4);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >>  (offset2+2))  <  <  4);	  return    _secondaryStart    +((    offset    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+4))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+4))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset2  >>  (offset2+4))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  if(end  ==  offset2)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  ==  offset2)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  ==  offset2)  {  return  bucketSize;  }	  if(offset2    ==    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  if(offset2!=  end)return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2!=  end)return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2!=  end)return  bucketSize;  }	  if(offset2    >=    end)return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
73	[BUG]  [BUGGY]  if(offset2  ==  end)return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  ==  end)return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  ==  end)return  bucketSize;  }	  if(offset2    >=    end)return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
74	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+2))  <  <  4);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+2))  <  <  4);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset2  >>  (offset2+2))  <  <  4);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset2  >=  (offset2+2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset2  >=  (offset2+2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset2  >=  (offset2+2))  <  <  8);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
76	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2+2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2+2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >>  (offset2+2))  <  <  8);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
77	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+4))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+4))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  <  (offset2+4))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    <    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  return  offset2  +((  offset  <  (_secondaryShift))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  <  (_secondaryShift))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  <  (_secondaryShift))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    <    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+2))  &  0xffff);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  <  (offset2+2))  &  0xffff);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  <  (offset2+2))  &  0xffff);	  return    _secondaryStart    +((    offset    <    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+4))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+4))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  <  (offset2+4))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
83	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
84	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+2))  <  <  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+2))  <  <  1);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  <  (offset2+2))  <  <  1);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
85	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+3))  &  0xffff);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+3))  &  0xffff);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  <  (offset2+3))  &  0xffff);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
86	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+1))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+1))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  <  (offset2+1))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
87	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  end  <  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  end  <  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  end  <  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
88	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+3))  -  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  <  (offset2+3))  -  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  <  (offset2+3))  -  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
89	[BUG]  [BUGGY]  if(offset2!=  offset2)  {  return  end;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2!=  offset2)  {  return  end;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2!=  offset2)  {  return  end;  }	  if(end!=    offset2)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
90	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >=  (_secondaryStart  +  2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >=  (_secondaryStart  +  2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >=  (_secondaryStart  +  2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >=    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
91	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize[offset2+3];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize[offset2+3];  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize[offset2+3];	  _secondaryStart    =    hashArea[offset2+3];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
92	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize[offset2+1];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize[offset2+1];  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize[offset2+1];	  _secondaryStart    =    hashArea[offset2+3];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
93	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >>  (offset2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >>  (offset2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  >>  (offset2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    >=    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
94	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  +  (offset2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  +  (offset2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  +  (offset2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    >=    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
95	[BUG]  [BUGGY]  if(end!=  offset2)  {  return  offset2  +  1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end!=  offset2)  {  return  offset2  +  1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end!=  offset2)  {  return  offset2  +  1;  }	  if(end!=    offset2)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
96	[BUG]  [BUGGY]  if(end  >=  offset2)  {  return  offset2  +  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  >=  offset2)  {  return  offset2  +  1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  >=  offset2)  {  return  offset2  +  1;  }	  if(end!=    offset2)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
97	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
98	[BUG]  [BUGGY]  _secondaryStart  =  _seed  +((  offset  >>  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _seed  +((  offset  >>  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _seed  +((  offset  >>  (offset2+2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
99	[BUG]  [BUGGY]  return  offset2  +((  end  >>  (offset2+2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  end  >>  (offset2+2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  end  >>  (offset2+2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (offset2+4))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (offset2+4))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (offset2+4))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+2))  <  <  bucketSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+2))  <  <  bucketSize);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+2))  <  <  bucketSize);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
102	[BUG]  [BUGGY]  _secondaryStart  =  _seed  +((  offset2  <  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _seed  +((  offset2  <  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _seed  +((  offset2  <  (offset2+2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
103	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (_secondaryShift+3))  <  <  _secondaryStart);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
104	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (offset2+3))  &  0xffff);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (offset2+3))  &  0xffff);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >>  (offset2+3))  &  0xffff);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
105	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (offset2+2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (offset2+2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (offset2+2))  <  <  8);	  return    _secondaryStart    +((    offset    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
106	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  8);	  return    _secondaryStart    +((    offset    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
107	[BUG]  [BUGGY]  return  _spilloverEnd;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _spilloverEnd;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _spilloverEnd;	  return    offset;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
108	[BUG]  [BUGGY]  return  offset2  +((  end  >>  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  end  >>  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  end  >>  (offset2+2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
109	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (offset2+4))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (offset2+4))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (offset2+4))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
110	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  8;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  8;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  +  1))  <  <  8;	  return    offset2    +((    offset    >>    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
111	[BUG]  [BUGGY]  return  offset2  +((  end  >>  (_secondaryStart  +  2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  end  >>  (_secondaryStart  +  2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  end  >>  (_secondaryStart  +  2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
112	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  8);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  +  1))  <  <  8);	  return    offset2    +((    offset    >>    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
113	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  <  (offset2+3))  <  <  bucketSize);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  <  (offset2+3))  <  <  bucketSize);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  <  (offset2+3))  <  <  bucketSize);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
114	[BUG]  [BUGGY]  _secondaryStart  =  _seed  +((  offset  <  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _seed  +((  offset  <  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _seed  +((  offset  <  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
115	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+1))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+1))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  <  (offset2+1))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
116	[BUG]  [BUGGY]  _secondaryStart  =  _seed  +((  offset2  >>  (offset2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _seed  +((  offset2  >>  (offset2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _seed  +((  offset2  >>  (offset2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    >>    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
117	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >>  (offset2))  <  <  bucketSize);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >>  (offset2))  <  <  bucketSize);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  >>  (offset2))  <  <  bucketSize);	  _secondaryStart    =    bucketSize    +((    offset2    >>    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
118	[BUG]  [BUGGY]  _secondaryStart  =  offset2  +((  bucketSize  >>  (offset2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  offset2  +((  bucketSize  >>  (offset2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  offset2  +((  bucketSize  >>  (offset2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    >>    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
119	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (offset2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >>  (offset2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
120	[BUG]  [BUGGY]  if(end  >=  offset2)  {  return  bucketSize  +  1;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  >=  offset2)  {  return  bucketSize  +  1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  >=  offset2)  {  return  bucketSize  +  1;  }	  if(end    >=    offset2)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
121	[BUG]  [BUGGY]  if(end  >  offset2)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  >  offset2)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  >  offset2)  {  return  bucketSize;  }	  if(end    >=    offset2)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
122	[BUG]  [BUGGY]  _secondaryStart  +=  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  +=  2;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  +=  2;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
123	[BUG]  [BUGGY]  _secondaryStart  +=  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  +=  3;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  +=  3;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
124	[BUG]  [BUGGY]  _secondaryStart  +=  4;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  +=  4;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  +=  4;	  _secondaryStart    +=    bucketSize;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
125	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  +  2))  <  <  8);	  return    offset2    +((    offset    >=    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
126	[BUG]  [BUGGY]  return  offset2  +((  offset  <  (_secondaryShift+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  <  (_secondaryShift+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  <  (_secondaryShift+2))  <  <  _secondaryStart);	  return    _secondaryStart    +((    offset    <    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
127	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >=  (offset2+2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >=  (offset2+2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >=  (offset2+2))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    <    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
128	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (_secondaryStart+3))  <  <  _secondaryStart);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
129	[BUG]  [BUGGY]  return  bucketSize  -  1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  bucketSize  -  1  +  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  bucketSize  -  1  +  1;	  return    bucketSize    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
130	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+1))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+1))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2+1))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
131	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2+2))  <  <  bucketSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2+2))  <  <  bucketSize);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2+2))  <  <  bucketSize);	  _secondaryStart    =    bucketSize    +((    offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
132	[BUG]  [BUGGY]  if(end  ==  offset2)  {  return  offset2  +  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  ==  offset2)  {  return  offset2  +  1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  ==  offset2)  {  return  offset2  +  1;  }	  if(end    ==    offset2)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
133	[BUG]  [BUGGY]  if(end  <  offset2)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  <  offset2)  {  return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  <  offset2)  {  return  offset2;  }	  if(end    ==    offset2)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
134	[BUG]  [BUGGY]  return  offset2  +((  offset2  >>  (offset2+2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset2  >>  (offset2+2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset2  >>  (offset2+2))  <  <  8);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
135	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset2  >>  (offset2+3))  <  <  8);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
136	[BUG]  [BUGGY]  return  offset2  +((  offset2  >>  (offset2+2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset2  >>  (offset2+2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset2  >>  (offset2+2))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
137	[BUG]  [BUGGY]  return  offset2  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
138	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
139	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  bucketSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  bucketSize);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  >>  (offset2+3))  <  <  bucketSize);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
140	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+3))  <  <  8);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+3))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  >>  (offset2+3))  <  <  8);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
141	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+3))  <  <  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+3))  <  <  1);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  >>  (offset2+3))  <  <  1);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
142	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  +  1))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  +  1))  <  <  _secondaryShift);	  return    offset2    +((    offset    >=    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
143	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >=    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
144	[BUG]  [BUGGY]  ||  end  >=  offset2)  {  return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  ||  end  >=  offset2)  {  return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	||  end  >=  offset2)  {  return  bucketSize;  }	  ||    offset2    >=    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
145	[BUG]  [BUGGY]  ||  offset2  >=  end)  {  return  bucketSize  +  1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  ||  offset2  >=  end)  {  return  bucketSize  +  1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	||  offset2  >=  end)  {  return  bucketSize  +  1;  }	  ||    offset2    >=    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
146	[BUG]  [BUGGY]  return  offset1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset1  +  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset1  +  1;	  return    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
147	[BUG]  [BUGGY]  if(end  >=  offset2)return  bucketSize;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  >=  offset2)return  bucketSize;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  >=  offset2)return  bucketSize;  }	  if(offset2    >=    end)return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
148	[BUG]  [BUGGY]  if(offset2  >=  end)return  bucketSize;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  >=  end)return  bucketSize;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  >=  end)return  bucketSize;	  if(offset2    >=    end)return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
149	[BUG]  [BUGGY]  if(offset2  ==  end)  {  return  bucketSize  +  1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  ==  end)  {  return  bucketSize  +  1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  ==  end)  {  return  bucketSize  +  1;  }	  if(offset2    ==    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
150	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+3))  <  <  bucketSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+3))  <  <  bucketSize);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+3))  <  <  bucketSize);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
151	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  <  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
152	[BUG]  [BUGGY]  _secondaryStart  =  _seed  +((  offset2  <  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _seed  +((  offset2  <  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _seed  +((  offset2  <  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
153	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >=  (offset2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >=  (offset2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  >=  (offset2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    >=    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
154	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >=  (offset2))  <  <  bucketSize);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset2  >=  (offset2))  <  <  bucketSize);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset2  >=  (offset2))  <  <  bucketSize);	  _secondaryStart    =    bucketSize    +((    offset2    >=    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
155	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart  +  1))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart  +  1))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (_secondaryStart  +  1))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
156	[BUG]  [BUGGY]  return  offset2  +((  offset  <  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  <  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  <  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    <    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
157	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset  >=  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    <    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
158	[BUG]  [BUGGY]  return  offset2  +((  _spilloverEnd  >>  (offset2+2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _spilloverEnd  >>  (offset2+2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _spilloverEnd  >>  (offset2+2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
159	[BUG]  [BUGGY]  ||  bucketSize  >=  end)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  ||  bucketSize  >=  end)  {  return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	||  bucketSize  >=  end)  {  return  offset2;  }	  ||    offset2    >=    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
160	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >=  (offset2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >=  (offset2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >=  (offset2))  <  <  8);	  _secondaryStart    =    bucketSize    +((    offset2    >=    (offset2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
161	[BUG]  [BUGGY]  if(_spilloverEnd!=  end)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(_spilloverEnd!=  end)  {  return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(_spilloverEnd!=  end)  {  return  offset2;  }	  if(offset2!=    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
162	[BUG]  [BUGGY]  if(end!=  offset2)  {  return  _spilloverEnd;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end!=  offset2)  {  return  _spilloverEnd;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end!=  offset2)  {  return  _spilloverEnd;  }	  if(offset2!=    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
163	[BUG]  [BUGGY]  if(offset2  >=  bucketSize)return  offset2;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  >=  bucketSize)return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  >=  bucketSize)return  offset2;  }	  if(offset2    >=    end)return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
164	[BUG]  [BUGGY]  return  offset2  +((  _spilloverEnd  >>  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _spilloverEnd  >>  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _spilloverEnd  >>  (offset2+2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
165	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart  +  1))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryStart  +  1))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (_secondaryStart  +  1))  <  <  _secondaryShift);	  return    offset2    +((    offset    >=    (_secondaryStart    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
166	[BUG]  [BUGGY]  return  offset2  +((  _spilloverEnd  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _spilloverEnd  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _spilloverEnd  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
167	[BUG]  [BUGGY]  if(end  >=  offset2)  {  return  _spilloverEnd;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  >=  offset2)  {  return  _spilloverEnd;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  >=  offset2)  {  return  _spilloverEnd;  }	  if(end    >=    offset2)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
168	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+4))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+4))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  >>  (offset2+4))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
169	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  <  (offset2+3))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  _secondaryStart  +((  offset  <  (offset2+3))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  _secondaryStart  +((  offset  <  (offset2+3))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
170	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  hashArea.length);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  hashArea.length);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  <  (offset2+3))  &  hashArea.length);	  _secondaryStart    =    bucketSize    +((    offset    <    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
171	[BUG]  [BUGGY]  return  offset2  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  -  1;  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  -  1;	  return    bucketSize    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
172	[BUG]  [BUGGY]  return  offset2  +((  offset2  >>  (_secondaryStart  +  2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset2  >>  (_secondaryStart  +  2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset2  >>  (_secondaryStart  +  2))  <  <  8);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
173	[BUG]  [BUGGY]  if(offset2  >=  bucketSize)  {  return  _spilloverEnd;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  >=  bucketSize)  {  return  _spilloverEnd;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  >=  bucketSize)  {  return  _spilloverEnd;  }	  if(offset2    >=    bucketSize)    {    return    offset2;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
174	[BUG]  [BUGGY]  if(_spilloverEnd  ==  end)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(_spilloverEnd  ==  end)  {  return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(_spilloverEnd  ==  end)  {  return  offset2;  }	  if(offset2    ==    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
175	[BUG]  [BUGGY]  if(end  ==  offset2)  {  return  _spilloverEnd;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end  ==  offset2)  {  return  _spilloverEnd;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end  ==  offset2)  {  return  _spilloverEnd;  }	  if(offset2    ==    end)    {    return    _spilloverEnd;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
176	[BUG]  [BUGGY]  if(end!=  offset2)  {  return  offset1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(end!=  offset2)  {  return  offset1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(end!=  offset2)  {  return  offset1;  }	  if(offset2!=    end)    {    return    offset1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
177	[BUG]  [BUGGY]  if(_spilloverEnd!=  end)  {  return  offset1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(_spilloverEnd!=  end)  {  return  offset1;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(_spilloverEnd!=  end)  {  return  offset1;  }	  if(offset2!=    end)    {    return    offset1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
178	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+2))  <  <  8);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2+2))  <  <  8);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2+2))  <  <  8);	  _secondaryStart    =    bucketSize    +((    offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
179	[BUG]  [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift+3))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  offset  >>  (_secondaryShift+3))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  offset  >>  (_secondaryShift+3))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset    >>    (offset2+3))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
180	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+1))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset  >>  (offset2+1))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset  >>  (offset2+1))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset    >>    (offset2+3))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
181	[BUG]  [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  offset2  +((  _secondaryStart  >>  (_secondaryShift  +  2))  <  <  _secondaryStart);	  return    offset2    +((    offset    >>    (_secondaryShift    +    2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
182	[BUG]  [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >=  (offset2+2))  <  <  _secondaryStart);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  bucketSize  +((  offset2  >=  (offset2+2))  <  <  _secondaryStart);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  bucketSize  +((  offset2  >=  (offset2+2))  <  <  _secondaryStart);	  _secondaryStart    =    bucketSize    +((    offset2    <    (offset2+2))    <    <    _secondaryStart);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
183	[BUG]  [BUGGY]  _secondaryStart  =  hashArea[offset2+1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  _secondaryStart  =  hashArea[offset2+1];  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	_secondaryStart  =  hashArea[offset2+1];	  _secondaryStart    =    hashArea[offset2+3];    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
184	[BUG]  [BUGGY]  return  _secondaryStart  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  return  _secondaryStart  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	return  _secondaryStart  +((  offset2  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	  return    _secondaryStart    +((    offset2    >>    (offset2+2))    <    <    _secondaryShift);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
185	[BUG]  [BUGGY]  if(offset2  ==  bucketSize)  {  return  offset2;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {        [BUGGY]  if(offset2  ==  bucketSize)  {  return  offset2;  }  [BUGGY]      }  }  offset  =  _spilloverEnd;  _spilloverEnd  +=  4;    [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	909	909	4	replace	if(offset2  ==  bucketSize)  {  return  offset2;  }	  if(offset2    ==    end)    {    return    bucketSize;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
