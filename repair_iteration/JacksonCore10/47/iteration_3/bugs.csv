bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  return;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    return;    	non-compiled	[CE]  	13	None	replace
2	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  1))  {  return;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  1))  {  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  1))  {  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    return;    	non-compiled	[CE]  	13	None	replace
3	[BUG]  [BUGGY]  ||(oldHashArea.length  <  1)||(oldHashArea.length  >  2))  {  return;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  <  1)||(oldHashArea.length  >  2))  {  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  1)||(oldHashArea.length  >  2))  {  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    return;    	non-compiled	[CE]  	13	None	replace
4	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +(newSize  >>  1]);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +(newSize  >>  1]);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +(newSize  >>  1]);	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	20	None	replace
5	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames  ==  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames  ==  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }	  if(oldNames!=    null)    {    if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    return;    }    	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(newSize  <  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames  ==  null)  {  if(newSize  <  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames  ==  null)  {  if(newSize  <  MAX_ENTRIES_FOR_REUSE)  {  return;  }	  if(oldNames!=    null)    {    if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    return;    }    	non-compiled	[CE]  	15	None	replace
7	[BUG]  [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE)||(oldNames.length  >  MAX_ENTRIES_FOR_  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE)||(oldNames.length  >  MAX_ENTRIES_FOR_  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldNames!=  null  &&  oldNames.length  >  MAX_ENTRIES_FOR_REUSE)||(oldNames.length  >  MAX_ENTRIES_FOR_	  if(oldNames!=    null)    {    if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    return;    }    	non-compiled	[CE]  	15	None	replace
8	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldSize);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(oldSize);	  _secondaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	12	None	replace
9	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldSize,  oldHashArea.length);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldSize,  oldHashArea.length);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(oldSize,  oldHashArea.length);	  _secondaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	12	None	replace
10	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldSize);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryShift(oldSize);	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	25	None	replace
11	[BUG]  [BUGGY]  newSize  =  _calcTertiaryShift(oldHashArea.length);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  newSize  =  _calcTertiaryShift(oldHashArea.length);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	newSize  =  _calcTertiaryShift(oldHashArea.length);	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	25	None	replace
12	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  <  <  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  <  <  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize  <  <  1);	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    	non-compiled	[CE]  	22	None	replace
13	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  2);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  <  <  2);	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    	non-compiled	[CE]  	22	None	replace
14	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  1))  {  nukeSymbols(false);  return;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  1))  {  nukeSymbols(false);  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  1))  {  nukeSymbols(false);  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    nukeSymbols(false);    return;    	non-compiled	[CE]  	11	None	replace
15	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  nukeSymbols(false);  return;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  nukeSymbols(false);  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  nukeSymbols(false);  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    nukeSymbols(false);    return;    	non-compiled	[CE]  	11	None	replace
16	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_T_SIZE))  {  nukeSymbols(false);  return;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_T_SIZE))  {  nukeSymbols(false);  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_T_SIZE))  {  nukeSymbols(false);  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    nukeSymbols(false);    return;    	non-compiled	[CE]  	11	None	replace
17	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryEnd(oldHashArea,  newSize);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryEnd(oldHashArea,  newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryEnd(oldHashArea,  newSize);	  if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    }    	non-compiled	[CE]  	29	None	replace
18	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  +  2);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  +  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize  +  2);	  _tertiaryStart    =    _calcTertiaryShift(newSize    +    1);    	non-compiled	[CE]  	23	None	replace
19	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(oldHashArea.length  +  1);	  _tertiaryStart    =    _calcTertiaryShift(newSize    +    1);    	non-compiled	[CE]  	23	None	replace
20	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  null);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  >>  null);	  _tertiaryStart    =    _secondaryStart    +(oldNames!=    null);    	non-compiled	[CE]  	17	None	replace
21	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea!=  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea!=  null);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldHashArea!=  null);	  _tertiaryStart    =    _secondaryStart    +(oldNames!=    null);    	non-compiled	[CE]  	17	None	replace
22	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize!=  null);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize!=  null);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize!=  null);	  _tertiaryStart    =    _secondaryStart    +(oldNames!=    null);    	non-compiled	[CE]  	17	None	replace
23	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldSize);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(oldSize);	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryStart(newSize);    }    	non-compiled	[CE]  	32	None	replace
24	[BUG]  [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  >  0))  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHash  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  >  0))  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHash  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  >  0))  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHash	  if(oldHashArea!=    null)    {    _tertiaryStart    =    _calcTertiaryStart(newSize,    oldHashArea);    }    	non-compiled	[CE]  	30	None	replace
25	[BUG]  [BUGGY]  _tertiaryStart  =  calcTertiaryStart(newSize);  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  calcTertiaryStart(newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  calcTertiaryStart(newSize);	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +    (newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	27	None	replace
26	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];	  if(oldNames!=    null)    {    _names    =    new    String[oldNames.length    +    1];    _names    =    new    String[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
27	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  1];  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  1];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  1];	  if(oldNames!=    null)    {    _names    =    new    String[oldNames.length    +    1];    _names    =    new    String[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
28	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  }	  _secondaryStart    =    _calcTertiaryStart(oldHashArea);    	non-compiled	[CE]  	14	None	replace
29	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldSize,  oldHashArea.length);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldSize,  oldHashArea.length);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(oldSize,  oldHashArea.length);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	2	None	replace
30	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  +  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  +  1);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize    +    1);    	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea  +  1);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea  +  1);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize    +    1);    	non-compiled	[CE]  	6	None	replace
32	[BUG]  [BUGGY]  _tertiaryStart  =  newSize  +(newSize  >>  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  newSize  +(newSize  >>  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  newSize  +(newSize  >>  1);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    	non-compiled	[CE]  	16	None	replace
33	[BUG]  [BUGGY]  if(oldHashArea.length  ==  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  ==  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  ==  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  if(oldHashArea.length    <    2)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	26	None	replace
34	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(true);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(true);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  1];  nukeSymbols(true);	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	33	None	replace
35	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  <  <  1];  nukeSymbols(false);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  <  <  1];  nukeSymbols(false);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  <  <  1];  nukeSymbols(false);	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	33	None	replace
36	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  +  3);  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  +  3);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize  +  3);	  _tertiaryStart    =    _calcTertiaryStart(newSize    +    1);    	non-compiled	[CE]  	1	None	replace
37	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  2];  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  2];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  2];	  _names    =    new    String[oldNames.length];    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea);    	non-compiled	[CE]  	3	None	replace
39	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(oldHashArea);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(oldHashArea);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(oldHashArea);  }	  _tertiaryStart    =    _calcTertiaryShift(oldHashArea);    	non-compiled	[CE]  	24	None	replace
40	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  4)];  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  4)];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  (oldSize  <  <  4)];	  _names    =    new    String[oldNames.length    +    (oldSize    <    <    1)];    	non-compiled	[CE]  	8	None	replace
41	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  2)];  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  2)];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  (oldSize  <  <  2)];	  _names    =    new    String[oldNames.length    +    (oldSize    <    <    1)];    	non-compiled	[CE]  	8	None	replace
42	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  3)];  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  3)];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  (oldSize  <  <  3)];	  _names    =    new    String[oldNames.length    +    (oldSize    <    <    1)];    	non-compiled	[CE]  	8	None	replace
43	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  -  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  -  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  -  1);	  _tertiaryStart    =    _calcTertiaryStart(newSize,    oldHashArea.length);    	non-compiled	[CE]  	5	None	replace
44	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  -  2);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  -  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  -  2);	  _tertiaryStart    =    _calcTertiaryStart(newSize,    oldHashArea.length);    	non-compiled	[CE]  	5	None	replace
45	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  +  2);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  +  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length  +  2);	  _tertiaryStart    =    _calcTertiaryStart(newSize,    oldHashArea.length);    	non-compiled	[CE]  	5	None	replace
46	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(newSize  +  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _secondaryStart  =  _calcTertiaryStart(newSize  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(newSize  +  1);	  _secondaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	10	None	replace
47	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length!=  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length!=  null);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldHashArea.length!=  null);	  _tertiaryStart    =    _secondaryStart    +(oldNames!=    null);    	non-compiled	[CE]  	17	None	replace
48	[BUG]  [BUGGY]  _tertiaryStart  =  oldHashArea.length  +(oldNames!=  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  oldHashArea.length  +(oldNames!=  null);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  oldHashArea.length  +(oldNames!=  null);	  _tertiaryStart    =    _secondaryStart    +(oldNames!=    null);    	non-compiled	[CE]  	17	None	replace
49	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  3];  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  3];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  3];	  _names    =    new    String[oldNames.length];    	non-compiled	[CE]  	9	None	replace
50	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize  +  2);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize  +  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize  +  2);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize    +    1);    	non-compiled	[CE]  	6	None	replace
51	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldHashArea.length);  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldHashArea.length);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryShift(oldHashArea.length);	  _tertiaryStart    =    calcTertiaryShift(newSize);    	non-compiled	[CE]  	7	None	replace
52	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	25	None	replace
53	[BUG]  [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  <  oldHashArea.length))  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  <  oldHashArea.length))  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  <  oldHashArea.length))  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	25	None	replace
54	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  (oldHashArea.length  <  <  1)];  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  (oldHashArea.length  <  <  1)];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  (oldHashArea.length  <  <  1)];	  _names    =    new    String[oldNames.length    +    (oldSize    <    <    1)];    	non-compiled	[CE]  	8	None	replace
55	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryEnd(newSize);  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryEnd(newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryEnd(newSize);	  if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    _tertiaryStart    =    _calcTertiaryStart(newSize);    }    	non-compiled	[CE]  	31	None	replace
56	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames  ==  null)  {  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames  ==  null)  {  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    _names    =    new    String[oldNames.length    +    1];    _names    =    new    String[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
57	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  }	  if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    }    	non-compiled	[CE]  	29	None	replace
58	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);	  _secondaryStart    =    _calcTertiaryStart(oldHashArea);    	non-compiled	[CE]  	14	None	replace
59	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  if(newSize  >  MAX_T_SIZE)  {  return;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames  ==  null)  {  if(newSize  >  MAX_T_SIZE)  {  return;  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames  ==  null)  {  if(newSize  >  MAX_T_SIZE)  {  return;  }	  if(oldNames!=    null)    {    if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    return;    }    	non-compiled	[CE]  	15	None	replace
60	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length);  }	  if(oldHashArea!=    null)    {    _tertiaryStart    =    _calcTertiaryStart(newSize,    oldHashArea);    }    	non-compiled	[CE]  	30	None	replace
61	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  }	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	33	None	replace
62	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  2];  nukeSymbols(false);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  +  2];  nukeSymbols(false);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  2];  nukeSymbols(false);	  _names    =    new    String[oldNames.length    +    1];    nukeSymbols(false);    	non-compiled	[CE]  	33	None	replace
63	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  }  else  {  _secondaryStart  =  newSize;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  }  else  {  _secondaryStart  =  newSize;  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  }  else  {  _secondaryStart  =  newSize;  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea);    	non-compiled	[CE]  	3	None	replace
64	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea);    	non-compiled	[CE]  	3	None	replace
65	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    	non-compiled	[CE]  	19	None	replace
66	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	2	None	replace
67	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  newSize;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  newSize;  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  newSize;  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	2	None	replace
68	[BUG]  [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(newSize  <  <  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(newSize  <  <  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _tertiaryStart  +(newSize  <  <  1);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    	non-compiled	[CE]  	16	None	replace
69	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    	non-compiled	[CE]  	16	None	replace
70	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  2);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  >>  2);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    	non-compiled	[CE]  	16	None	replace
71	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }	  _secondaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	12	None	replace
72	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length  -  1);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length  -  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(oldHashArea.length  -  1);	  _secondaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	12	None	replace
73	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length  +  1);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(oldHashArea.length  +  1);	  _secondaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	12	None	replace
74	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(newSize  +  2);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(newSize  +  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryShift(newSize  +  2);	  _tertiaryStart    =    _calcTertiaryShift(newSize    +    1);    	non-compiled	[CE]  	23	None	replace
75	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldHashArea.length  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldHashArea.length  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryShift(oldHashArea.length  +  1);	  _tertiaryStart    =    _calcTertiaryShift(newSize    +    1);    	non-compiled	[CE]  	23	None	replace
76	[BUG]  [BUGGY]  if(oldHashArea.length!=  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length!=  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length!=  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  if(oldHashArea.length    <    2)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	26	None	replace
77	[BUG]  [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  <  oldHashArea.length))  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  <  oldHashArea.length))  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  <  oldHashArea.length))  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryStart(newSize);    }    	non-compiled	[CE]  	32	None	replace
78	[BUG]  [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  >  0))  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  >  0))  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea!=  null  &&  oldHashArea.length  >  0)||(oldHashArea.length  >  0))  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryStart(newSize);    }    	non-compiled	[CE]  	32	None	replace
79	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	21	None	replace
80	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldHashArea.length  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	21	None	replace
81	[BUG]  [BUGGY]  ||(oldHashArea.length  >=  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  >=  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  >=  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    return;    	non-compiled	[CE]  	13	None	replace
82	[BUG]  [BUGGY]  ||(oldHashArea.length  >  2)||(oldHashArea.length  >  2))  {  return;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  >  2)||(oldHashArea.length  >  2))  {  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  >  2)||(oldHashArea.length  >  2))  {  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    return;    	non-compiled	[CE]  	13	None	replace
83	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  <  <  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  <  <  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldHashArea.length  <  <  1);	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    	non-compiled	[CE]  	22	None	replace
84	[BUG]  [BUGGY]  _tertiaryStart  =  oldHashArea.length  +(newSize  <  <  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  oldHashArea.length  +(newSize  <  <  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  oldHashArea.length  +(newSize  <  <  1);	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    	non-compiled	[CE]  	22	None	replace
85	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  -  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  -  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  -  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	20	None	replace
86	[BUG]  [BUGGY]  ||(oldHashArea.length  >=  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  nukeSymbols(false);  return;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  >=  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  nukeSymbols(false);  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  >=  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  nukeSymbols(false);  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    nukeSymbols(false);    return;    	non-compiled	[CE]  	11	None	replace
87	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  nukeSymbols(true);  return;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  nukeSymbols(true);  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  2))  {  nukeSymbols(true);  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    nukeSymbols(false);    return;    	non-compiled	[CE]  	11	None	replace
88	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea,  _secondaryStart);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea,  _secondaryStart);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea,  _secondaryStart);	  _tertiaryStart    =    _calcTertiaryStart(newSize,    oldHashArea);    	non-compiled	[CE]  	4	None	replace
89	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  _secondaryStart  =  newSize;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  _secondaryStart  =  newSize;  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  _secondaryStart  =  newSize;  }	  _tertiaryStart    =    _calcTertiaryShift(oldHashArea);    	non-compiled	[CE]  	24	None	replace
90	[BUG]  [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(newSize  >>  2);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(newSize  >>  2);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _tertiaryStart  +(newSize  >>  2);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    	non-compiled	[CE]  	16	None	replace
91	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  MIN_HASH_SIZE);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  MIN_HASH_SIZE);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  MIN_HASH_SIZE);	  _tertiaryStart    =    _calcTertiaryStart(newSize,    oldHashArea);    	non-compiled	[CE]  	4	None	replace
92	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }	  _secondaryStart    =    _calcTertiaryStart(oldHashArea);    	non-compiled	[CE]  	14	None	replace
93	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  }  else  {  _secondaryStart  =  new  Integer(0);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  }  else  {  _secondaryStart  =  new  Integer(0);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  }  else  {  _secondaryStart  =  new  Integer(0);  }	  _secondaryStart    =    _calcTertiaryStart(oldHashArea);    	non-compiled	[CE]  	14	None	replace
94	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >=  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >=  null);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  >=  null);	  _tertiaryStart    =    _secondaryStart    +(oldNames!=    null);    	non-compiled	[CE]  	17	None	replace
95	[BUG]  [BUGGY]  if(oldHashArea.length  <  1)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  <  1)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  <  1)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  if(oldHashArea.length    <    2)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	26	None	replace
96	[BUG]  [BUGGY]  if(oldHashArea.length  >  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  >  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  >  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	25	None	replace
97	[BUG]  [BUGGY]  if(oldHashArea.length!=  newSize)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length!=  newSize)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length!=  newSize)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	25	None	replace
98	[BUG]  [BUGGY]  if(oldHashArea.length  >  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  >  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  >  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryStart(newSize);    }    	non-compiled	[CE]  	32	None	replace
99	[BUG]  [BUGGY]  if(oldHashArea.length!=  newSize)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length!=  newSize)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length!=  newSize)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  if(oldHashArea.length    ==    oldHashArea.length)    {    _tertiaryStart    =    _calcTertiaryStart(newSize);    }    	non-compiled	[CE]  	32	None	replace
100	[BUG]  [BUGGY]  ||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  ||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;	  ||(oldHashArea.length    <    2)||(oldHashArea.length    >    MAX_ENTRIES_FOR_REUSE))    {    return;    	non-compiled	[CE]  	13	None	replace
101	[BUG]  [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  calcTertiaryShift(newSize);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  calcTertiaryShift(newSize);  }	  _tertiaryStart    =    calcTertiaryShift(newSize);    	non-compiled	[CE]  	7	None	replace
102	[BUG]  [BUGGY]  _tertiaryStart  =  calcTertiaryStart(newSize  +  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  calcTertiaryStart(newSize  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  calcTertiaryStart(newSize  +  1);	  _tertiaryStart    =    calcTertiaryShift(newSize);    	non-compiled	[CE]  	7	None	replace
103	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    	non-compiled	[CE]  	19	None	replace
104	[BUG]  [BUGGY]  if(oldNames.length  ==  1)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames.length  ==  1)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames.length  ==  1)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    	non-compiled	[CE]  	19	None	replace
105	[BUG]  [BUGGY]  _tertiaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryShift  =  _calcTertiaryShift(newSize);	  if(oldNames!=    null)    {    if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    return;    }    	non-compiled	[CE]  	15	None	replace
106	[BUG]  [BUGGY]  if(oldNames!=  null)  {  if(newSize  <  =  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  if(newSize  <  =  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  if(newSize  <  =  MAX_ENTRIES_FOR_REUSE)  {  return;  }	  if(oldNames!=    null)    {    if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    return;    }    	non-compiled	[CE]  	15	None	replace
107	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  <  <  2];  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _names  =  new  String[oldNames.length  <  <  2];  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  <  <  2];	  _names    =    new    String[oldNames.length];    	non-compiled	[CE]  	9	None	replace
108	[BUG]  [BUGGY]  if(oldHashArea.length  >  0)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  >  0)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  >  0)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	2	None	replace
109	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(hashArea,  newSize);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(hashArea,  newSize);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(hashArea,  newSize);	  if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    }    	non-compiled	[CE]  	29	None	replace
110	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  new  int[oldSize];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  new  int[oldSize];  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  new  int[oldSize];  }	  _secondaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	12	None	replace
111	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  new  Integer(0);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  new  Integer(0);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  }  else  {  _secondaryStart  =  new  Integer(0);  }	  _secondaryStart    =    _calcTertiaryStart(oldHashArea.length);    	non-compiled	[CE]  	12	None	replace
112	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	21	None	replace
113	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _secondaryStart    +(newSize    <    <    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	21	None	replace
114	[BUG]  [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  ==  oldHashArea.length)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }	  _secondaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	10	None	replace
115	[BUG]  [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }  else  {  _secondaryStart  =  new  Integer(0);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }  else  {  _secondaryStart  =  new  Integer(0);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  ==  oldHashArea.length)  {  _secondaryStart  =  _calcTertiaryStart(newSize);  }  else  {  _secondaryStart  =  new  Integer(0);  }	  _secondaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	10	None	replace
116	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  2];  _names  =  new  String[oldNames.length  +  2];  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  2];  _names  =  new  String[oldNames.length  +  2];  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  2];  _names  =  new  String[oldNames.length  +  2];  }	  if(oldNames!=    null)    {    _names    =    new    String[oldNames.length    +    1];    _names    =    new    String[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
117	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  3];  _names  =  new  String[oldNames.length  +  3];  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  3];  _names  =  new  String[oldNames.length  +  3];  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  3];  _names  =  new  String[oldNames.length  +  3];  }	  if(oldNames!=    null)    {    _names    =    new    String[oldNames.length    +    1];    _names    =    new    String[oldNames.length    +    1];    }    	non-compiled	[CE]  	18	None	replace
118	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  newSize  +  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  newSize  +  1);  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  newSize  +  1);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize    +    1);    	non-compiled	[CE]  	6	None	replace
119	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry      [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]      _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  if(newSize    >    MAX_ENTRIES_FOR_REUSE)    {    _tertiaryStart    =    _calcTertiaryStart(newSize);    }    	non-compiled	[CE]  	31	None	replace
