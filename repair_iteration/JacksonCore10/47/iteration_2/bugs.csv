bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  +  1);  [CE]  [FE]        AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize  +  1);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize  +  1);	  _tertiaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	1	None	replace
2	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(oldHashArea.length);	  _tertiaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	1	None	replace
3	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  [CE]  [FE]            AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(oldHashArea);	  _tertiaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	1	None	replace
4	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea);  [CE]  [FE]            AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length);  [CE]  [FE]              AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea.length);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    	non-compiled	[CE]  	3	None	replace
6	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize  +  1);  [CE]  [FE]                AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize  +  1);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize  +  1);	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    	non-compiled	[CE]  	3	None	replace
7	[BUG]  [BUGGY]  _tertiaryStart  =  calcTertiaryShift(newSize);  [CE]  [FE]        AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  calcTertiaryShift(newSize);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  calcTertiaryShift(newSize);	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  1)];  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _names  =  new  String[oldNames.length  +  (oldSize  <  <  1)];  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  (oldSize  <  <  1)];	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length];  [CE]  [FE]        AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _names  =  new  String[oldNames.length];  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length];	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	5	None	replace
10	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(newSize);  [CE]  [FE]              AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _secondaryStart  =  _calcTertiaryStart(newSize);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(newSize);	      	non-compiled	[CE]  	4	None	replace
11	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  nukeSymbols(false);  return;  [CE]  [FE]                AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  nukeSymbols(false);  return;  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  nukeSymbols(false);  return;	      	non-compiled	[CE]  	4	None	replace
12	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea.length);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(oldHashArea.length);	      	non-compiled	[CE]  	4	None	replace
13	[BUG]  [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;  [CE]  [FE]                    AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  ||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	||(oldHashArea.length  <  2)||(oldHashArea.length  >  MAX_ENTRIES_FOR_REUSE))  {  return;	      	non-compiled	[CE]  	4	None	replace
14	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  [CE]  [FE]              AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _secondaryStart  =  _calcTertiaryStart(oldHashArea);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(oldHashArea);	      	non-compiled	[CE]  	4	None	replace
15	[BUG]  [BUGGY]  if(oldNames!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldNames!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }	      	non-compiled	[CE]  	4	None	replace
16	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  >>  1);	  if(oldNames    ==    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldNames!=  null);  [CE]  [FE]            AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldNames!=  null);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldNames!=  null);	  if(oldNames    ==    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	8	None	replace
18	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _names  =  new  String[oldNames.length  +  1];  _names  =  new  String[oldNames.length  +  1];  }	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	6	None	replace
21	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]            AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	6	None	replace
22	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  [CE]  [FE]              AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  <  <  1);	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	6	None	replace
23	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(newSize  +  1);  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(newSize  +  1);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryShift(newSize  +  1);	  _tertiaryStart    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
24	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldHashArea);  [CE]  [FE]            AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _tertiaryStart  =  _calcTertiaryShift(oldHashArea);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_tertiaryStart  =  _calcTertiaryShift(oldHashArea);	  _tertiaryStart    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  if(oldHashArea.length  <  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldHashArea.length  <  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  <  2)  {  _tertiaryStart  =  _calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
27	[BUG]  [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +  (newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +  (newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames!=  null)  {  _tertiaryStart  =  _secondaryStart  +  (newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }	  if(oldNames!=    null)    {    _tertiaryStart    =    _secondaryStart    +    (_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    }    	non-compiled	[CE]  	5	None	replace
28	[BUG]  [BUGGY]  if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldNames  ==  null)  {  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _tertiaryStart    =    _secondaryStart    +(newSize    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	6	None	replace
29	[BUG]  [BUGGY]  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  _tertiaryStart  =  _calcTertiaryStart(oldHashArea,  newSize);  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    	non-compiled	[CE]  	3	None	replace
30	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea);  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea!=  null)  {  _tertiaryStart  =  _calcTertiaryStart(newSize,  oldHashArea);  }	  _tertiaryStart    =    _calcTertiaryStart(oldHashArea,    newSize);    	non-compiled	[CE]  	3	None	replace
31	[BUG]  [BUGGY]  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  _tertiaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	1	None	replace
32	[BUG]  [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	if(oldHashArea.length  ==  oldHashArea.length)  {  _tertiaryStart  =  _calcTertiaryStart(newSize);  }	  _tertiaryStart    =    _calcTertiaryStart(newSize);    	non-compiled	[CE]  	1	None	replace
33	[BUG]  [BUGGY]  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  [CE]  [FE]              AssertionFailedError    [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  _secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry    [BUGGY]  _names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);  [BUGGY]    _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1086	1087	4	replace	_names  =  new  String[oldNames.length  +  1];  nukeSymbols(false);	      	non-compiled	[CE]  	4	None	replace
