projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,3);
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldNames[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=len){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset==len){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldNames[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=len){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(_hashSize>MAX_ENTRIES_FOR_REUSE){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=len){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+2];
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111q[0]=oldNames[offset];q[1]=oldHashArea[offset+1];addName(name,q,3);
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=len){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,3);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(_hashSize>MAX_ENTRIES_FOR_REUSE){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,3);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=0){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=0){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,3);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=0){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset>=0){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111case3:q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111case3:q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111case3:q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111case3:q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(_names!=null){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,2);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(q[0]==oldHashArea[offset]){q[1]=oldHashArea[offset+1];}else{q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(offset<0){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(_names!=null){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,3);}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(_tableInfo!=null){case0:q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,0);break;}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111case3:q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+3];break;
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(_tableInfo!=null){case0:q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);break;}
projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java1111if(_names!=null){q[0]=oldHashArea[offset];q[1]=oldHashArea[offset+1];addName(name,q,1);}
