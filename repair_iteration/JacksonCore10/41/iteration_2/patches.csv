bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea(oldNames);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea(oldNames);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea(oldNames);	  final    int[]    oldHashArea    =    _hashArea.getHeaderHashArea();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
2	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  *  oldSize;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  *  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  *  oldSize;	  final    int    newSize    =    oldCount    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  +  1;	  final    int    newSize    =    oldCount    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  +  _count;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  +  _count;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  +  _count;	  final    int    newSize    =    oldCount    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  +  _secondaryStart;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  +  _secondaryStart;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  +  _secondaryStart;	  final    int    newSize    =    oldCount    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  *  MAX_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  *  MAX_ENTRIES_FOR_REUSE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  *  MAX_ENTRIES_FOR_REUSE;	  final    int    newSize    =    oldHashArea.length    *    oldSize;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
7	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  *  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  *  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  *  2;	  final    int    newSize    =    oldHashArea.length    *    oldSize;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
8	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  *  _count;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  *  _count;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  *  _count;	  final    int    newSize    =    oldHashArea.length    *    oldSize;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
9	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  /  oldSize;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  /  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  /  oldSize;	  final    int    newSize    =    oldHashArea.length    *    oldSize;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
10	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  +  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  +  2;	  final    int    newSize    =    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
11	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  _secondaryStart  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  _secondaryStart  +  1;	  final    int    newSize    =    oldSize    +    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldSize  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldSize  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  +  oldSize  +  1;	  final    int    newSize    =    oldSize    +    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  _count;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  _count;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  _count;	  final    int    newSize    =    oldHashArea    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  +  oldHashArea;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  +  oldHashArea;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  +  oldHashArea;	  final    int    newSize    =    oldHashArea    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  _secondaryStart;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  _secondaryStart;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  _secondaryStart;	  final    int    newSize    =    oldHashArea    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.clone();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.clone();	  final    int[]    oldHashArea    =    _hashArea.getHeaders();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
17	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.cloneTree();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.cloneTree();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.cloneTree();	  final    int[]    oldHashArea    =    _hashArea.getHeaders();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  /  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  /  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  /  1;	  final    int    newSize    =    oldHashArea.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
19	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  -  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  -  1;	  final    int    newSize    =    oldHashArea.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
20	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  +  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  +  2;	  final    int    newSize    =    oldHashArea.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
21	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  MIN_HASH_SIZE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  MIN_HASH_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  MIN_HASH_SIZE;	  final    int    newSize    =    oldSize    +    MIN_HASH_SIZE;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  DEFAULT_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  DEFAULT_T_SIZE;	  final    int    newSize    =    oldSize    /    MIN_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
23	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  /  MIN_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  /  MIN_ENTRIES_FOR_REUSE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  /  MIN_ENTRIES_FOR_REUSE;	  final    int    newSize    =    oldSize    /    MIN_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
24	[BUG]  [BUGGY]  final  int  newSize  =  _count  +  oldSize;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _count  +  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _count  +  oldSize;	  final    int    newSize    =    oldSize    +    _count;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
25	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  +  _count  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  +  _count  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  +  _count  +  1;	  final    int    newSize    =    oldSize    +    _count;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
26	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  *  oldCount;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  *  oldCount;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  *  oldCount;	  final    int    newSize    =    oldSize    *    oldCount;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  *  oldCount;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  *  oldCount;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  *  oldCount;	  final    int    newSize    =    oldSize    *    oldCount;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderSize(MAX_ENTRIES_FOR_REUSE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderSize(MAX_ENTRIES_FOR_REUSE);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderSize(MAX_ENTRIES_FOR_REUSE);	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
29	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderSize(oldNames);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderSize(oldNames);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderSize(oldNames);	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
30	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  _seed;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  _seed;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  _seed;	  final    int    newSize    =    _seed    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
31	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  +  _seed;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  +  _seed;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  +  _seed;	  final    int    newSize    =    _seed    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  final  int  newSize  =  _seed  +  oldHashArea.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _seed  +  oldHashArea.length;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _seed  +  oldHashArea.length;	  final    int    newSize    =    _seed    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  /  oldCount;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  /  oldCount;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  /  oldCount;	  final    int    newSize    =    oldHashArea.length    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
34	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  +  _count;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  +  _count;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  +  _count;	  final    int    newSize    =    oldHashArea.length    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
35	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  MIN_T_SIZE;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  MIN_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  MIN_T_SIZE;	  final    int    newSize    =    oldSize    *    MIN_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
36	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  MAX_T_SIZE;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  MAX_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  MAX_T_SIZE;	  final    int    newSize    =    oldSize    *    MIN_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
37	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  *  MIN_T_SIZE;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  *  MIN_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  *  MIN_T_SIZE;	  final    int    newSize    =    oldSize    *    MIN_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
38	[BUG]  [BUGGY]  final  int  newSize  =  _seed  +  oldSize;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _seed  +  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _seed  +  oldSize;	  final    int    newSize    =    oldSize    +    _seed;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
39	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  +  _seed.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  +  _seed.length;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  +  _seed.length;	  final    int    newSize    =    oldSize    +    _seed;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
40	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  *  MIN_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  *  MIN_ENTRIES_FOR_REUSE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  *  MIN_ENTRIES_FOR_REUSE;	  final    int    newSize    =    oldSize    *    MIN_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  MAX_T_SIZE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  MAX_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  MAX_T_SIZE;	  final    int    newSize    =    oldSize    *    MIN_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.height;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.height;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.height;	  final    int[]    oldHashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
43	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea;	  final    int[]    oldHashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  _secondaryStart  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  _secondaryStart  +  1;	  final    int    newSize    =    oldSize    *    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  _secondaryStart;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  _secondaryStart;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  _secondaryStart;	  final    int    newSize    =    oldSize    *    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  *  oldSize;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  *  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  *  oldSize;	  final    int    newSize    =    oldSize    *    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  MAX_ENTRIES_FOR_REUSE  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  MAX_ENTRIES_FOR_REUSE  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  MAX_ENTRIES_FOR_REUSE  +  1;	  final    int    newSize    =    oldSize    *    MAX_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  *  MAX_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  *  MAX_ENTRIES_FOR_REUSE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  *  MAX_ENTRIES_FOR_REUSE;	  final    int    newSize    =    oldSize    *    MAX_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  *  MIN_HASH_SIZE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  *  MIN_HASH_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  *  MIN_HASH_SIZE;	  final    int    newSize    =    oldSize    *    MIN_HASH_SIZE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
50	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeight()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeight()  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeight()  +  1;	  final    int[]    oldHashArea    =    _hashArea.getHeight();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
51	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getWidth();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getWidth();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getWidth();	  final    int[]    oldHashArea    =    _hashArea.getHeight();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
52	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeight()  *  2;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeight()  *  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeight()  *  2;	  final    int[]    oldHashArea    =    _hashArea.getHeight();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldCount;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldCount;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  +  oldCount;	  final    int    newSize    =    _secondaryStart    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldHashArea.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldHashArea.length;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  +  oldHashArea.length;	  final    int    newSize    =    _secondaryStart    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  *  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  *  DEFAULT_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  *  DEFAULT_T_SIZE;	  final    int    newSize    =    oldSize    *    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  final  int  newSize  =  MIN_HASH_SIZE  *  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  MIN_HASH_SIZE  *  DEFAULT_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  MIN_HASH_SIZE  *  DEFAULT_T_SIZE;	  final    int    newSize    =    oldSize    *    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
57	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  2;	  final    int    newSize    =    oldSize    /    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  /  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  /  1;	  final    int    newSize    =    oldSize    /    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  -  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  -  1;	  final    int    newSize    =    oldSize    /    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
60	[BUG]  [BUGGY]  final  int  newSize  =  _seed  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _seed  +  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _seed  +  2;	  final    int    newSize    =    _seed    +    1;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
61	[BUG]  [BUGGY]  final  int  newSize  =  _seed.length  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _seed.length  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _seed.length  +  1;	  final    int    newSize    =    _seed    +    1;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
62	[BUG]  [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[_names.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[_names.size()  ]);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldNames  =  _names.toArray(new  String[_names.size()  ]);	  final    int[]    oldNames    =    _names;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[oldNames.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[oldNames.size()  ]);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldNames  =  _names.toArray(new  String[oldNames.size()  ]);	  final    int[]    oldNames    =    _names;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  2;	  final    int    newSize    =    oldSize    +    2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  oldCount  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  oldCount  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  oldCount  +  1;	  final    int    newSize    =    oldSize    +    oldCount    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  +  oldSize  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  +  oldSize  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  +  oldSize  +  1;	  final    int    newSize    =    oldSize    +    oldCount    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  +  oldCount  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  +  oldCount  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  +  oldCount  +  1;	  final    int    newSize    =    oldSize    +    oldCount    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  2;	  final    int    newSize    =    oldHashArea    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
69	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  MAX_ENTRIES_FOR_REUSE  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  MAX_ENTRIES_FOR_REUSE  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  MAX_ENTRIES_FOR_REUSE  +  1;	  final    int    newSize    =    oldSize    /    MAX_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  final  int  newSize  =  oldCount  /  MAX_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldCount  /  MAX_ENTRIES_FOR_REUSE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldCount  /  MAX_ENTRIES_FOR_REUSE;	  final    int    newSize    =    oldSize    /    MAX_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
71	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  1L;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  1L;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  1L;	  final    int    newSize    =    oldSize    +    1L;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
72	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashAreas();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashAreas();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderHashAreas();	  final    int[]    oldHashArea    =    _hashArea.getHashAreas();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
73	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashAreasArray();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashAreasArray();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHashAreasArray();	  final    int[]    oldHashArea    =    _hashArea.getHashAreas();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  final  int[]  oldNames  =  _names.toArray(oldNames,  name);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldNames  =  _names.toArray(oldNames,  name);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldNames  =  _names.toArray(oldNames,  name);	  final    int[]    oldNames    =    _names.toArray(oldNames);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
75	[BUG]  [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  Names);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  Names);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldNames  =  _names.toArray(new  Names);	  final    int[]    oldNames    =    _names.toArray(oldNames);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
76	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.length  +  1;	  final    int[]    oldHashArea    =    _hashArea.length;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  _hashSize;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  _hashSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  _hashSize;	  final    int    newSize    =    oldHashArea    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[0]);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldNames  =  _names.toArray(new  String[0]);	  final    int[]    oldNames    =    _names;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
79	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea  +  1;	  final    int[]    oldHashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
80	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  *  MIN_HASH_SIZE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  *  MIN_HASH_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  *  MIN_HASH_SIZE;	  final    int    newSize    =    oldSize    *    MIN_HASH_SIZE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
81	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  MIN_ENTRIES_FOR_REUSE  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  MIN_ENTRIES_FOR_REUSE  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  MIN_ENTRIES_FOR_REUSE  +  1;	  final    int    newSize    =    oldSize    *    MIN_ENTRIES_FOR_REUSE;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashHeaders();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashHeaders();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHashHeaders();	  final    int[]    oldHashArea    =    _hashArea.getHeaders();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
83	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  +  _secondaryStart  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  +  _secondaryStart  +  2;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  +  _secondaryStart  +  2;	  final    int    newSize    =    oldSize    +    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
84	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  +  oldCount  *  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  +  oldCount  *  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  +  oldCount  *  1;	  final    int    newSize    =    oldSize    +    oldCount    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  *  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  *  DEFAULT_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  *  DEFAULT_T_SIZE;	  final    int    newSize    =    oldSize    *    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  _count;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  _count;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  _count;	  final    int    newSize    =    oldSize    +    _count;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
87	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  +  _hashSize;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  +  _hashSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  +  _hashSize;	  final    int    newSize    =    oldSize    +    _count;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
88	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  +  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  +  4;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  +  4;	  final    int    newSize    =    oldSize    +    1L;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
89	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldHashArea;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  +  oldHashArea;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  +  oldHashArea;	  final    int    newSize    =    _secondaryStart    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
90	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  1;	  final    int    newSize    =    oldSize    /    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
91	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  4;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  4;	  final    int    newSize    =    oldSize    /    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  *  MIN_T_SIZE;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  *  MIN_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  *  MIN_T_SIZE;	  final    int    newSize    =    oldSize    *    MIN_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
93	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  /  oldCount;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  /  oldCount;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  /  oldCount;	  final    int    newSize    =    oldSize    *    oldCount;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  +  _seed  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  +  _seed  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  +  _seed  +  1;	  final    int    newSize    =    oldSize    +    _seed;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
95	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  _seed;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  _seed;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  _seed;	  final    int    newSize    =    oldSize    +    _seed;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
96	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashHeaderSize();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashHeaderSize();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHashHeaderSize();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
97	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashSize();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashSize();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHashSize();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
98	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  *  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  *  1;	  final    int    newSize    =    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
99	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  +  _secondaryStart;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  +  _secondaryStart;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  +  _secondaryStart;	  final    int    newSize    =    oldHashArea.length    +    oldCount;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
100	[BUG]  [BUGGY]  final  int  newSize  =  oldSize  *  1L;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldSize  *  1L;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldSize  *  1L;	  final    int    newSize    =    oldSize    +    1L;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
101	[BUG]  [BUGGY]  final  int  newSize  =  MIN_HASH_SIZE  +  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  MIN_HASH_SIZE  +  DEFAULT_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  MIN_HASH_SIZE  +  DEFAULT_T_SIZE;	  final    int    newSize    =    oldSize    +    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
102	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  /  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  /  1;	  final    int    newSize    =    oldSize    /    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
103	[BUG]  [BUGGY]  final  int  newSize  =  _seed  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _seed  /  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _seed  /  1;	  final    int    newSize    =    oldSize    /    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
104	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  +  oldSize;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  +  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  +  oldSize;	  final    int    newSize    =    oldCount    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
105	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea  +  oldSize;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea  +  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea  +  oldSize;	  final    int    newSize    =    oldCount    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  *  _secondaryStart;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  *  _secondaryStart;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  *  _secondaryStart;	  final    int    newSize    =    oldSize    *    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
107	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea(_secondaryStart);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea(_secondaryStart);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea(_secondaryStart);	  final    int[]    oldHashArea    =    _hashArea.getHeaderHashArea();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
108	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderLength();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderLength();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderLength();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
109	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderBound();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderBound();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderBound();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
110	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  +  _count;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  +  _count;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  +  _count;	  final    int    newSize    =    _secondaryStart    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
111	[BUG]  [BUGGY]  final  int  newSize  =  _secondaryStart  +  _seed;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _secondaryStart  +  _seed;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _secondaryStart  +  _seed;	  final    int    newSize    =    _secondaryStart    +    oldSize;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
112	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea,  _secondaryStart;	  final    int[]    oldHashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
113	[BUG]  [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[_names.length]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldNames  =  _names.toArray(new  String[_names.length]);  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldNames  =  _names.toArray(new  String[_names.length]);	  final    int[]    oldNames    =    _names;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
114	[BUG]  [BUGGY]  final  int  newSize  =  MIN_HASH_SIZE  *  oldSize;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  MIN_HASH_SIZE  *  oldSize;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  MIN_HASH_SIZE  *  oldSize;	  final    int    newSize    =    oldSize    *    MIN_HASH_SIZE;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
115	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  *  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  *  DEFAULT_T_SIZE;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  *  DEFAULT_T_SIZE;	  final    int    newSize    =    oldSize    *    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
116	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeadersArray();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeadersArray();  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeadersArray();	  final    int[]    oldHashArea    =    _hashArea.getHeaders();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
117	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.length  +  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.length  +  _secondaryStart  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.length  +  _secondaryStart  +  1;	  final    int    newSize    =    oldSize    +    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  final  int  newSize  =  _seed  *  oldCount;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  _seed  *  oldCount;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  _seed  *  oldCount;	  final    int    newSize    =    oldSize    *    oldCount;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
119	[BUG]  [BUGGY]  final  int  newSize  =  oldHashArea.size  +  oldCount  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _needRehash  =  false;  _hashShared  =  false;    final  int[]  oldHashArea  =  _hashArea;  final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;      [BUGGY]  final  int  newSize  =  oldHashArea.size  +  oldCount  +  1;  [BUGGY]      final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1072	1072	4	replace	final  int  newSize  =  oldHashArea.size  +  oldCount  +  1;	  final    int    newSize    =    oldSize    +    oldCount    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
