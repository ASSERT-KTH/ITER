bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _seed,  _secondaryStart,  _spilloverEnd;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _seed,  _secondaryStart,  _spilloverEnd;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _seed,  _secondaryStart,  _spilloverEnd;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart,    _spilloverEnd;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _spilloverEnd,  _secondaryStart;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _spilloverEnd,  _secondaryStart;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _spilloverEnd,  _secondaryStart;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart,    _spilloverEnd;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _longNameOffset,  _secondaryStart,  _spilloverEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _longNameOffset,  _secondaryStart,  _spilloverEnd;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _longNameOffset,  _secondaryStart,  _spilloverEnd;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart,    _spilloverEnd;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _count,  _secondaryStart,  _spilloverEnd;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _count,  _secondaryStart,  _spilloverEnd;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _count,  _secondaryStart,  _spilloverEnd;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart,    _spilloverEnd;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  /  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  /  2;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length  /  2;	  final    int[]    oldHashArea    =    _hashArea.length    +    2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  MAX_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  MAX_ENTRIES_FOR_REUSE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  MAX_ENTRIES_FOR_REUSE;	  final    int[]    oldHashArea    =    _hashArea,    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  DEFAULT_T_SIZE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length,  DEFAULT_T_SIZE;	  final    int[]    oldHashArea    =    _hashArea,    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  DEFAULT_T_SIZE  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  DEFAULT_T_SIZE  +  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  DEFAULT_T_SIZE  +  1;	  final    int[]    oldHashArea    =    _hashArea,    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  _needRehash  =  true;  _hashShared  =  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _needRehash  =  true;  _hashShared  =  true;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_needRehash  =  true;  _hashShared  =  true;	  _needRehash    =    false;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  if(_hashShared)  {  _needRehash  =  false;  _hashShared  =  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_hashShared)  {  _needRehash  =  false;  _hashShared  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_hashShared)  {  _needRehash  =  false;  _hashShared  =  false;  }	  _needRehash    =    false;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  +  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  +  1;	  final    int[]    oldHashArea    =    _hashArea.length,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart,  _spilloverEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart,  _spilloverEnd;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart,  _spilloverEnd;	  final    int[]    oldHashArea    =    _hashArea.length,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart,  _seed;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart,  _seed;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart,  _seed;	  final    int[]    oldHashArea    =    _hashArea.length,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  _seedRehash  =  true;  _hashShared  =  true;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _seedRehash  =  true;  _hashShared  =  true;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_seedRehash  =  true;  _hashShared  =  true;	  _seedRehash    =    false;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  _seedRehash  =  true;  _hashShared  =  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _seedRehash  =  true;  _hashShared  =  false;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_seedRehash  =  true;  _hashShared  =  false;	  _seedRehash    =    false;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  _hashArea  =  _hashArea.cloneTree();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  _hashArea.cloneTree();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  _hashArea.cloneTree();	  _hashArea    =    _hashArea.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
17	[BUG]  [BUGGY]  _hashArea  =  _hashArea.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  _hashArea.next();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  _hashArea.next();	  _hashArea    =    _hashArea.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  *  2  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  *  2  +  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length  *  2  +  1;	  final    int[]    oldHashArea    =    _hashArea.length    *    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
19	[BUG]  [BUGGY]  ||  _hashShared!=  false;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  ||  _hashShared!=  false;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	||  _hashShared!=  false;	  _hashShared    =    true;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  _hashshared  =  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashshared  =  false;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashshared  =  false;	  _hashShared    =    true;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getWidth();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getWidth();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.getWidth();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashSize();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashSize();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.getHashSize();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  _needRehash  =  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _needRehash  =  false;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_needRehash  =  false;	  _needRehash    =    true;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  _needRehash  =  false;  _hashShared  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _needRehash  =  false;  _hashShared  =  true;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_needRehash  =  false;  _hashShared  =  true;	  _needRehash    =    true;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea  +  3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea  +  3;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea  +  3;	  final    int[]    oldHashArea    =    _hashArea    +    4;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  _tableInfo.reset();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _tableInfo.reset();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_tableInfo.reset();	  _tableInfo.rehash();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  _tableInfo.remove(name);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _tableInfo.remove(name);  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_tableInfo.remove(name);	  _tableInfo.rehash();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  _tableInfo.clear();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _tableInfo.clear();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_tableInfo.clear();	  _tableInfo.rehash();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  _hash  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  _hash  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_hashShared)  {  _hashShared  =  false;  }  else  {  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  _hash	  _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  _hash  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  _hash  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_hashShared)  {  _hashShared  =  false;  }  else  {  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  _hash	  _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart  +  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart  +  1;	  final    int[]    oldHashArea    =    _hashArea.hashArea,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart,  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart,  DEFAULT_T_SIZE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart,  DEFAULT_T_SIZE;	  final    int[]    oldHashArea    =    _hashArea.hashArea,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
33	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart,  _spilloverEnd;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart,  _spilloverEnd;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart,  _spilloverEnd;	  final    int[]    oldHashArea    =    _hashArea.hashArea,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  1L;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  1L;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  1L;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  2;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  2;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  3;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  +  3;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  _seedRehash  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _seedRehash  =  true;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_seedRehash  =  true;	  _seedRehash    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  }  else  {  _seedRehash  =  true;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  }  else  {  _seedRehash  =  true;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_seedRehash)  {  _seedRehash  =  false;  }  else  {  _seedRehash  =  true;  }	  _seedRehash    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  }  else  {  _seedRehashShared  =  true;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  }  else  {  _seedRehashShared  =  true;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_seedRehash)  {  _seedRehash  =  false;  }  else  {  _seedRehashShared  =  true;  }	  _seedRehash    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  _hashArea  =  MAX_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  MAX_ENTRIES_FOR_REUSE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  MAX_ENTRIES_FOR_REUSE;	  _hashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
41	[BUG]  [BUGGY]  _hashArea  =  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  DEFAULT_T_SIZE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  DEFAULT_T_SIZE;	  _hashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
42	[BUG]  [BUGGY]  _hashArea  =  _hashArea.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  _hashArea.length;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  _hashArea.length;	  _hashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
43	[BUG]  [BUGGY]  _hashArea  =  new  int[size()  ];  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  new  int[size()  ];  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  new  int[size()  ];	  _hashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
44	[BUG]  [BUGGY]  if(_needRehash  >  MAX_ENTRIES_FOR_REUSE)  {  _needRehash  =  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash  >  MAX_ENTRIES_FOR_REUSE)  {  _needRehash  =  true;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash  >  MAX_ENTRIES_FOR_REUSE)  {  _needRehash  =  true;  }	  _needRehash    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash)  {  _needRehash  =  true;  }	  _needRehash    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  /  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length  /  1;	  final    int[]    oldHashArea    =    _hashArea.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
47	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  *  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length  *  1;	  final    int[]    oldHashArea    =    _hashArea.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  _hashshared  =  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashshared  =  true;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashshared  =  true;	  _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  _hashShared  =  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashShared  =  null;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashShared  =  null;	  _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderHashArea();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashArea();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHashArea();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.getHashArea();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  if(_seedRehash!=  false)  {  _seedRehash  =  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_seedRehash!=  false)  {  _seedRehash  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_seedRehash!=  false)  {  _seedRehash  =  false;  }	  _seedRehash    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  if(_seedRehash  ==  false)  {  _seedRehash  =  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_seedRehash  ==  false)  {  _seedRehash  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_seedRehash  ==  false)  {  _seedRehash  =  false;  }	  _seedRehash    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _spilloverStart,  _secondaryStart;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _spilloverStart,  _secondaryStart;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _spilloverStart,  _secondaryStart;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart,    _spilloverEnd;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
55	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _throwOffset,  _secondaryStart,  _spilloverEnd;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _throwOffset,  _secondaryStart,  _spilloverEnd;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _throwOffset,  _secondaryStart,  _spilloverEnd;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart,    _spilloverEnd;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
56	[BUG]  [BUGGY]  _hashArea  =  _hashArea  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  _hashArea  +  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  _hashArea  +  1;	  _hashArea    =    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  *  4;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  *  4;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length  *  4;	  final    int[]    oldHashArea    =    _hashArea.length    *    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
58	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  DEFAULT_T_SIZE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea,  DEFAULT_T_SIZE;	  final    int[]    oldHashArea    =    _hashArea.hashArea,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  if(_needRehash!=  false)  {  _needRehash  =  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash!=  false)  {  _needRehash  =  true;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash!=  false)  {  _needRehash  =  true;  }	  _needRehash    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
60	[BUG]  [BUGGY]  if(_needRehash  ==  false)  {  _needRehash  =  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash  ==  false)  {  _needRehash  =  true;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash  ==  false)  {  _needRehash  =  true;  }	  _needRehash    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
61	[BUG]  [BUGGY]  if(_needRehash!=  null)  {  _needRehash  =  true;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash!=  null)  {  _needRehash  =  true;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash!=  null)  {  _needRehash  =  true;  }	  _needRehash    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  +  2;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  +  2;	  final    int[]    oldHashArea    =    _hashArea.length,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  MAX_ENTRIES_FOR_REUSE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  MAX_ENTRIES_FOR_REUSE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea,  MAX_ENTRIES_FOR_REUSE;	  final    int[]    oldHashArea    =    _hashArea,    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  0,  DEFAULT_T_SIZE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  0,  DEFAULT_T_SIZE;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  0,  DEFAULT_T_SIZE;	  final    int[]    oldHashArea    =    _hashArea,    DEFAULT_T_SIZE;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  _hashArea  =  _hashArea.getArc();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  _hashArea.getArc();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  _hashArea.getArc();	  _hashArea    =    _hashArea.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  _hashArea  =  _hashArea.get();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  _hashArea.get();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  _hashArea.get();	  _hashArea    =    _hashArea.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
67	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  +  3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length  +  3;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length  +  3;	  final    int[]    oldHashArea    =    _hashArea.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
68	[BUG]  [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  _hashShared  =  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  _hashShared  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_seedRehash)  {  _seedRehash  =  false;  _hashShared  =  false;  }	  _seedRehash    =    false;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  _hashShared  =  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  _hashShared  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash)  {  _needRehash  =  true;  _hashShared  =  false;  }	  _needRehash    =    true;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  if(_hashShared)  {  _needRehash  =  true;  _hashShared  =  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_hashShared)  {  _needRehash  =  true;  _hashShared  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_hashShared)  {  _needRehash  =  true;  _hashShared  =  false;  }	  _needRehash    =    true;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  *  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  *  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea,  _secondaryStart  *  1;	  final    int[]    oldHashArea    =    _hashArea,    _secondaryStart    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  if(_seedRehash!=  null)  {  _seedRehash  =  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_seedRehash!=  null)  {  _seedRehash  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_seedRehash!=  null)  {  _seedRehash  =  false;  }	  _seedRehash    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
73	[BUG]  [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  _hashShared  =  false;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_seedRehash)  {  _seedRehash  =  false;  _hashShared  =  false;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_seedRehash)  {  _seedRehash  =  false;  _hashShared  =  false;  }  else  {  throw  new  IllegalStateException( " ");  }	  _seedRehash    =    false;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderLength();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderLength();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderLength();	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
75	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderSize()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.getHeaderSize()  +  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.getHeaderSize()  +  1;	  final    int[]    oldHashArea    =    _hashArea.getHeaderSize();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
76	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  -  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.length,  _secondaryStart  -  1;	  final    int[]    oldHashArea    =    _hashArea.length,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
77	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea;	  final    int[]    oldHashArea    =    _hashArea.hashArea,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart  -  1;  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	final  int[]  oldHashArea  =  _hashArea.hashArea,  _secondaryStart  -  1;	  final    int[]    oldHashArea    =    _hashArea.hashArea,    _secondaryStart;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  if(_needRehash)  {  _needRehash  =  false;  _hashShared  =  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash)  {  _needRehash  =  false;  _hashShared  =  false;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash)  {  _needRehash  =  false;  _hashShared  =  false;  }	  _needRehash    =    false;    _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  }  else  {  _hashArea  =  null;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  }  else  {  _hashArea  =  null;  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash)  {  _needRehash  =  true;  }  else  {  _hashArea  =  null;  }	  _needRehash    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
81	[BUG]  [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  }  else  {  System.arraycopy(_names,  0,  _names,  0,  _names.length);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_needRehash)  {  _needRehash  =  true;  }  else  {  System.arraycopy(_names,  0,  _names,  0,  _names.length);  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_needRehash)  {  _needRehash  =  true;  }  else  {  System.arraycopy(_names,  0,  _names,  0,  _names.length);  }	  _needRehash    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
82	[BUG]  [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  DEFAULT_T_SIZE)];  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  DEFAULT_T_SIZE)];  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  DEFAULT_T_SIZE)];  }	  _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  MAX_T_SIZE)];  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  MAX_T_SIZE)];  }  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  MAX_T_SIZE)];  }	  _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  DEFAULT_T_SIZE),  DEFAULT_T  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  DEFAULT_T_SIZE),  DEFAULT_T  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	if(_hashShared)  {  _hashShared  =  false;  }  else  {  _hashArea  =  new  int[Math.min(MAX_ENTRIES_FOR_REUSE,  DEFAULT_T_SIZE),  DEFAULT_T	  _hashShared    =    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  _hashArea  =  _hashArea.getParent();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  _needRehash  =  false;  _hashShared  =  false;        [BUGGY]  _hashArea  =  _hashArea.getParent();  [BUGGY]      final  String[]  oldNames  =  _names;  final  int  oldSize  =  _hashSize;  final  int  oldCount  =  _count;  final  int  newSize  =  oldSize  +  oldSize;  final  int  oldEnd  =  _spilloverEnd;    if  (newSize  >  MAX_T_SIZE)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1068	1068	4	replace	_hashArea  =  _hashArea.getParent();	  _hashArea    =    _hashArea.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
