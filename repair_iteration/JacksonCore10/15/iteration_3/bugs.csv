bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  hash  /  q2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  q2;	  return    hash    +    q2;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2	[BUG]  [BUGGY]  return  hash  -  q2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  q2;	  return    hash    +    q2;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
3	[BUG]  [BUGGY]  return  hash  *  q2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  *  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  *  q2;	  return    hash    +    q2;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q1;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q1;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    ++i)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q2;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q2;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q2;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    ++i)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  q  *  q1;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  q  *  q1;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  q  *  q1;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    ++i)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  int  hash  =  _hashArea.length;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  int  hash  =  _hashArea.length;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	int  hash  =  _hashArea.length;	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    ++i)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _count,  hash);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _count,  hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _count,  hash);	  System.arraycopy(_hashArea,    0,    hash,    _count);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  hash,  q1,  _count);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  hash,  q1,  _count);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  hash,  q1,  _count);	  System.arraycopy(_hashArea,    0,    hash,    _count);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  _count);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  _count);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  q1,  _count);	  System.arraycopy(_hashArea,    0,    hash,    _count);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  return  hash  <  <  16;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  <  <  16;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  <  <  16;	  return    q1    <    <    16;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  return  q1  <  <  8;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  <  <  8;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  <  <  8;	  return    q1    <    <    16;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  return  q1  <  <  12;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  <  <  12;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  <  <  12;	  return    q1    <    <    16;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  _tableInfo.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  _tableInfo.calcHash(q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	_tableInfo.calcHash(q1);	  _tableInfo.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
15	[BUG]  [BUGGY]  _tableInfo.calcHash(q1,  hash);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  _tableInfo.calcHash(q1,  hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	_tableInfo.calcHash(q1,  hash);	  _tableInfo.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
16	[BUG]  [BUGGY]  return  hash  +(q1  <  <  16);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  <  <  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  <  <  16);	  return    hash    +(q1    <    <    0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  return  hash  +(q1  <  <  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  <  <  1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  <  <  1);	  return    hash    +(q1    <    <    0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
18	[BUG]  [BUGGY]  return  hash  +(q1  <  <  12);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  <  <  12);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  <  <  12);	  return    hash    +(q1    <    <    0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
19	[BUG]  [BUGGY]  return  hash  +(q1  <  <  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  <  <  2);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  <  <  2);	  return    hash    +(q1    <    <    0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
20	[BUG]  [BUGGY]  return  hash  /(q1  >>  >  16);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /(q1  >>  >  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /(q1  >>  >  16);	  return    hash    /(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
21	[BUG]  [BUGGY]  return  hash  /(q1  >=  >  16);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /(q1  >=  >  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /(q1  >=  >  16);	  return    hash    /(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  return  hash  /(q2  >>  >  16);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /(q2  >>  >  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /(q2  >>  >  16);	  return    hash    /(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  return  hash  /(q1!=  >  16);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /(q1!=  >  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /(q1!=  >  16);	  return    hash    /(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  return  hash  +(q1  <  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  <  0);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  <  0);	  return    hash    +(q1    >    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
25	[BUG]  [BUGGY]  return  hash  +(q1  <  =  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  <  =  0);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  <  =  0);	  return    hash    +(q1    >    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
26	[BUG]  [BUGGY]  return  hash  +  q1  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  q1  /  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  q1  /  1;	  return    hash    +    q1    -    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
27	[BUG]  [BUGGY]  return  hash  /  q1  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  q1  -  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  q1  -  1;	  return    hash    +    q1    -    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
28	[BUG]  [BUGGY]  _tableInfo.calcHash(hash,  q1,  q1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  _tableInfo.calcHash(hash,  q1,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	_tableInfo.calcHash(hash,  q1,  q1);	  _tableInfo.calcHash(hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
29	[BUG]  [BUGGY]  return  hash  /  16;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  16;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  16;	  return    hash    -    16;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  return  hash  -  12;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  12;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  12;	  return    hash    -    16;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  return  hash?  q1  :(int)_hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :(int)_hashArea.calcHash(q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :(int)_hashArea.calcHash(q1);	  return    hash?    q1    :(int)_hashArea.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
32	[BUG]  [BUGGY]  return  q1?  hash  :(int)_hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1?  hash  :(int)_hashArea.calcHash(q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1?  hash  :(int)_hashArea.calcHash(q1);	  return    hash?    q1    :(int)_hashArea.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
33	[BUG]  [BUGGY]  return  q1?  q1  :(int)_hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1?  q1  :(int)_hashArea.calcHash(q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1?  q1  :(int)_hashArea.calcHash(q1);	  return    hash?    q1    :(int)_hashArea.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
34	[BUG]  [BUGGY]  return  q1  +  hash  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  +  hash  +  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  +  hash  +  1;	  return    q1    +    hash;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  return  hash  +  q1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  q1);	  return    q1    +    hash;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  return  q1  +  q2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  +  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  +  q2;	  return    q1    +    hash;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  return  hash  /  1  +  q1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  1  +  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  1  +  q1;	  return    hash    -    1    +    q1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
38	[BUG]  [BUGGY]  return  hash  -  1  +  q2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  1  +  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  1  +  q2;	  return    hash    -    1    +    q1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
39	[BUG]  [BUGGY]  return  hash  +  1  +  q1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  1  +  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  1  +  q1;	  return    hash    -    1    +    q1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  return  hash  /  q1  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  q1  +  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  q1  +  1;	  return    hash    /    q1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
41	[BUG]  [BUGGY]  return  hash  *  q1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  *  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  *  q1;	  return    hash    /    q1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  _hashArea,  0,  q1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  _hashArea,  0,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  _hashArea,  0,  q1);	  System.arraycopy(_hashArea,    _hashArea,    0,    hash);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  _hashArea,  0,  hash  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  _hashArea,  0,  hash  +  1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  _hashArea,  0,  hash  +  1);	  System.arraycopy(_hashArea,    _hashArea,    0,    hash);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  _seed,  0,  hash);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  _seed,  0,  hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  _seed,  0,  hash);	  System.arraycopy(_hashArea,    _hashArea,    0,    hash);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
45	[BUG]  [BUGGY]  return  hash  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  2;	  return    hash    +    2;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  return  hash  +  4;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  4;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  4;	  return    hash    +    2;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  return  hash  -  q1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  q1  +  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  q1  +  1;	  return    hash    -    q1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  return  q1  -  hash;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  -  hash;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  -  hash;	  return    hash    -    q1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return(hash  <  <  1)?  _hashArea  :  _hashArea;	  return    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea.calcHash(q1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea.calcHash(q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return(hash  <  <  1)?  _hashArea  :  _hashArea.calcHash(q1);	  return    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  return  hash?  q1  :  q2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :  q2;	  return    hash?    q1    :    hash;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
52	[BUG]  [BUGGY]  return  q1?  hash  :  q1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1?  hash  :  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1?  hash  :  q1;	  return    hash?    q1    :    hash;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
53	[BUG]  [BUGGY]  return  hash?  q1  :  q3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :  q3;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :  q3;	  return    hash?    q1    :    hash;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q[i];  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q[i];  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q[i];  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q1[i];  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q1[i];  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q1[i];  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i[i];  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i[i];  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i[i];  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  int  hash  =  q1  ==  _hashArea.length;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  int  hash  =  q1  ==  _hashArea.length;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	int  hash  =  q1  ==  _hashArea.length;	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
58	[BUG]  [BUGGY]  return  hash  +  12;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  12;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  12;	  return    hash    +    16;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
59	[BUG]  [BUGGY]  return  hash  +(q1  >=  >  16);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  >=  >  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  >=  >  16);	  return    hash    +(q1    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  hash  +=  q2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  hash  +=  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	hash  +=  q2;	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q3;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
61	[BUG]  [BUGGY]  hash  +=  q1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  hash  +=  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	hash  +=  q1;	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q3;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
62	[BUG]  [BUGGY]  hash  +=  q3;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  hash  +=  q3;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	hash  +=  q3;	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q3;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i  *  q1;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i  *  q1;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i  *  q1;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q  *  q1;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q  *  q1;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q  *  q1;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i  *  q2;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i  *  q2;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  i  *  q2;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  q1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _hashArea,  q1);	  System.arraycopy(_hashArea,    0,    hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  q1,  q1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  q1,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _hashArea,  q1,  q1);	  System.arraycopy(_hashArea,    0,    hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  hash);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  q1,  hash);	  System.arraycopy(_hashArea,    0,    hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  _hash);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  _hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  q1,  _hash);	  System.arraycopy(_hashArea,    0,    hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
70	[BUG]  [BUGGY]  return  hash  /  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  4;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  4;	  return    hash    /    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  return  hash  /  12;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  12;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  12;	  return    hash    /    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  return  hash  /  1L;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  1L;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  1L;	  return    hash    -    1L;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
73	[BUG]  [BUGGY]  return  hash  -  10.0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  10.0;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  10.0;	  return    hash    -    1L;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _seed,  q1,  q1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _seed,  q1,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _seed,  q1,  q1);	  System.arraycopy(_hashArea,    0,    hash,    q1,    q1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  q1,  q2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  q1,  q2);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _hashArea,  q1,  q2);	  System.arraycopy(_hashArea,    0,    hash,    q1,    q1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
76	[BUG]  [BUGGY]  return  hash  <  <  32;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  <  <  32;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  <  <  32;	  return    q1    <    <    32;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  return  q1?  hash  :  Hash.intValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1?  hash  :  Hash.intValue();  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1?  hash  :  Hash.intValue();	  return    hash?    q1    :    Hash.intValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
78	[BUG]  [BUGGY]  return  hash?  q1  :  Hash.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :  Hash.intValue()  +  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :  Hash.intValue()  +  1;	  return    hash?    q1    :    Hash.intValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
79	[BUG]  [BUGGY]  _tableInfo.calcHash(hash,  q1,  q2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  _tableInfo.calcHash(hash,  q1,  q2);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	_tableInfo.calcHash(hash,  q1,  q2);	  _tableInfo.calcHash(hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q1)  {  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q1)  {  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  ++i)  {  hash  +=  i  *  q1)  {  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    ++i)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  return  hash  -  q1  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  q1  -  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  q1  -  1;	  return    hash    +    q1    -    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
82	[BUG]  [BUGGY]  if(q1  ==  0)  {  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q[i];  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  if(q1  ==  0)  {  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q[i];  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	if(q1  ==  0)  {  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q[i];  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q1  *  q2;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q1  *  q2;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  _hashArea.length;  i++)  {  hash  +=  q1  *  q2;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
84	[BUG]  [BUGGY]  return  hash  /  8;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  8;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  8;	  return    hash    /    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
85	[BUG]  [BUGGY]  return  q1  <  <  16  +  hash;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  <  <  16  +  hash;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  <  <  16  +  hash;	  return    q1    <    <    16;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
86	[BUG]  [BUGGY]  return  hash  +(q1  <  <  8);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1  <  <  8);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1  <  <  8);	  return    hash    +(q1    <    <    0);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
87	[BUG]  [BUGGY]  return  hash  *  1  +  q1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  *  1  +  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  *  1  +  q1;	  return    hash    -    1    +    q1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
88	[BUG]  [BUGGY]  return  hash  -  1  +  q1.hash;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  1  +  q1.hash;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  1  +  q1.hash;	  return    hash    -    1    +    q1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
89	[BUG]  [BUGGY]  return  hash?  q1  :  Hash.intValue()  *  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :  Hash.intValue()  *  4;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :  Hash.intValue()  *  4;	  return    hash?    q1    :    Hash.intValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
90	[BUG]  [BUGGY]  return  hash?  _hashArea  :  q1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  _hashArea  :  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  _hashArea  :  q1;	  return    hash?    q1    :    hash;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
91	[BUG]  [BUGGY]  return  hash  +  16  *  q1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  16  *  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  16  *  q1;	  return    hash    +    16;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  if(q1  >=  0)  {  hash  +=  q2;  }  else  {  hash  +=  q3;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  if(q1  >=  0)  {  hash  +=  q2;  }  else  {  hash  +=  q3;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	if(q1  >=  0)  {  hash  +=  q2;  }  else  {  hash  +=  q3;  }	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q3;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
93	[BUG]  [BUGGY]  return  hash  /  q1  +  4;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  /  q1  +  4;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  /  q1  +  4;	  return    hash    /    q1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  q1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  q1,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  q1,  q1);	  System.arraycopy(_hashArea,    0,    hash,    q1,    q1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(q1,  0,  hash,  _hashArea,  q1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(q1,  0,  hash,  _hashArea,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(q1,  0,  hash,  _hashArea,  q1);	  System.arraycopy(_hashArea,    0,    hash,    q1,    q1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
96	[BUG]  [BUGGY]  return  q1  +  _hashArea.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  +  _hashArea.length;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  +  _hashArea.length;	  return    q1    +    hash;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
97	[BUG]  [BUGGY]  return  q1  +  _hashArea;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  +  _hashArea;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  +  _hashArea;	  return    q1    +    hash;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
98	[BUG]  [BUGGY]  return  hash  *(hash  >>  >  16);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  *(hash  >>  >  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  *(hash  >>  >  16);	  return    hash    /(hash    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  _count);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  _count);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _hashArea,  _count);	  System.arraycopy(_hashArea,    0,    hash,    _count);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea.intValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea.intValue();  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return(hash  <  <  1)?  _hashArea  :  _hashArea.intValue();	  return    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
101	[BUG]  [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea.calcHash(hash);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return(hash  <  <  1)?  _hashArea  :  _hashArea.calcHash(hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return(hash  <  <  1)?  _hashArea  :  _hashArea.calcHash(hash);	  return    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  return  hash?  q1  :(int)_hashArea.calcHash(q2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :(int)_hashArea.calcHash(q2);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :(int)_hashArea.calcHash(q2);	  return    hash?    q1    :(int)_hashArea.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
103	[BUG]  [BUGGY]  return  q1  -(int)_hashArea.calcHash(hash);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  -(int)_hashArea.calcHash(hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  -(int)_hashArea.calcHash(hash);	  return    hash?    q1    :(int)_hashArea.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
104	[BUG]  [BUGGY]  return  hash  +(q1!=  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(q1!=  0);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(q1!=  0);	  return    hash    +(q1    ==    0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
105	[BUG]  [BUGGY]  return  hash  -  4;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  4;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  4;	  return    hash    -    16;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  q1,  0,  hash);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  q1,  0,  hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  q1,  0,  hash);	  System.arraycopy(_hashArea,    _hashArea,    0,    hash);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
107	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  q3;  }  else  {  hash  +=  q2;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  if(q1  ==  0)  {  hash  +=  q3;  }  else  {  hash  +=  q2;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	if(q1  ==  0)  {  hash  +=  q3;  }  else  {  hash  +=  q2;  }	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q2;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
108	[BUG]  [BUGGY]  if(q1  ==  0)  {  hash  +=  q2;  }  else  {  hash  +=  q1;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  if(q1  ==  0)  {  hash  +=  q2;  }  else  {  hash  +=  q1;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	if(q1  ==  0)  {  hash  +=  q2;  }  else  {  hash  +=  q1;  }	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q2;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(q1,  0,  hash,  _hashArea);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(q1,  0,  hash,  _hashArea);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(q1,  0,  hash,  _hashArea);	  System.arraycopy(_hashArea,    0,    hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
110	[BUG]  [BUGGY]  return  hash  +  q1.hash;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  q1.hash;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  q1.hash;	  return    q1    +    hash;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
111	[BUG]  [BUGGY]  return  hash?  _hashArea  :  _hashArea.calcHash(hash);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  _hashArea  :  _hashArea.calcHash(hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  _hashArea  :  _hashArea.calcHash(hash);	  return    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
112	[BUG]  [BUGGY]  return  hash?  _hashArea  :  _hashArea.intValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  _hashArea  :  _hashArea.intValue();  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  _hashArea  :  _hashArea.intValue();	  return    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
113	[BUG]  [BUGGY]  return  hash?  _hashArea  :  _hashArea;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  _hashArea  :  _hashArea;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  _hashArea  :  _hashArea;	  return    _hashArea;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
114	[BUG]  [BUGGY]  return  hash  -  1,  hash;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  1,  hash;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  1,  hash;	  return    hash    -    1L;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
115	[BUG]  [BUGGY]  if(q1  <  =  0)  {  hash  +=  q2;  }  else  {  hash  +=  q3;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  if(q1  <  =  0)  {  hash  +=  q2;  }  else  {  hash  +=  q3;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	if(q1  <  =  0)  {  hash  +=  q2;  }  else  {  hash  +=  q3;  }	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q3;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
116	[BUG]  [BUGGY]  Hash  <  N,  V>  hash  =  _hashArea.getHash(q1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  Hash  <  N,  V>  hash  =  _hashArea.getHash(q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	Hash  <  N,  V>  hash  =  _hashArea.getHash(q1);	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q3;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _hash,  q1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _hash,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _hash,  q1);	  System.arraycopy(_hashArea,    0,    hash,    _count);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  _count  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  _hashArea,  _count  +  1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  _hashArea,  _count  +  1);	  System.arraycopy(_hashArea,    0,    hash,    _count);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
119	[BUG]  [BUGGY]  Hash  <  N,  V>  hash  =  q1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  Hash  <  N,  V>  hash  =  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	Hash  <  N,  V>  hash  =  q1;	  if(q1    ==    0)    {    hash    +=    q2;    }    else    {    hash    +=    q2;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
120	[BUG]  [BUGGY]  return  q1  <  <  32  +  hash;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  q1  <  <  32  +  hash;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  q1  <  <  32  +  hash;	  return    q1    <    <    32;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
121	[BUG]  [BUGGY]  return  hash?  q2  :  Hash.intValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q2  :  Hash.intValue();  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q2  :  Hash.intValue();	  return    hash?    q1    :    Hash.intValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
122	[BUG]  [BUGGY]  return  hash?  q1  :  Hash.intValue()  *  q2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :  Hash.intValue()  *  q2;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :  Hash.intValue()  *  q2;	  return    hash?    q1    :    Hash.intValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
123	[BUG]  [BUGGY]  return  hash  *  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  *  1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  *  1;	  return    hash    /    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  q1.length;  ++i)  {  hash  +=  i  *  q1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  q1.length;  ++i)  {  hash  +=  i  *  q1;  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  q1.length;  ++i)  {  hash  +=  i  *  q1;  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    ++i)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
125	[BUG]  [BUGGY]  hash  +=  i  *  q1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  hash  +=  i  *  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	hash  +=  i  *  q1;	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    ++i)    {    hash    +=    i    *    q1;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
126	[BUG]  [BUGGY]  return  hash  +(hash  ==  >  16);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +(hash  ==  >  16);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +(hash  ==  >  16);	  return    hash    +(q1    >>    >    16);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
127	[BUG]  [BUGGY]  return  hash  &  q1  <  <  16;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  &  q1  <  <  16;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  &  q1  <  <  16;	  return    q1    <    <    16;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
128	[BUG]  [BUGGY]  return  hash?  q1  :  q1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  q1  :  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  q1  :  q1;	  return    hash?    q1    :    hash;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
129	[BUG]  [BUGGY]  _tableInfo.calcHash(hash,  hash);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  _tableInfo.calcHash(hash,  hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	_tableInfo.calcHash(hash,  hash);	  _tableInfo.calcHash(hash,    q1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
130	[BUG]  [BUGGY]  return  hash  -  1,  hash  +  q1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  -  1,  hash  +  q1;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  -  1,  hash  +  q1;	  return    hash    -    1    +    q1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
131	[BUG]  [BUGGY]  return  hash  +  q1,  hash;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash  +  q1,  hash;  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash  +  q1,  hash;	  return    hash    +    q2;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  0,  hash,  q1,  q2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  0,  hash,  q1,  q2);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  0,  hash,  q1,  q2);	  System.arraycopy(_hashArea,    0,    hash,    q1,    q1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  _names,  0,  hash);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  _names,  0,  hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  _names,  0,  hash);	  System.arraycopy(_hashArea,    _hashArea,    0,    hash);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(_hashArea,  _seed,  hash,  0,  q1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  System.arraycopy(_hashArea,  _seed,  hash,  0,  q1);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	System.arraycopy(_hashArea,  _seed,  hash,  0,  q1);	  System.arraycopy(_hashArea,    _hashArea,    0,    hash);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
135	[BUG]  [BUGGY]  return  hash?  _hashArea  :(int)_hashArea.calcHash(hash);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  return  hash?  _hashArea  :(int)_hashArea.calcHash(hash);  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	return  hash?  _hashArea  :(int)_hashArea.calcHash(hash);	  return    hash?    q1    :(int)_hashArea.calcHash(hash);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  q1.length;  i++)  {  hash  +=  q[i];  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  int  calcHash(int  q1)  {  int  hash  =  q1  ^  _seed;      hash  +=  (hash  >>>  16);  //  to  xor  hi-  and  low-  16-bits  hash  ^=  (hash  >>>  12);      [BUGGY]  for(int  i  =  0;  i  <  q1.length;  i++)  {  hash  +=  q[i];  }  [BUGGY]      }  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  calcHash  [RETURN_TYPE]  int  int  q1  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  quads  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  minAdd  newSize  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	985	985	4	replace	for(int  i  =  0;  i  <  q1.length;  i++)  {  hash  +=  q[i];  }	  if(q1    ==    0)    {    for(int    i    =    0;    i    <    _hashArea.length;    i++)    {    hash    +=    i[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
