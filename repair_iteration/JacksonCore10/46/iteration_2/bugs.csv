bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
3	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryShift(newSize);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _calcTertiaryShift(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _calcTertiaryShift(newSize);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  [CE]  [FE]          AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);	  _tertiaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(oldHashArea.length  >>  1);  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(oldHashArea.length  >>  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _tertiaryStart  +(oldHashArea.length  >>  1);	  _tertiaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	6	None	replace
7	[BUG]  [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize);  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _calcTertiaryStart(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _calcTertiaryStart(newSize);	  _tertiaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	6	None	replace
8	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);	  _tertiaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	6	None	replace
9	[BUG]  [BUGGY]  _secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  [CE]  [FE]        AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;	  if(oldHashArea.length    >    0)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	7	None	replace
10	[BUG]  [BUGGY]  _secondaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]          AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryShift  =  _calcTertiaryShift(newSize);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _secondaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
11	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(oldHashArea.length  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _secondaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
12	[BUG]  [BUGGY]  _secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;	  if(oldHashArea.length    >    0)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    oldHashArea.length;    }    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(newSize  >>  1);  [CE]  [FE]        AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(newSize  >>  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _tertiaryStart  +(newSize  >>  1);	  _tertiaryStart    =    _tertiaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	5	None	replace
14	[BUG]  [BUGGY]  _hashArea  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];  _hashSize  =  newSize;  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _hashArea  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];  _hashSize  =  newSize;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_hashArea  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];  _hashSize  =  newSize;	      	non-compiled	[CE]  	4	None	replace
15	[BUG]  [BUGGY]  _hashArea  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _hashArea  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_hashArea  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];	      	non-compiled	[CE]  	4	None	replace
16	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);  [CE]  [FE]        AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(oldHashArea.length  >=  1);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	1	None	replace
17	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  [Delete]  1);  [CE]  [FE]          AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +(oldHashArea.length  [Delete]  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(oldHashArea.length  [Delete]  1);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	1	None	replace
18	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(newSize  >>  1);  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +(newSize  >>  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(newSize  >>  1);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	1	None	replace
19	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +  newSize;  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _secondaryStart  +  newSize;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +  newSize;	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
20	[BUG]  [BUGGY]  _secondaryStart  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  new  int[oldHashArea.length  +  (oldSize  <  <  3)];	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
21	[BUG]  [BUGGY]  _secondaryStart  =  new  int[oldHashArea.length  +  (oldSize  >>  1);  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  new  int[oldHashArea.length  +  (oldSize  >>  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  new  int[oldHashArea.length  +  (oldSize  >>  1);	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
22	[BUG]  [BUGGY]  _secondaryStart  =(newSize  <  <  3);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =(newSize  <  <  3);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =(newSize  <  <  3);	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
23	[BUG]  [BUGGY]  _secondaryStart  =(newSize  <  <  2)+  oldHashArea.length;  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =(newSize  <  <  2)+  oldHashArea.length;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =(newSize  <  <  2)+  oldHashArea.length;	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
24	[BUG]  [BUGGY]  _secondaryStart  =  newSize  +  oldHashArea.length;  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  newSize  +  oldHashArea.length;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  newSize  +  oldHashArea.length;	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
25	[BUG]  [BUGGY]  _secondaryStart  =(newSize  <  <  2)+  newSize;  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =(newSize  <  <  2)+  newSize;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =(newSize  <  <  2)+  newSize;	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
26	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  	4	None	replace
27	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE)  {  return;  }	      	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE  ||  oldHashArea!=  null)  {  return;  }  [CE]  [FE]                  AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE  ||  oldHashArea!=  null)  {  return;  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE  ||  oldHashArea!=  null)  {  return;  }	      	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  _names  =  new  String[oldHashArea.length  +(oldSize  <  <  3)];  [CE]  [FE]                    AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _names  =  new  String[oldHashArea.length  +(oldSize  <  <  3)];  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_names  =  new  String[oldHashArea.length  +(oldSize  <  <  3)];	      	non-compiled	[CE]  	4	None	replace
30	[BUG]  [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(oldHashArea.length  >=  1);  [CE]  [FE]          AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(oldHashArea.length  >=  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _tertiaryStart  +(oldHashArea.length  >=  1);	  _tertiaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
32	[BUG]  [BUGGY]  if(oldHashArea.length  ==  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  ==  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  ==  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
33	[BUG]  [BUGGY]  if(oldHashArea.length  <  2)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  <  2)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  <  2)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
34	[BUG]  [BUGGY]  if(oldHashArea.length  <  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  <  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  <  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
35	[BUG]  [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _tertiaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	3	None	replace
36	[BUG]  [BUGGY]  _secondaryStart  =  newSize  <  <  2;  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  [CE]  [FE]        AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  newSize  <  <  2;  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  newSize  <  <  2;  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;	  if(oldHashArea.length    >    0)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	7	None	replace
37	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  [CE]  [FE]          AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _secondaryStart  +(newSize  >>  1);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(newSize  >>  1);	  _tertiaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	6	None	replace
38	[BUG]  [BUGGY]  _calcTertiaryShift(newSize);  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _calcTertiaryShift(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_calcTertiaryShift(newSize);	      	non-compiled	[CE]  	4	None	replace
39	[BUG]  [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE  ||  newSize  >  MAX_T_SIZE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE  ||  newSize  >  MAX_T_SIZE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea!=  null)  {  if(newSize  >  MAX_ENTRIES_FOR_REUSE  ||  newSize  >  MAX_T_SIZE)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  	4	None	replace
40	[BUG]  [BUGGY]  if(oldHashArea.length  <  1)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  <  1)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  <  1)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
41	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  newSize;  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _tertiaryStart  =  _secondaryStart  +  newSize;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _secondaryStart  +  newSize;	  if(oldHashArea.length    <    2)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    newSize;    }    	non-compiled	[CE]  	9	None	replace
42	[BUG]  [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  >  0)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _secondaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
43	[BUG]  [BUGGY]  if(oldHashArea.length  <  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  <  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  <  1)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _secondaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
44	[BUG]  [BUGGY]  if(oldHashArea.length  <  2)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  if(oldHashArea.length  <  2)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  <  2)  {  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  }	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    //    right    after    secondary    _secondaryShift    =    _calcTertiaryShift(newSize);    	non-compiled	[CE]  	2	None	replace
45	[BUG]  [BUGGY]  _secondaryStart  =  _calcTertiaryStart(newSize);  [CE]  [FE]        AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  _calcTertiaryStart(newSize);  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _calcTertiaryStart(newSize);	  _secondaryStart    =    _secondaryStart    +(_secondaryStart    >>    1);    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  _secondaryStart  =  newSize  <  <  2;  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  [CE]  [FE]              AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =  newSize  <  <  2;  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  newSize  <  <  2;  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;	  if(oldHashArea.length    >    0)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    oldHashArea.length;    }    	non-compiled	[CE]  	10	None	replace
47	[BUG]  [BUGGY]  _secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]        if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;    [BUGGY]  _secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  }  [BUGGY]    _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =(newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  }	  if(oldHashArea.length    >    0)    {    _secondaryStart    =    (newSize    <    <    2);    //    4    ints    per    entry    _tertiaryStart    =    _secondaryStart    +    oldHashArea.length;    }    	non-compiled	[CE]  	10	None	replace
