bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  [CE]  [FE]    AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
2	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]      AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _secondaryShift  =  _calcTertiaryShift(newSize);	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
3	[BUG]  [BUGGY]  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [CE]  [FE]        AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  _secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_secondaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]    [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	  	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
5	[BUG]  [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(_secondaryStart  >>  1);  [CE]  [FE]    AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  _tertiaryStart  =  _tertiaryStart  +(_secondaryStart  >>  1);  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _tertiaryStart  +(_secondaryStart  >>  1);	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
6	[BUG]  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  [CE]  [FE]      AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  _tertiaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	_tertiaryStart  =  _secondaryStart  +(_secondaryStart  >>  1);	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
7	[BUG]  [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  >  0)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
8	[BUG]  [BUGGY]  if(oldHashArea.length  >  3)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  if(oldHashArea.length  >  3)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  >  3)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
9	[BUG]  [BUGGY]  if(oldHashArea.length  <  2)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  if(oldHashArea.length  <  2)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  <  2)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  newSize;  }	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
10	[BUG]  [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  }  [CE]  [FE]          AssertionFailedError  [CONTEXT]      if  (newSize  >  MAX_T_SIZE)  {  nukeSymbols(true);  return;  }  _hashArea  =  new  int[oldHashArea.length  +  (oldSize<<3)];  _hashSize  =  newSize;  [BUGGY]  if(oldHashArea.length  >  0)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  }  [BUGGY]  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  _names  =  new  String[oldNames.length  <<  1];  nukeSymbols(false);      [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  rehash  [RETURN_TYPE]  void  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  oldHashArea  q  quads  String[]  _names  names  oldNames  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  copyCount  count  curr  end  flags  hash  i  ix  len  len2  longNameOffset  longStart  minAdd  newSize  next  offset  offset2  oldCount  oldEnd  oldSize  origOffset  pri  q1  q2  q3  qlen  qoff  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  start  sz  tert  tertiaryShift  toAdd  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	1085	1087	4	replace	if(oldHashArea.length  >  0)  {  _secondaryStart  =  (newSize  <  <  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  oldHashArea.length;  }	_secondaryStart  =  (newSize  <<  2);  //  4  ints  per  entry  _tertiaryStart  =  _secondaryStart  +  (_secondaryStart  >>  1);  //  right  after  secondary  _tertiaryShift  =  _calcTertiaryShift(newSize);  	non-compiled	[CE]  	91	None	replace
