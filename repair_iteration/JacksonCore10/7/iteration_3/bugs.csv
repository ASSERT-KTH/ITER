bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[2];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[2];	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[2];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2	[BUG]  [BUGGY]  _hashArea[offset+2]  =  q[2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+2]  =  q[2];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+2]  =  q[2];	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+2]    =    q[2];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+3]  =  q[2];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+3]  =  q[2];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+3]  =  q[2];	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+2]    =    q[2];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  name.equals(qlen));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  name.equals(qlen));  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalArgumentException( " "  +  name.equals(qlen));	  throw    new    IllegalArgumentException(   "   ".equals(name));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(name));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(name));  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(name));	  throw    new    IllegalArgumentException(   "   ".equals(name));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  _hashArea[offset+1]  =  q[3];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  q[3];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  q[3];	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[3];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "] ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "] ");  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalArgumentException( "] ");	  throw    new    IllegalArgumentException(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
8	[BUG]  [BUGGY]  _hashArea[offset+1]  =  q[0];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  q[0];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  q[0];	  _hashArea[offset+1]    =    q[1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(offset  <  0  ||  offset  >  qlen)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  <  0  ||  offset  >  qlen)  {  break;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  <  0  ||  offset  >  qlen)  {  break;  }	  if(offset    <    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;	  _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+2]  =  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+2]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  q[1];  _hashArea[offset+2]  =  1;	  _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;	  _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalArgumentException( " ".trim());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+1]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  _hashArea[offset+1]  =  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  2;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  2;	  _hashArea[offset+1]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  _hashArea[offset]  =  q[1];  _hashArea[offset+3]  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset]  =  q[1];  _hashArea[offset+3]  =  2;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset]  =  q[1];  _hashArea[offset+3]  =  2;	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    2;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
18	[BUG]  [BUGGY]  ||  offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  ||  offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	||  offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
19	[BUG]  [BUGGY]  safeGet(offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  safeGet(offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	safeGet(offset)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
20	[BUG]  [BUGGY]  safeGet(offset2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  safeGet(offset2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	safeGet(offset2)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  _hashArea[offset]  =  q[1];  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset]  =  q[1];  _hashArea[offset+3]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset]  =  q[1];  _hashArea[offset+3]  =  1;	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
23	[BUG]  [BUGGY]  _hashArea[offset]  =  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset]  =  1;	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
24	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(qlen));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(qlen));  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(qlen));	  throw    new    IllegalArgumentException(   "   ".equals(qlen));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;	  if(offset    ==    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;	  if(offset    ==    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
27	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
28	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  to  a  table  info. ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  to  a  table  info. ");  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalStateException( "Can  not  add  name  to  a  table  info. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
29	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  to  a  non-int  array. ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  to  a  non-int  array. ");  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalStateException( "Can  not  add  name  to  a  non-int  array. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
30	[BUG]  [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	int  qlen  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[2];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
33	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[2];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
34	[BUG]  [BUGGY]  if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[2];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
35	[BUG]  [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  }	  if(offset    ==    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
36	[BUG]  [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
37	[BUG]  [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
39	[BUG]  [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  }	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+1]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
41	[BUG]  [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
42	[BUG]  [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
43	[BUG]  [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
44	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[1];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[1];	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[3];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[2];    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
46	[BUG]  [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }	  if(offset    ==    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
47	[BUG]  [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
48	[BUG]  [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  else  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  else  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  else  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
49	[BUG]  [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  else  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  else  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  throw  new  IllegalStateException( " ");  }  else  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
50	[BUG]  [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+3]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+3]  =  1;	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }	  offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    2;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  qlen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  qlen);  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalArgumentException( " "  +  qlen);	  throw    new    IllegalArgumentException(   "   ".equals(qlen));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  qlen: "  +  qlen);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  qlen: "  +  qlen);  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalArgumentException( "Invalid  qlen: "  +  qlen);	  throw    new    IllegalArgumentException(   "   ".equals(qlen));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  _hashArea[offset+1]  =  q[0];  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  q[0];  _hashArea[offset+3]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  q[0];  _hashArea[offset+3]  =  1;	  _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	int  qlen  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    2;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
58	[BUG]  [BUGGY]  while(offset  <  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  while(offset  <  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	while(offset  <  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));	  if(offset    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
59	[BUG]  [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
60	[BUG]  [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  int  qlen  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	int  qlen  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalArgumentException( "] ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  throw  new  IllegalArgumentException( "] ");  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  throw  new  IllegalArgumentException( "] ");  }	  throw    new    IllegalArgumentException(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
62	[BUG]  [BUGGY]  throw  new  IllegalStateException( "] ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalStateException( "] ");  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalStateException( "] ");	  throw    new    IllegalArgumentException(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
63	[BUG]  [BUGGY]  _hashArea[offset+1]  =  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  0;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  0;	  _hashArea[offset+1]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset!=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
67	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(qlen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(qlen);  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalArgumentException( " ").equals(qlen);	  throw    new    IllegalArgumentException(   "   ".equals(qlen));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  >=  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }	  if(offset    ==    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
69	[BUG]  [BUGGY]  if(qlen  >  3)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(qlen  >  3)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(qlen  >  3)  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  }	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  if(qlen  >  3)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(qlen  >  3)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(qlen  >  3)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  }	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+2]  =  q[2];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+2]  =  q[2];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+2]  =  q[2];  }	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+2]    =    q[2];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[3];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[3];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[3];  }	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[3];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[3];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[3];  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[3];  }	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[3];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  }	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+1]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
75	[BUG]  [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset+1]  =  q[1];  _hashArea[offset+1]  =  1;	  _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(qlen  >  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  }	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    3;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
77	[BUG]  [BUGGY]  if(_seedRehash)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(_seedRehash)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(_seedRehash)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  3;  }	  offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    3;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }	  if(qlen    >    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    2;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
79	[BUG]  [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(_hashArea!=  null)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  }	  if(_hashArea!=    null)    {    offset    =    _findOffsetForAdd(calcHash(q[0]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  name.equals(name));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  name.equals(name));  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalArgumentException( " "  +  name.equals(name));	  throw    new    IllegalArgumentException(   "   ".equals(name));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
82	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(offset    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
83	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  if(offset  <  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  }  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  <  0)  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  0;  }	  if(offset    ==    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
84	[BUG]  [BUGGY]  _hashArea[offset]  =  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  _hashArea[offset]  =  0;  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset]  =  0;	  if(offset    ==    0)    {    offset    =    _findOffsetForAdd(calcHash(q[0],    q[1]));    _hashArea[offset+1]    =    q[1];    _hashArea[offset+3]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
85	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  ' ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  ' ");  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalStateException( "Can  not  add  name  ' ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
86	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  ' "  +  name);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }      [BUGGY]  throw  new  IllegalStateException( "Can  not  add  name  ' "  +  name);  [BUGGY]      case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalStateException( "Can  not  add  name  ' "  +  name);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
