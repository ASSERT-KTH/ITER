bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	throw  new  IllegalArgumentException( " ");	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2	[BUG]  [BUGGY]  _hashArea[offset]  =  q[1];  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  _hashArea[offset]  =  q[1];  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset]  =  q[1];	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  _hashArea[offset]  =  q[0];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  _hashArea[offset]  =  q[0];  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	_hashArea[offset]  =  q[0];	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  if(offset  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  if(offset  ==  0)  {  break;  }  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	if(offset  ==  0)  {  break;  }	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]    [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	  	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[2];	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  int  offset;  switch  (qlen)  {  case  1:  {  offset  =  _findOffsetForAdd(calcHash(q[0]));  _hashArea[offset]  =  q[0];  _hashArea[offset+3]  =  1;  }  [BUGGY]  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;  [BUGGY]  case  2:  {  offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset]  =  q[0];  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  2;  }  break;  case  3:  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  addName  [RETURN_TYPE]  String  String  name  int[]  q  int  qlen  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  String  name  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.7071067811865475	825	825	4	replace	offset  =  _findOffsetForAdd(calcHash(q[0],  q[1]));  _hashArea[offset+1]  =  q[1];  _hashArea[offset+3]  =  1;	break;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
