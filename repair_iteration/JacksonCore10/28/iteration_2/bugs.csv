bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (hashArea[offset2+1]!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  if  (hashArea[offset2+1]!=  0)  {  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	if  (hashArea[offset2+1]!=  0)  {	  if    (hashArea[offset2+1]    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  1))  <  <  2);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  if(offset2  <  (_secondaryStart  +  1))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  if(offset2  <  (_secondaryStart  +  1))  {  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	if(offset2  <  (_secondaryStart  +  1))  {	  if(offset2    <    (_secondaryStart    +    2))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  if(offset2  >=  (_secondaryStart  +  2))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  if(offset2  >=  (_secondaryStart  +  2))  {  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	if(offset2  >=  (_secondaryStart  +  2))  {	  if(offset2    <    (_secondaryStart    +    2))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  if(offset2  <  (_secondaryShift  +  2))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  if(offset2  <  (_secondaryShift  +  2))  {  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	if(offset2  <  (_secondaryShift  +  2))  {	  if(offset2    <    (_secondaryStart    +    2))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  if(offset2!=  (_secondaryStart  +  2))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  if(offset2!=  (_secondaryStart  +  2))  {  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	if(offset2!=  (_secondaryStart  +  2))  {	  if(offset2    <    (_secondaryStart    +    2))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  if(offset2  ==  (_secondaryStart  +  2))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  if(offset2  ==  (_secondaryStart  +  2))  {  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	if(offset2  ==  (_secondaryStart  +  2))  {	  if(offset2    <    (_secondaryStart    +    2))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  2;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  1);  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  1);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	offset2  =  _secondaryStart  +((  offset  >>  (_secondaryShift  +  2))  <  <  _secondaryShift);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  if(offset2  <  (_secondaryShift  +  1))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {  int  offset  =  _calcOffset(hash);  final  int[]  hashArea  =  _hashArea;  if  (hashArea[offset+3]  ==  0)  {  return  offset;  }  int  offset2  =  _secondaryStart  +  ((offset  >>  3)  <<  2);    [BUGGY]  if(offset2  <  (_secondaryShift  +  1))  {  [BUGGY]      return  offset2;  }  offset2  =  _tertiaryStart  +  ((offset  >>  (_tertiaryShift  +  2))  <<  _tertiaryShift);  final  int  bucketSize  =  (1  <<  _tertiaryShift);  for  (int  end  =  offset2  +  bucketSize;  offset2  <  end;  offset2  +=  4)  {  if  (hashArea[offset2+3]  ==  0)  {  [CLASS]  ByteQuadsCanonicalizer  TableInfo  [METHOD]  _findOffsetForAdd  [RETURN_TYPE]  int  int  hash  [VARIABLES]  boolean  _failOnDoS  _hashShared  _intern  _needRehash  failOnDoS  intern  ByteQuadsCanonicalizer  _parent  parent  src  AtomicReference  _tableInfo  int[]  _hashArea  hashArea  mainHash  q  String[]  _names  names  int  DEFAULT_T_SIZE  MAX_ENTRIES_FOR_REUSE  MAX_T_SIZE  MIN_HASH_SIZE  MULT  MULT2  MULT3  _count  _hashSize  _longNameOffset  _secondaryStart  _seed  _spilloverEnd  _tertiaryShift  _tertiaryStart  bucketSize  childCount  count  curr  end  flags  hash  ix  len  len2  longNameOffset  longStart  offset  offset2  origOffset  pri  q1  q2  q3  qlen  sec  seed  size  spill  spillCount  spillOffset  spilloverEnd  sz  tert  tertiaryShift  total  	projects/JacksonCore10/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java	0.6666666666666666	898	898	4	replace	if(offset2  <  (_secondaryShift  +  1))  {	  if(offset2    <    (_secondaryStart    +    2))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
