bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);  len  +=  mRules[i].estimateLength();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);  len  +=  mRules[i].estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);  len  +=  mRules[i].estimateLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    len    +=    mRules[i].estimateLength();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2	[BUG]  [BUGGY]  mRules[i]  =(Rule[])this.rulesList.toArray(new  Rule[this.rulesList.size()  +  1]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules[i]  =(Rule[])this.rulesList.toArray(new  Rule[this.rulesList.size()  +  1]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules[i]  =(Rule[])this.rulesList.toArray(new  Rule[this.rulesList.size()  +  1]);	  mRules[i]    =(Rule[])this.rulesList.toArray(new    Rule[this.rulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  mRules[i]  =(Rule[])rulesList.toArray(new  Rule[this.rulesList.size()  ]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules[i]  =(Rule[])rulesList.toArray(new  Rule[this.rulesList.size()  ]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules[i]  =(Rule[])rulesList.toArray(new  Rule[this.rulesList.size()  ]);	  mRules[i]    =(Rule[])this.rulesList.toArray(new    Rule[this.rulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateLenth();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateLenth();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].estimateLenth();	  mMaxLengthEstimate    =    mRules[i].estimateLength()    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rules[this.rulesList.size()  ]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rules[this.rulesList.size()  ]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rules[this.rulesList.size()  ]);	  mRules    =(Rule[])this.rulesList.toArray(new    Rules[this.rulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rules[this.rulesList.size()  +  1]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rules[this.rulesList.size()  +  1]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])this.rulesList.toArray(new  Rules[this.rulesList.size()  +  1]);	  mRules    =(Rule[])this.rulesList.toArray(new    Rules[this.rulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[this.rulesList.size()  ]);  for(int  i=0;  --i  >=  0;  )  {  mRules[i].estimateLength();  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[this.rulesList.size()  ]);  for(int  i=0;  --i  >=  0;  )  {  mRules[i].estimateLength();  }  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[this.rulesList.size()  ]);  for(int  i=0;  --i  >=  0;  )  {  mRules[i].estimateLength();  }	  mRules    =(Rule[])this.rulesList.toArray(new    Rule[this.rulesList.size()    ]);    for(int    i=0;    --i    >=    0;    )    {    mRules[i].estimateLength();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >>  0;  )  {  len  +=  mRules[i].estimateLength();  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >>  0;  )  {  len  +=  mRules[i].estimateLength();  }  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >>  0;  )  {  len  +=  mRules[i].estimateLength();  }	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    for(int    i=0;    --i    >=    0;    )    {    len    +=    mRules[i].estimateLength();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  mRules[i]  =(Rule[])mRules.toArray(new  Rule[mRulesList.size()  ]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules[i]  =(Rule[])mRules.toArray(new  Rule[mRulesList.size()  ]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules[i]  =(Rule[])mRules.toArray(new  Rule[mRulesList.size()  ]);	  mRules[i]    =(Rule[])mRules.toArray(new    Rule[rulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
10	[BUG]  [BUGGY]  mRules[i]  =(Rule[])mRules.toArray(new  Rule[mRules.size()  ]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules[i]  =(Rule[])mRules.toArray(new  Rule[mRules.size()  ]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules[i]  =(Rule[])mRules.toArray(new  Rule[mRules.size()  ]);	  mRules[i]    =(Rule[])mRules.toArray(new    Rule[rulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
11	[BUG]  [BUGGY]  mRules[i]  =(Rule[])rulesList.toArray(new  Rule[mRulesList.size()  ]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules[i]  =(Rule[])rulesList.toArray(new  Rule[mRulesList.size()  ]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules[i]  =(Rule[])rulesList.toArray(new  Rule[mRulesList.size()  ]);	  mRules[i]    =(Rule[])mRulesList.toArray(new    Rule[mRulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i!=  0;  )  {  mRules[i].estimateLength();  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i!=  0;  )  {  mRules[i].estimateLength();  }  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i!=  0;  )  {  mRules[i].estimateLength();  }	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    for(int    i=0;    --i    >=    0;    )    {    mRules[i].estimateLength();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >>  0;  )  {  mRules[i].estimateLength();  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >>  0;  )  {  mRules[i].estimateLength();  }  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >>  0;  )  {  mRules[i].estimateLength();  }	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    for(int    i=0;    --i    >=    0;    )    {    mRules[i].estimateLength();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rul	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rul    	non-compiled	[CE]  <identifier>  expected	23	None	replace
16	[BUG]  [BUGGY]  if(mRules!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  if(mRules!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	if(mRules!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rul    	non-compiled	[CE]  <identifier>  expected	23	None	replace
17	[BUG]  [BUGGY]  ||(mRules!=  null  &&  mRules.length  >  0)||(mRules  ==  null  &&  mRules.length  >  0))  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  ||(mRules!=  null  &&  mRules.length  >  0)||(mRules  ==  null  &&  mRules.length  >  0))  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	||(mRules!=  null  &&  mRules.length  >  0)||(mRules  ==  null  &&  mRules.length  >  0))  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rul    	non-compiled	[CE]  <identifier>  expected	23	None	replace
18	[BUG]  [BUGGY]  mRules  =(Rule[])super.rulesList.toArray(new  Rule[this.rulesList.size()]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])super.rulesList.toArray(new  Rule[this.rulesList.size()]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])super.rulesList.toArray(new  Rule[this.rulesList.size()]);	  mRules    =(Rule[])this.rulesList.toArray(new    Rule[this.rulesList.size()    +    1]);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
19	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].size()  +  1;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].size()  +  1;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].size()  +  1;	  mMaxLengthEstimate    =    mRules[i].size();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  mMaxLengthEstimate  =  rulesList.size();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  rulesList.size();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  rulesList.size();	  mMaxLengthEstimate    =    mRules[i].size();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
21	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].size.estimateLength();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].size.estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].size.estimateLength();	  mMaxLengthEstimate    =    mRules[i].timeStyle.estimateLength();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
22	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].timeStyle.estimateLength()  +  1;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].timeStyle.estimateLength()  +  1;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].timeStyle.estimateLength()  +  1;	  mMaxLengthEstimate    =    mRules[i].timeStyle.estimateLength();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
23	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].timeStyle.estimateLong();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].timeStyle.estimateLong();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].timeStyle.estimateLong();	  mMaxLengthEstimate    =    mRules[i].timeStyle.estimateLength();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
24	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].values();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].values();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].values();	  mMaxLengthEstimate    =    mRules[i].estimateValue();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
25	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  +  1]);  len  +=  mRules[i].getLength();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  +  1]);  len  +=  mRules[i].getLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  +  1]);  len  +=  mRules[i].getLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    len    +=    mRules[i].getLength();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
26	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[0].getLength();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[0].getLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[0].getLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    len    +=    mRules[i].getLength();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
27	[BUG]  [BUGGY]  mRules  =(Rule[])mRulesList.toArray(new  Rule[rulesList.size()  ]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])mRulesList.toArray(new  Rule[rulesList.size()  ]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])mRulesList.toArray(new  Rule[rulesList.size()  ]);	  mRules    =(Rule[])mRulesList.toArray(new    Rule[mRulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
28	[BUG]  [BUGGY]  mRules  =(Rule[])mRulesList.toArray(new  Rule[mRulesList.size()  +  1]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])mRulesList.toArray(new  Rule[mRulesList.size()  +  1]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])mRulesList.toArray(new  Rule[mRulesList.size()  +  1]);	  mRules    =(Rule[])mRulesList.toArray(new    Rule[mRulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[1].estimateLength();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[1].estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[1].estimateLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    len    +=    mRules[0].estimateLength();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
30	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  +  1]);  len  +=  mRules[0].estimateLength();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  +  1]);  len  +=  mRules[0].estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  +  1]);  len  +=  mRules[0].estimateLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    len    +=    mRules[0].estimateLength();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
31	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateLong();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateLong();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].estimateLong();	  mMaxLengthEstimate    =    mRules[i].estimateMean();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
32	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateSize();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateSize();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].estimateSize();	  mMaxLengthEstimate    =    mRules[i].estimateMean();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
33	[BUG]  [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rules[rulesList.size()]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])this.rulesList.toArray(new  Rules[rulesList.size()]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])this.rulesList.toArray(new  Rules[rulesList.size()]);	  mRules    =(Rule[])rulesList.toArray(new    Rules[rulesList.size()    +    1]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  mRules[i]  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules[i]  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules[i]  =(Rule[])this.rulesList.toArray(new  Rule[rulesList.size()]);	  mRules[i]    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].setSize(len  +  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].setSize(len  +  1);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].setSize(len  +  1);	  mMaxLengthEstimate    =    mRules[i].setSize(len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].setLength(len);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].setLength(len);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].setLength(len);	  mMaxLengthEstimate    =    mRules[i].setSize(len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].setSize(len  +  2);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].setSize(len  +  2);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].setSize(len  +  2);	  mMaxLengthEstimate    =    mRules[i].setSize(len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].setSize(len  +  3);  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].setSize(len  +  3);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].setSize(len  +  3);	  mMaxLengthEstimate    =    mRules[i].setSize(len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
39	[BUG]  [BUGGY]  mMinLengthEstimate  =  mRules[i].estimateLength();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMinLengthEstimate  =  mRules[i].estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMinLengthEstimate  =  mRules[i].estimateLength();	  mMaxLengthEstimate    =    mRules[i].estimateLength()    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
40	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength()  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength()  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength()	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    for(int    i=0;    --i    >=    0;    )    {    len    +=    mRules[i].estimateLength();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.    	non-compiled	[CE]  <identifier>  expected	22	None	replace
42	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  Len  +=  mRules[i].estimateLength();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  Len  +=  mRules[i].estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  Len  +=  mRules[i].estimateLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    len    +=    mRules[i].estimateLength();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
43	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].monthStyle.estimateLength();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].monthStyle.estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].monthStyle.estimateLength();	  mMaxLengthEstimate    =    mRules[i].timeStyle.estimateLength();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
44	[BUG]  [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateMean(mField);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mMaxLengthEstimate  =  mRules[i].estimateMean(mField);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mMaxLengthEstimate  =  mRules[i].estimateMean(mField);	  mMaxLengthEstimate    =    mRules[i].estimateMean();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
45	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[2].estimateLength();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[2].estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[2].estimateLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    len    +=    mRules[0].estimateLength();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rul    	non-compiled	[CE]  <identifier>  expected	23	None	replace
47	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >=  0;  )  {  Len  +=  mRules[i].estimateLength();  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >=  0;  )  {  Len  +=  mRules[i].estimateLength();  }  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()]);  for(int  i=0;  --i  >=  0;  )  {  Len  +=  mRules[i].estimateLength();  }	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    +    1]);    for(int    i=0;    --i    >=    0;    )    {    len    +=    mRules[i].estimateLength();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[len].estimateLength();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[len].estimateLength();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  len  +=  mRules[len].estimateLength();	  mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    len    +=    mRules[0].estimateLength();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  if(rulesList!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  if(rulesList!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	if(rulesList!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rul    	non-compiled	[CE]  <identifier>  expected	23	None	replace
50	[BUG]  [BUGGY]  if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rule  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rule  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	if(mRules  ==  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rule	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.    	non-compiled	[CE]  <identifier>  expected	22	None	replace
51	[BUG]  [BUGGY]  if(rulesList!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  if(rulesList!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	if(rulesList!=  null)  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rulesList.size()  ]);  }  else  {  mRules  =(Rule[])rulesList.toArray(new  Rule[rul	  if(mRules!=    null)    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.size()    ]);    }    else    {    mRules    =(Rule[])rulesList.toArray(new    Rule[rulesList.    	non-compiled	[CE]  <identifier>  expected	22	None	replace
52	[BUG]  [BUGGY]  if(this.rulesList!=  null)  {  mRules  =(Rule[])this.rulesList.toArray(new  Rule[this.rulesList.size()  ]);  for(int  i=0;  --i  >=  0;  )  {  mRules[i].estimateLength();  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  if(this.rulesList!=  null)  {  mRules  =(Rule[])this.rulesList.toArray(new  Rule[this.rulesList.size()  ]);  for(int  i=0;  --i  >=  0;  )  {  mRules[i].estimateLength();  }  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	if(this.rulesList!=  null)  {  mRules  =(Rule[])this.rulesList.toArray(new  Rule[this.rulesList.size()  ]);  for(int  i=0;  --i  >=  0;  )  {  mRules[i].estimateLength();  }	  mRules    =(Rule[])this.rulesList.toArray(new    Rule[this.rulesList.size()    ]);    for(int    i=0;    --i    >=    0;    )    {    mRules[i].estimateLength();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  mRules[i]  =(Rule[])mRules.toArray(new  Rule[this.rulesList.size()  ]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  void  init()  {  List  rulesList  =  parsePattern();  mRules  =  (Rule[])  rulesList.toArray(new  Rule[rulesList.size()]);  int  len  =  0;  for  (int  i=mRules.length;  --i  >=  0;  )  {  len  +=  mRules[i].estimateLength();  }  mMaxLengthEstimate  =  len;      [BUGGY]  mRules[i]  =(Rule[])mRules.toArray(new  Rule[this.rulesList.size()  ]);  [BUGGY]        [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  List  rulesList  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	mRules[i]  =(Rule[])mRules.toArray(new  Rule[this.rulesList.size()  ]);	  mRules[i]    =(Rule[])this.rulesList.toArray(new    Rule[this.rulesList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
