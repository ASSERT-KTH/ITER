bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  Format;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  if(!format.isEmpty())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
2	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||!format.isEmpty())  {  return  Format;  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||!format.isEmpty())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||!format.isEmpty())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
3	[BUG]  [BUGGY]  ||  format.isEmpty())  {  return  Format;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  ||  format.isEmpty())  {  return  Format;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	||  format.isEmpty())  {  return  Format;	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setString(values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setString(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setString(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setString(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  format.setString(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  format.setString(mValues[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  format.setString(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setString(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setString(values[i]);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setString(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setString(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setString(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  locale);	  Format    <?>    format    =    new    FastDateFormat(format,    locale);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
8	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  values.length  -  1);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  values.length  -  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  values.length  -  1);	  Format    format    =    new    FastDateFormat(format,    values.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  mValues.length);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  mValues.length);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  mValues.length);	  Format    format    =    new    FastDateFormat(format,    values.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  values.length  +  1);  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  values.length  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  values.length  +  1);	  Format    format    =    new    FastDateFormat(format,    values.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values.length);  [CE]  <identifier>  expected  [FE]                              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values.length);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  values.length);	  Format    format    =    new    FastDateFormat(format,    values.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  mValues.get(0);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  mValues.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  mValues.get(0);	  Format    <    String,    Object>    format    =    values.get(0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
13	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.values.get(0);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  this.values.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  this.values.get(0);	  Format    <    String,    Object>    format    =    values.get(0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
14	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.get(0);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  this.mValues.get(0);	  Format    <    String,    Object>    format    =    values.get(0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
15	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
16	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  null)  {  format.init();  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format  ==  null)  {  format.init();  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format  ==  null)  {  format.init();  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
18	[BUG]  [BUGGY]  if(format!=  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
19	[BUG]  [BUGGY]  if(format  ==  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
20	[BUG]  [BUGGY]  if(format!=  null)  {  Format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  Format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
21	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.set(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
24	[BUG]  [BUGGY]  this.format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  this.format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	this.format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
25	[BUG]  [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  format  =  cInstanceCache.get(i);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  format  =  cInstanceCache.get(i);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  format  =  cInstanceCache.get(i);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
26	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  locale);	  if(format!=    null)    {    format    =    new    FastDateFormat(format,    locale);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
27	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  locale));  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  locale));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  locale));	  Format    <?>    format    =    new    FastDateFormat(format,    locale));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
28	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale));  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale));	  Format    <?>    format    =    new    FastDateFormat(format,    locale));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
29	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale));  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale));	  Format    <?>    format    =    new    FastDateFormat(format,    locale));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
30	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  [Delete]  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	[Delete]	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
31	[BUG]  [BUGGY]  cast(format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	cast(format);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
32	[BUG]  [BUGGY]  cast(cInstanceCache,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(cInstanceCache,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	cast(cInstanceCache,  format);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
33	[BUG]  [BUGGY]  cast(cInstanceCache);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(cInstanceCache);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	cast(cInstanceCache);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
34	[BUG]  [BUGGY]  Format  {  int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
35	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
36	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.set(i,  values[i]);  }	  Format    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
37	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  this.mValues.size();  ++i)  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  this.mValues.size();  ++i)  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  this.mValues.size();  ++i)  {  format.set(i,  values[i]);  }	  Format    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
38	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  mValues.get(i);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  mValues.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  mValues.get(i);	  Format    <    String,    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
39	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.values.get(i);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  this.values.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  this.values.get(i);	  Format    <    String,    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
40	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.get(i);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  this.mValues.get(i);	  Format    <    String,    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
41	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  values.get(format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  values.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  values.get(format);	  Format    <    String,    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
42	[BUG]  [BUGGY]  cast(format,  false);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(format,  false);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	cast(format,  false);	  if(format    ==    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
43	[BUG]  [BUGGY]  castFormat(format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  castFormat(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	castFormat(format);	  if(format    ==    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
44	[BUG]  [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
45	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
46	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues[i],  format);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues[i],  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues[i],  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
47	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }	  cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }	  cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  Format  cInstanceCache  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
50	[BUG]  [BUGGY]  Format  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
51	[BUG]  [BUGGY]  parent  ==  null  ||  format.init())  {  return  emptyFormat;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  ==  null  ||  format.init())  {  return  emptyFormat;  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent  ==  null  ||  format.init())  {  return  emptyFormat;	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
52	[BUG]  [BUGGY]  parent  ==  null  &&  parent.init())  {  return  emptyFormat;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  ==  null  &&  parent.init())  {  return  emptyFormat;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent  ==  null  &&  parent.init())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
53	[BUG]  [BUGGY]  parent  ==  null  &&  parent.init())  {  return  emptyFormat;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  ==  null  &&  parent.init())  {  return  emptyFormat;  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent  ==  null  &&  parent.init())  {  return  emptyFormat;	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
54	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
55	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
56	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  mValues);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  mValues);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  mValues);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
57	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  values);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
58	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  value);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
59	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    Format    format    =    emptyFormat.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
60	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    Format    format    =    emptyFormat.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  cInstanceCache.get(emptyFormat);	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.clone();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.clone();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.clone();	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  cInstanceCache.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  cInstanceCache.get(format);	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.cloneTree();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.cloneTree();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.cloneTree();	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)mRules.get(c);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =(FastDateFormat)mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern.get(c);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
66	[BUG]  [BUGGY]  Format  format  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern.get(c);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
67	[BUG]  [BUGGY]  Format  cDefaultPattern  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cDefaultPattern  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cDefaultPattern  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern.get(c);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
68	[BUG]  [BUGGY]  Format  cInstanceCache  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern.get(c);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
69	[BUG]  [BUGGY]  if(format.isEmpty())  {  if(!format.isEmpty())  {  return  format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format.isEmpty())  {  if(!format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format.isEmpty())  {  if(!format.isEmpty())  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
70	[BUG]  [BUGGY]  ||!format.isEmpty())  {  return  format;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  ||!format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	||!format.isEmpty())  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
71	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
72	[BUG]  [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
73	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(0);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.get(0);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
74	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(i  +  1);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(i  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.get(i  +  1);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
75	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(null);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.get(null);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
76	[BUG]  [BUGGY]  Format  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
77	[BUG]  [BUGGY]  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
78	[BUG]  [BUGGY]  Format  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
79	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.setLong(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.setLong(mValues[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.setLong(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i].longValue());  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i].longValue());  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i].longValue());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setString(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setString(mValues[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setString(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
84	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
85	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
86	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  &&  format.isEmpty())  {  return  format;  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  &&  format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  &&  format.isEmpty())  {  return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
87	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
88	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
89	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStandardException( " ");  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsStandardException( " ");  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.throwAsStandardException( " ");	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
90	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  emptyFormat);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
91	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  converted  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  converted  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  init();//  converted  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
92	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  TimeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  TimeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  TimeZone,  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
93	[BUG]  [BUGGY]  Format  format  =  format.append('n');  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.append('n');  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.append('n');	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(values[i]);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setLong(values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setLong(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setLong(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
96	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(0);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(0);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
97	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(i  +  1);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(i  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(i  +  1);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
98	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(null);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(null);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
99	[BUG]  [BUGGY]  if(format  ==  null  ||!format.isEmpty())  {  return  format;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null  ||!format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null  ||!format.isEmpty())  {  return  format;  }	  if(format!=    null    ||!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
100	[BUG]  [BUGGY]  Format  <  String,  Rule>  c  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Rule>  c  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Rule>  c  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern[c];    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
101	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)mRules.get(0);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)mRules.get(0);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =(FastDateFormat)mRules.get(0);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern[c];    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.get(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.get(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.get(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
103	[BUG]  [BUGGY]  Format  format  =  format.get(i);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.get(i);	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
104	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.remove();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.remove();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.remove();	  Format    <?>    emptyFormat    =    format.get();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
105	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.get(0);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.get(0);	  Format    <?>    emptyFormat    =    format.get();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
106	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  timeZone,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
107	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mValues,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mValues,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  mValues,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
108	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  pattern,  timeZone,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  Format  <  Object>  format  =  mValues.get(i);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  format  =  mValues.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  format  =  mValues.get(i);	  Format    <    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
110	[BUG]  [BUGGY]  Format  <  Object>  format  =  this.values.get(i);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  format  =  this.values.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  format  =  this.values.get(i);	  Format    <    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
111	[BUG]  [BUGGY]  Format  <  Object>  format  =  this.mValues.get(i);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  format  =  this.mValues.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  format  =  this.mValues.get(i);	  Format    <    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
112	[BUG]  [BUGGY]  Format  <  Object>  format  =  values.get(format);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  format  =  values.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  format  =  values.get(format);	  Format    <    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
113	[BUG]  [BUGGY]  Format  <?>  format  =  format;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format;	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
114	[BUG]  [BUGGY]  Format  <?>  format  =  emptyFormat.cloneTree();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  emptyFormat.cloneTree();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  emptyFormat.cloneTree();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
115	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <  Object>();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
116	[BUG]  [BUGGY]  Format  <?>  format  =  null;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  null;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  null;	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
117	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.set(i,  values[i]);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
118	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  values[i]);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
119	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  -  1;  ++i)  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  -  1;  ++i)  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  values.length  -  1;  ++i)  {  format.set(i,  values[i]);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
120	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format.getMillis());  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format.getMillis());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format.getMillis());	  Format    <?>    format    =    new    FastDateFormat    <?>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
121	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format.getTime());  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format.getTime());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format.getTime());	  Format    <?>    format    =    new    FastDateFormat    <?>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
122	[BUG]  [BUGGY]  Format  <?>  format  =  mValues.get(i);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  mValues.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  mValues.get(i);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
123	[BUG]  [BUGGY]  Format  <?>  format  =  this.values.get(i);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  this.values.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  this.values.get(i);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
124	[BUG]  [BUGGY]  Format  <?>  format  =  this.mValues.get(i);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  this.mValues.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  this.mValues.get(i);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
125	[BUG]  [BUGGY]  Format  <?>  format  =  values.get(0);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  values.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  values.get(0);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
126	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
127	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(format,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  getInstance(format,  timeZone,  locale);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
128	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
130	[BUG]  [BUGGY]  Format  format  =  format.get(mValues);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.get(mValues);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.get(mValues);	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
131	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	format  =  new  FastDateFormat(pattern,  timeZone,  locale);	  Format    format    =    new    FastDateFormat(format,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
132	[BUG]  [BUGGY]  if(format  ==  null)  {  if(format!=  null)  {  format.init();  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(format!=  null)  {  format.init();  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  if(format!=  null)  {  format.init();  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
133	[BUG]  [BUGGY]  Format  <?>  format  =  mValues.iterator().next();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  mValues.iterator().next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  mValues.iterator().next();	  Format    <?>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
134	[BUG]  [BUGGY]  Format  <?>  format  =  this.values.iterator().next();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  this.values.iterator().next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  this.values.iterator().next();	  Format    <?>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
135	[BUG]  [BUGGY]  Format  <?>  format  =  this.mValues.iterator().next();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  this.mValues.iterator().next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  this.mValues.iterator().next();	  Format    <?>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.add(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
137	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone.getDefault(),  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
138	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
139	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone.getValue(),  locale);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone.getValue(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone.getValue(),  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
140	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone.getType(),  locale);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone.getType(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone.getType(),  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
141	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty()  ||  format.equals(mValues))  {  return  format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty()  ||  format.equals(mValues))  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  if(!format.isEmpty()  ||  format.equals(mValues))  {  return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.equals(mValues))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
142	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  &&  format.equals(mValues))  {  return  format;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  &&  format.equals(mValues))  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  &&  format.equals(mValues))  {  return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.equals(mValues))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
143	[BUG]  [BUGGY]  if(format!=  null  ||!format.isEmpty()  ||  format.equals(mValues))  {  return  format;  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null  ||!format.isEmpty()  ||  format.equals(mValues))  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null  ||!format.isEmpty()  ||  format.equals(mValues))  {  return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.equals(mValues))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
144	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
145	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
146	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
147	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  locale);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
148	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  false);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
149	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  null);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  null);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
150	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  FORMAT);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  FORMAT);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
151	[BUG]  [BUGGY]  For(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  For(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	For(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
152	[BUG]  [BUGGY]  Format  c  =(FastDateFormat)mRules.get(c);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  c  =(FastDateFormat)mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  c  =(FastDateFormat)mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
153	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(mValue))  {  return  format;  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  parent.equals(mValue))  {  return  format;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  parent.equals(mValue))  {  return  format;  }	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
154	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(mValue);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingValue(mValue);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingValue(mValue);	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
155	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(mValue,  format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingValue(mValue,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingValue(mValue,  format);	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
156	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(mValue);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  parent.equals(mValue);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  parent.equals(mValue);	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
157	[BUG]  [BUGGY]  rmndrmnd  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmnd  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmnd  =  new  FastDateFormat(format,  timeZone,  locale);	  rmândrmând    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
158	[BUG]  [BUGGY]  rmnd  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmnd  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmnd  =  new  FastDateFormat(format,  timeZone,  locale);	  rmândrmând    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
159	[BUG]  [BUGGY]  rmndrmn  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmn  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmn  =  new  FastDateFormat(format,  timeZone,  locale);	  rmândrmând    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
160	[BUG]  [BUGGY]  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);	  rmândrmând    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
161	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.getInstanceUTC();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.getInstanceUTC();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.getInstanceUTC();	  Format    <?>    emptyFormat    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
162	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.instance();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.instance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.instance();	  Format    <?>    emptyFormat    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
163	[BUG]  [BUGGY]  ||  format.isEmpty())  {  return  emptyFormat;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  ||  format.isEmpty())  {  return  emptyFormat;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	||  format.isEmpty())  {  return  emptyFormat;	  ||    format.isEmpty())    {    return    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
164	[BUG]  [BUGGY]  &&  format.isEmpty())  {  return  format;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  &&  format.isEmpty())  {  return  format;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	&&  format.isEmpty())  {  return  format;	  ||    format.isEmpty())    {    return    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
165	[BUG]  [BUGGY]  ||  format.isEmpty())  {  return  emptyFormat;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  ||  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	||  format.isEmpty())  {  return  emptyFormat;  }	  ||    format.isEmpty())    {    return    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
166	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  value,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  value,  locale);	  Format    format    =    new    FastDateFormat(format,    mValues,    locale);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
167	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  values,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  values,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  values,  locale);	  Format    format    =    new    FastDateFormat(format,    mValues,    locale);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
168	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  mValues.iterator().next();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  mValues.iterator().next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  mValues.iterator().next();	  Format    <    String,    Object>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
169	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.values.iterator().next();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  this.values.iterator().next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  this.values.iterator().next();	  Format    <    String,    Object>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
170	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.iterator().next();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.iterator().next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  this.mValues.iterator().next();	  Format    <    String,    Object>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
171	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(mRules);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  parent.equals(mRules);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  parent.equals(mRules);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
172	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(mRules[0]))  {  return  format;  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  parent.equals(mRules[0]))  {  return  format;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  parent.equals(mRules[0]))  {  return  format;  }	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
173	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(mRules))  {  return  format;  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  parent.equals(mRules))  {  return  format;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  parent.equals(mRules))  {  return  format;  }	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
174	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(mRules);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  ==  null  &&  parent.equals(mRules);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent  ==  null  &&  parent.equals(mRules);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
175	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  value,  locale);	  Format    format    =    new    FastDateFormat(mValues,    mDaylight,    locale);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
176	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mDaylight,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mDaylight,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  mDaylight,  locale);	  Format    format    =    new    FastDateFormat(mValues,    mDaylight,    locale);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setInt(values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setInt(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setInt(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setInt(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  format.setInt(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  format.setInt(mValues[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  format.setInt(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setInt(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
179	[BUG]  [BUGGY]  Format  format  =  format.setInt(values[i]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.setInt(values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.setInt(values[i]);	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setInt(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
180	[BUG]  [BUGGY]  Format.set(format,  mValues[i],  values[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(format,  mValues[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.set(format,  mValues[i],  values[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
181	[BUG]  [BUGGY]  Format.set(mValues[i],  values[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(mValues[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.set(mValues[i],  values[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
182	[BUG]  [BUGGY]  Format.set(format,  mValues[i],  mValues[i]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(format,  mValues[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.set(format,  mValues[i],  mValues[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
183	[BUG]  [BUGGY]  Format.set(mValues,  values[i],  values[i]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(mValues,  values[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.set(mValues,  values[i],  values[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
184	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  location);	  Format    format    =    new    FastDateFormat(format,    locale);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
185	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mDaylight,  mPattern,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mDaylight,  mPattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  mDaylight,  mPattern,  locale);	  Format    format    =    new    FastDateFormat(mValues,    mPattern,    locale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
186	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mPattern,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mPattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  mPattern,  locale);	  Format    format    =    new    FastDateFormat(mValues,    mPattern,    locale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
187	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  Format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  Format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format.put(i,  Format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    Format);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
188	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  this.values.length;  ++i)  {  format.put(i,  Format);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  this.values.length;  ++i)  {  format.put(i,  Format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  this.values.length;  ++i)  {  format.put(i,  Format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    Format);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
189	[BUG]  [BUGGY]  Format  format  =  format.clone();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.clone();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.clone();	  Format    format    =    format.cloneFormat();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
190	[BUG]  [BUGGY]  Format  format  =  format.cloneTree();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.cloneTree();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.cloneTree();	  Format    format    =    format.cloneFormat();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
191	[BUG]  [BUGGY]  Format  format  =  format.getFormat();  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.getFormat();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.getFormat();	  Format    format    =    format.cloneFormat();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
192	[BUG]  [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
193	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
194	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(i);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(i);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(i);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
195	[BUG]  [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(i);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(i);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  cInstanceCache.get(i);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
196	[BUG]  [BUGGY]  Format  cInstance  =(FastDateFormat)cInstanceCache.get(i);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstance  =(FastDateFormat)cInstanceCache.get(i);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstance  =(FastDateFormat)cInstanceCache.get(i);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
197	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(instance);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(instance);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(instance);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
198	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.initialize();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.initialize();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.initialize();	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
199	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.initialise();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.initialise();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.initialise();	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
200	[BUG]  [BUGGY]  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
201	[BUG]  [BUGGY]  SafeFormat  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  SafeFormat  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	SafeFormat  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
202	[BUG]  [BUGGY]  rmndrmnd  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmnd  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmnd  =  getInstance(pattern,  timeZone,  locale);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
203	[BUG]  [BUGGY]  rmndrmnd  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmnd  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmnd  =  getInstance(pattern,  timeZone,  locale,  false);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
204	[BUG]  [BUGGY]  rmndrmndsnd  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmndsnd  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmndsnd  =  getInstance(pattern,  timeZone,  locale);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
205	[BUG]  [BUGGY]  rmndrmnd  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmnd  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmnd  =  getInstance(pattern,  timeZone,  locale,  true);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
206	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
207	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
208	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals(locale))  {  return  format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals(locale))  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals(locale))  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
209	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
210	[BUG]  [BUGGY]  ||  format.equals(locale))  {  return  format;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  ||  format.equals(locale))  {  return  format;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	||  format.equals(locale))  {  return  format;	  ||    format.isEmpty())    {    return    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
213	[BUG]  [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	safeFormat  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
214	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
215	[BUG]  [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
216	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
217	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
218	[BUG]  [BUGGY]  Format  one  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  one  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  one  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
219	[BUG]  [BUGGY]  rmndrmn  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmn  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmn  =  getInstance(pattern,  timeZone,  locale);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
220	[BUG]  [BUGGY]  rmndrmnd  =  getInstance(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmnd  =  getInstance(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmnd  =  getInstance(format,  timeZone,  locale);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
221	[BUG]  [BUGGY]  rmndrmnds  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmnds  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmnds  =  getInstance(pattern,  timeZone,  locale);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
222	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  location,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  location,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  location,  locale);	  Format    <?>    format    =    new    FastDateFormat(format,    locale);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
223	[BUG]  [BUGGY]  Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    Format    format    =    emptyFormat.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
224	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.startsWith(mValues))  {  return  format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.startsWith(mValues))  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.startsWith(mValues))  {  return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.equals(mValues))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
225	[BUG]  [BUGGY]  Format  <  T>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  T>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  T>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
226	[BUG]  [BUGGY]  Format  <  Character>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Character>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Character>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
227	[BUG]  [BUGGY]  Format  <?>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
228	[BUG]  [BUGGY]  Format  <?>  cInstanceCache  =  new  FastDateFormat(format,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache  =  new  FastDateFormat(format,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  cInstanceCache  =  new  FastDateFormat(format,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
229	[BUG]  [BUGGY]  Format.setLong(values[i]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.setLong(values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.setLong(values[i]);	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
230	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  timeZone,  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
231	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  format  =  new  FastDateFormat(format,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	format  =  new  FastDateFormat(format,  locale);	  if(format!=    null)    {    format    =    new    FastDateFormat(format,    locale);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
232	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  location);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  location);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  location);	  if(format!=    null)    {    format    =    new    FastDateFormat(format,    locale);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
233	[BUG]  [BUGGY]  Format  <?>  format  =  values.get(format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  values.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  values.get(format);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
234	[BUG]  [BUGGY]  Format  <?>  format  =  getValues(i);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  getValues(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  getValues(i);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
235	[BUG]  [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
236	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
237	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
238	[BUG]  [BUGGY]  Format.init();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.init();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.init();	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
239	[BUG]  [BUGGY]  Format.instance();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.instance();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.instance();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
240	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  TimeZone,  timeZone,  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
241	[BUG]  [BUGGY]  Format  <  Object,  Rule>  c  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object,  Rule>  c  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object,  Rule>  c  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern.get(c);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
242	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
243	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
244	[BUG]  [BUGGY]  Format  <  Object,  Rule>  cInstanceCache  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object,  Rule>  cInstanceCache  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object,  Rule>  cInstanceCache  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
245	[BUG]  [BUGGY]  Format  <  Object,  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object,  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object,  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
246	[BUG]  [BUGGY]  Format  <  NumberRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  NumberRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  NumberRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
247	[BUG]  [BUGGY]  Format  {  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
248	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setInt(values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setInt(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  format.setInt(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setInt(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
249	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  mDaylight,  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  mDaylight,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  mDaylight,  locale);	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
250	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
251	[BUG]  [BUGGY]  Format  <  N,  V>  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  N,  V>  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
252	[BUG]  [BUGGY]  Format.set(values[i],  mValues[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(values[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.set(values[i],  mValues[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
253	[BUG]  [BUGGY]  Format.set(values[i],  values[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(values[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.set(values[i],  values[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
254	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  values,  locale);	  Format    format    =    new    FastDateFormat(mValues,    mDaylight,    locale);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
255	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.getFullInstance();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.getFullInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.getFullInstance();	  Format    <?>    emptyFormat    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
256	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.set(i,  values[i]);  }	  Format    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
257	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
258	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE_NO_COLON);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE_NO_COLON);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE_NO_COLON);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
259	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  timeZone);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  timeZone);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
260	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>(format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <  Object>(format);	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
261	[BUG]  [BUGGY]  Format  <?>  format  =  format.getFullFormat();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.getFullFormat();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.getFullFormat();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
262	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
263	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
264	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  new  FastDateFormat(format,  locale);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  new  FastDateFormat(format,  locale);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format  =  new  FastDateFormat(format,  locale);  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
265	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  Format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
266	[BUG]  [BUGGY]  Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
267	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
268	[BUG]  [BUGGY]  Format  <  Object>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
269	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mDaylight,  mPattern,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mDaylight,  mPattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mDaylight,  mPattern,  locale);	  Format    format    =    new    FastDateFormat(mValues,    mPattern,    locale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
270	[BUG]  [BUGGY]  if(format  ==  null)  {  if(format.init())  {  return  emptyFormat;  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(format.init())  {  return  emptyFormat;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  if(format.init())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
271	[BUG]  [BUGGY]  if(format!=  null)  {  if(format.initialize())  {  return  emptyFormat;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format.initialize())  {  return  emptyFormat;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format.initialize())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
272	[BUG]  [BUGGY]  if(format!=  null)  {  if(format.initialise())  {  return  emptyFormat;  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format.initialise())  {  return  emptyFormat;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format.initialise())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
273	[BUG]  [BUGGY]  if(format!=  null  &&!format.isEmpty())  {  return  format;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null  &&!format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null  &&!format.isEmpty())  {  return  format;  }	  if(format!=    null    ||!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
274	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
275	[BUG]  [BUGGY]  Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.set(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
276	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.set(i  +  1,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.set(i  +  1,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.set(i  +  1,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
277	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.setString(values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.setString(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.setString(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setString(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
278	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.get(i,  Format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.get(i,  Format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.get(i,  Format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    Format);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
279	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.put(i,  Format);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.put(i,  Format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.put(i,  Format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    Format);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
280	[BUG]  [BUGGY]  Format  <  NumberRule>  format  =  mRules.get(format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  NumberRule>  format  =  mRules.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  NumberRule>  format  =  mRules.get(format);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
281	[BUG]  [BUGGY]  parent!=  null  &&  format.equals(mRules);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  format.equals(mRules);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  format.equals(mRules);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
282	[BUG]  [BUGGY]  parent  ==  null  &&  format.equals(mRules);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  ==  null  &&  format.equals(mRules);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent  ==  null  &&  format.equals(mRules);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
283	[BUG]  [BUGGY]  Format  <  Rule>  format  =  mRules.get(format);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Rule>  format  =  mRules.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Rule>  format  =  mRules.get(format);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
284	[BUG]  [BUGGY]  MutableFormat.checkNotNull(format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  MutableFormat.checkNotNull(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	MutableFormat.checkNotNull(format);	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
285	[BUG]  [BUGGY]  MutableFormat.checkState(format!=  null);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  MutableFormat.checkState(format!=  null);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	MutableFormat.checkState(format!=  null);	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
286	[BUG]  [BUGGY]  MutableFormats.checkNotNull(format);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  MutableFormats.checkNotNull(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	MutableFormats.checkNotNull(format);	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
287	[BUG]  [BUGGY]  Format  <  Object>  format  =  format.init();  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  format  =  format.init();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  format  =  format.init();	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
288	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  location,  locale));  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  location,  locale));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  location,  locale));	  Format    <?>    format    =    new    FastDateFormat(format,    locale));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
289	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  location,  locale);	  Format    format    =    new    FastDateFormat(format,    locale);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
290	[BUG]  [BUGGY]  parent!=  null  &&  format.equals(mValue))  {  return  format;  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  format.equals(mValue))  {  return  format;  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  format.equals(mValue))  {  return  format;  }	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
291	[BUG]  [BUGGY]  parent!=  null  &&  format.equals(mValue);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  format.equals(mValue);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  format.equals(mValue);	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
292	[BUG]  [BUGGY]  parent!=  null  &&  format.equals(mValue))  {  return  format;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&  format.equals(mValue))  {  return  format;  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	parent!=  null  &&  format.equals(mValue))  {  return  format;	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.add(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.add(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length-1;  ++i)  {  format.add(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i  +  1,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(i);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
296	[BUG]  [BUGGY]  Format  format  =  format.set(i,  values[i]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.set(i,  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.set(i,  values[i]);	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
297	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.init(null);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.init(null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.init(null);	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
298	[BUG]  [BUGGY]  Format  <  Object>  format  =  getValues(i);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  format  =  getValues(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  format  =  getValues(i);	  Format    <    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
299	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(intValue);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(intValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.get(intValue);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
300	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.length;  ++i)  {  format.get(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  int  i  =  0;  i  <  values.length;  ++i)  {  format.get(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	int  i  =  0;  i  <  values.length;  ++i)  {  format.get(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
301	[BUG]  [BUGGY]  Format  <?>  format  =  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  cInstanceCache.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  cInstanceCache.get(format);	  if(format    ==    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
302	[BUG]  [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  mRules.get(category);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  mRules.get(category);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Rule>  cInstanceCache  =  mRules.get(category);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern[c];    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
303	[BUG]  [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  mRules.get(instance);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  mRules.get(instance);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Rule>  cInstanceCache  =  mRules.get(instance);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern[c];    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
304	[BUG]  [BUGGY]  Format.setLong(mValues[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.setLong(mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format.setLong(mValues[i]);	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
305	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(intValue);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(intValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(intValue);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
306	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(type);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(type);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(type);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
307	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
308	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
309	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
310	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
311	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mDaylight);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mDaylight);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  mDaylight);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
312	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(values);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(values);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(values);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
313	[BUG]  [BUGGY]  rmn  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmn  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmn  =  new  FastDateFormat(format,  timeZone,  locale);	  rmândrmând    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
314	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(1);	  Format    <?>    format    =    new    FastDateFormat    <?>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
315	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
316	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
317	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format,  locale);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
318	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  getValues(i);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  getValues(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  getValues(i);	  Format    <    String,    Object>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
319	[BUG]  [BUGGY]  Format  <?>  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  cInstanceCache.put(format,  format);	  if(format    ==    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
320	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValue);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValue);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValue);	  if(format    ==    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
321	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  tempLocale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  tempLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  tempLocale);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
322	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
323	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
324	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingName();	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
325	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  false);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  false);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  false);	  if(format!=    null)    {    if(format.init())    {    return    emptyFormat;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
326	[BUG]  [BUGGY]  Format  <  String,  Rule[]>  cRules  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Rule[]>  cRules  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Rule[]>  cRules  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern.get(c);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
327	[BUG]  [BUGGY]  Format  c  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  c  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  c  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern.get(c);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
328	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	int  i  =  0;  i  <  values.length;  ++i)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    values.length;    ++i)    {    format.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
329	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setInt(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setInt(mValues[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setInt(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
330	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i],  locale);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i],  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  format.setLong(mValues[i],  locale);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
331	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  mDaylight,  mValues,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  mDaylight,  mValues,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  mDaylight,  mValues,  locale);	  Format    format    =    new    FastDateFormat(format,    mValues,    locale);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
332	[BUG]  [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	safeFormat  =  new  FastDateFormat(format,  TimeZone,  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
333	[BUG]  [BUGGY]  Format  <  N,  V>  cInstanceCache.put(emptyFormat,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  cInstanceCache.put(emptyFormat,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  N,  V>  cInstanceCache.put(emptyFormat,  format);	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
334	[BUG]  [BUGGY]  Format  <  Object>  format  =  format.set(i,  values[i]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Object>  format  =  format.set(i,  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  Object>  format  =  format.set(i,  values[i]);	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
335	[BUG]  [BUGGY]  if(format.isEmpty())  {  return  format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format.isEmpty())  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
336	[BUG]  [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  cInstanceCache.get(format);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
337	[BUG]  [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(emptyFormat);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =  cInstanceCache.get(emptyFormat);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
338	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(emptyFormat);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
339	[BUG]  [BUGGY]  Format  cInstance  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstance  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  cInstance  =(FastDateFormat)cInstanceCache.get(emptyFormat);	  if(format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
340	[BUG]  [BUGGY]  rmndrmndrmnd  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  rmndrmndrmnd  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	rmndrmndrmnd  =  getInstance(pattern,  timeZone,  locale);	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
341	[BUG]  [BUGGY]  if(format  ==  null)  {  rmndrmndrmnd  =  getInstance(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  rmndrmndrmnd  =  getInstance(pattern,  timeZone,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  rmndrmndrmnd  =  getInstance(pattern,  timeZone,  locale);  }	  rmândrmândrmând    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
342	[BUG]  [BUGGY]  Format  {  null  {  format.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  format.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  format.set(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
343	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingRules(mRules);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingRules(mRules);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingRules(mRules);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
344	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMatcher(mRules,  format);	  if(format!=    null)    {    if(format.equals(mRules))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
345	[BUG]  [BUGGY]  Format  <?>  format  =  format.toString();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.toString();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.toString();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
346	[BUG]  [BUGGY]  Format  <?>  format  =  format.next();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.next();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
347	[BUG]  [BUGGY]  Format  <?>  format  =  format.next;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.next;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.next;	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
348	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.next();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.next();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  emptyFormat  =  format.next();	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
349	[BUG]  [BUGGY]  {  format  =  new  FastDateFormat(format,  locale);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  {  format  =  new  FastDateFormat(format,  locale);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	{  format  =  new  FastDateFormat(format,  locale);  }	  if(format!=    null)    {    format    =    new    FastDateFormat(format,    locale);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
350	[BUG]  [BUGGY]  Format  {  format  =  new  FastDateFormat(format,  locale);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  format  =  new  FastDateFormat(format,  locale);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  format  =  new  FastDateFormat(format,  locale);  }	  if(format!=    null)    {    format    =    new    FastDateFormat(format,    locale);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
351	[BUG]  [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
352	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.toString();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.toString();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.toString();	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
353	[BUG]  [BUGGY]  Format  <?>  format  =  format.append('n');  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.append('n');  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.append('n');	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
354	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.append('n');  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.append('n');  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.append('n');	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
355	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.append(mValues[i]);  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.append(mValues[i]);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.append(mValues[i]);	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
356	[BUG]  [BUGGY]  Format  oneInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  oneInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  oneInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
357	[BUG]  [BUGGY]  Format[]  cRules  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format[]  cRules  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format[]  cRules  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern[c];    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
358	[BUG]  [BUGGY]  Format  <  String,  Rule[]>  cRules  =  mRules.size();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Rule[]>  cRules  =  mRules.size();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Rule[]>  cRules  =  mRules.size();	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cDefaultPattern[c];    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
359	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues[0],  pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues[0],  pattern,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues[0],  pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
360	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  mDaylight,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  mDaylight,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  mDaylight,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
361	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cInstanceCache.put(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	cInstanceCache.put(emptyFormat);	  cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
362	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(emptyFormat);  }	  cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
363	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( " ");  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsIAE( " ");  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.throwAsIAE( " ");	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
364	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.throwUnquotedException( " ");	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
365	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( "FastDateFormat  does  not  exist: "  +  format);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsIAE( "FastDateFormat  does  not  exist: "  +  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.throwAsIAE( "FastDateFormat  does  not  exist: "  +  format);	  if(format!=    null)    {    if(format.init())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
366	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isInstance())  {  return  format;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isInstance())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isInstance())  {  return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
367	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())return  format;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())return  format;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
368	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  mValues.get(1);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  mValues.get(1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  mValues.get(1);	  Format    <    String,    Object>    format    =    values.get(0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
369	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.setLong(values[i]);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.setLong(values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  format.setLong(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    format.setLong(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
370	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(format);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
371	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  format);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
372	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mStyle,  mValues);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mStyle,  mValues);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(mStyle,  mValues);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
373	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  format.get(format);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
374	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  mPattern,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  mPattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  mPattern,  locale);	  Format    format    =    new    FastDateFormat(mValues,    mPattern,    locale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
375	[BUG]  [BUGGY]  if(format  ==  null)  {  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  }	  rmândrmând    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
376	[BUG]  [BUGGY]  if(format  ==  null)  {  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  else  {  format.setLocale(locale);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  else  {  format.setLocale(locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format  ==  null)  {  rmndrmnd  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  else  {  format.setLocale(locale);  }	  rmândrmând    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
377	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  pattern,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  pattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  pattern,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
378	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
379	[BUG]  [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues,  values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format.add(mValues,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.add(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
380	[BUG]  [BUGGY]  Format  <  String,  Rule>  cRules  =  mRules.get(c);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Rule>  cRules  =  mRules.get(c);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Rule>  cRules  =  mRules.get(c);	  if(format    ==    null)    {    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
381	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  oneInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  oneInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  oneInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
382	[BUG]  [BUGGY]  if(format!=  null  ||!format.isEmpty())  {  return  Format;  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null  ||!format.isEmpty())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null  ||!format.isEmpty())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
383	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isLocal())  {  return  Format;  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isLocal())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isLocal())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
384	[BUG]  [BUGGY]  Format  {  null;  for(int  i  =  0;  i  <  values.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  null;  for(int  i  =  0;  i  <  values.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  {  null;  for(int  i  =  0;  i  <  values.length;  ++i)  {  Format  format  =  emptyFormat.set(i,  values[i]);  }	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    Format    format    =    emptyFormat.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
385	[BUG]  [BUGGY]  Format  <?>  format  =  emptyFormat.set(i,  values[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  emptyFormat.set(i,  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  emptyFormat.set(i,  values[i]);	  Format    {    null    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    Format    format    =    emptyFormat.set(i,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
386	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  tempLocale));  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  tempLocale));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(format,  tempLocale));	  Format    <?>    format    =    new    FastDateFormat(format,    locale));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
387	[BUG]  [BUGGY]  Format  <  NumberRule>  format  =  FormatUtils.getFastDateFormat(format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  NumberRule>  format  =  FormatUtils.getFastDateFormat(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  NumberRule>  format  =  FormatUtils.getFastDateFormat(format);	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
388	[BUG]  [BUGGY]  Format  <  NumberRule>  format  =  format.init();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  NumberRule>  format  =  format.init();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  NumberRule>  format  =  format.init();	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
389	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.init();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.init();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  String,  Object>  format  =  format.init();	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
390	[BUG]  [BUGGY]  Format  <  NumberRule>  format  =  format.instance();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  NumberRule>  format  =  format.instance();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  <  NumberRule>  format  =  format.instance();	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
391	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mValue,  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMatcher(mValue,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	aughtExceptionHandler.handleMatcher(mValue,  format);	  if(format!=    null)    {    if(format.equals(mValue))    {    return    format;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
392	[BUG]  [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
393	[BUG]  [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
