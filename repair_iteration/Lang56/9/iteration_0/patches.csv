bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Locale  locale  =  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]    SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    Locale  locale  =  Locale.getDefault();  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    Locale  locale  =  Locale.getDefault();		non-compiled	[CE]  illegal  start  of  type	18	None	add
2	[BUG]  [BUGGY]    Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale);  [CE]  illegal  start  of  type  [FE]      SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale);  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale);		non-compiled	[CE]  illegal  start  of  type	18	None	add
3	[BUG]  [BUGGY]    mRules  =  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]        SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mRules  =  Locale.getDefault();  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mRules  =  Locale.getDefault();		non-compiled	[CE]  illegal  start  of  type	18	None	add
4	[BUG]  [BUGGY]    Pattern  pattern  =  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]          SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    Pattern  pattern  =  Pattern.compile(pattern,  timeZone);  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    Pattern  pattern  =  Pattern.compile(pattern,  timeZone);		non-compiled	[CE]  illegal  start  of  type	18	None	add
5	[BUG]  [BUGGY]    Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  locale);  [CE]  illegal  start  of  type  [FE]            SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  locale);  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  locale);		non-compiled	[CE]  illegal  start  of  type	18	None	add
6	[BUG]  [BUGGY]  if(pattern  ==  null  ||  locale!=  Locale.getDefault())  {  [CE]  illegal  start  of  type  [FE]    SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]  if(pattern  ==  null  ||  locale!=  Locale.getDefault())  {  [BUGGY]  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	if(pattern  ==  null  ||  locale!=  Locale.getDefault())  {	if  (pattern  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  if(pattern  ==  null  ||  locale  ==  Locale.getDefault())  {  [CE]  illegal  start  of  type  [FE]      SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]  if(pattern  ==  null  ||  locale  ==  Locale.getDefault())  {  [BUGGY]  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	if(pattern  ==  null  ||  locale  ==  Locale.getDefault())  {	if  (pattern  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]    mRule  =  TimeZone.getDefault();  [CE]  illegal  start  of  type  [FE]    SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mRule  =  TimeZone.getDefault();  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mRule  =  TimeZone.getDefault();		non-compiled	[CE]  illegal  start  of  type	18	None	add
9	[BUG]  [BUGGY]    mPattern  =  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]      SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mPattern  =  Pattern.compile(pattern,  timeZone);  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mPattern  =  Pattern.compile(pattern,  timeZone);		non-compiled	[CE]  illegal  start  of  type	18	None	add
10	[BUG]  [BUGGY]    mPattern  =  Pattern.compile(pattern,  timeZone,  locale);  [CE]  illegal  start  of  type  [FE]        SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mPattern  =  Pattern.compile(pattern,  timeZone,  locale);  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mPattern  =  Pattern.compile(pattern,  timeZone,  locale);		non-compiled	[CE]  illegal  start  of  type	18	None	add
11	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]    SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	if(pattern  ==  null  ||  pattern.length()  ==  0)  {	if  (pattern  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]    mPattern  =  pattern.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]    SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mPattern  =  pattern.trim().toLowerCase();  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mPattern  =  pattern.trim().toLowerCase();		non-compiled	[CE]  illegal  start  of  type	18	None	add
13	[BUG]  [BUGGY]    mPattern  =  pattern.toLowerCase();  [CE]  illegal  start  of  type  [FE]      SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mPattern  =  pattern.toLowerCase();  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mPattern  =  pattern.toLowerCase();		non-compiled	[CE]  illegal  start  of  type	18	None	add
14	[BUG]  [BUGGY]    mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [CE]  illegal  start  of  type  [FE]        SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault());		non-compiled	[CE]  illegal  start  of  type	18	None	add
15	[BUG]  [BUGGY]    mPattern  =  pattern.trim();  [CE]  illegal  start  of  type  [FE]          SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]    mPattern  =  pattern.trim();  [BUGGY]  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	    mPattern  =  pattern.trim();		non-compiled	[CE]  illegal  start  of  type	18	None	add
16	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null)  {  [CE]  illegal  start  of  type  [FE]    SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	if(pattern  ==  null  ||  pattern  ==  null)  {	if  (pattern  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
17	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(locale))  {  [CE]  illegal  start  of  type  [FE]      SerializationException  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(locale))  {  [BUGGY]  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	if(pattern  ==  null  ||  pattern.equals(locale))  {	if  (pattern  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
