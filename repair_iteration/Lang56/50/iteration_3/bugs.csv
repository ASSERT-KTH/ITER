bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  shortMonths[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  shortMonths[i]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  shortMonths[i]);	  String    token    =    parseToken(mValue,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
2	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef[i],  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef[i],  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef[i],  c);	  String    token    =    parseToken(mValue,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
3	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[1];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  i);  i  =  indexRef[1];	  char    token    =    parseToken(mPattern,    indexRef);    i    =    indexRef[1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
4	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  c);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  c);  i  =  indexRef[1];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  c);  i  =  indexRef[1];	  char    token    =    parseToken(mPattern,    indexRef);    i    =    indexRef[1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
5	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  0);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  0);  i  =  indexRef[1];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  0);  i  =  indexRef[1];	  char    token    =    parseToken(mPattern,    indexRef);    i    =    indexRef[1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
6	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[0];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[0];	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
7	[BUG]  [BUGGY]  String  token  =  parseToken(c,  mDaylight);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  mDaylight);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  mDaylight);	  String    token    =    parseToken(c,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
8	[BUG]  [BUGGY]  String  token  =  parseToken(c,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  indexRef);	  String    token    =    parseToken(c,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
9	[BUG]  [BUGGY]  String  token  =  parseToken(c,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  i);	  String    token    =    parseToken(c,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
10	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[1]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef[1]  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef[1]  +  1);	  mPattern.setIndex(indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
11	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[1]  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef[1]  +  length);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef[1]  +  length);	  mPattern.setIndex(indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
12	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(shortMonths[1]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(shortMonths[1]);	  mPattern.setIndex(indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
13	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  i)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  i)+  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  i)+  1;	  int    indexRef    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
14	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  0)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  0)+  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  0)+  1;	  int    indexRef    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
15	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  mDaylight)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  mDaylight)+  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  mDaylight)+  1;	  int    indexRef    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
16	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  length,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  length,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mPattern,  length,  1);	  String    token    =    parseToken(mPattern,    length,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
17	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  0,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  0,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  0,  1);	  String    token    =    parseToken(mPattern,    length,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
18	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i  -  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i  -  1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef[i  -  1]);	  String    token    =    parseToken(mPattern,    indexRef    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
19	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length  -  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length  -  1);	  String    token    =    parseToken(mPattern,    indexRef    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
20	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  -  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef[0]  -  1);	  String    token    =    parseToken(mPattern,    indexRef    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
21	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length,  indexRef[1]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length,  indexRef[1]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length,  indexRef[1]  +  1);	  String    token    =    parseToken(mPattern,    indexRef[1]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
22	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight[1]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight[1]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mDaylight[1]  +  1);	  String    token    =    parseToken(mPattern,    indexRef[1]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
23	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef[i]  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef[i]  +  1);	  mPattern.setIndex(indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
24	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(shortMonths[i]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(shortMonths[i]);	  mPattern.setIndex(indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
25	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  0,  shortMonths,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  0,  shortMonths,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  0,  shortMonths,  c);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
26	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  0,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  0,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  0,  length);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
27	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  0,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  0,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  0,  indexRef);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
28	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  0,  shortMonths.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  0,  shortMonths.length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  0,  shortMonths.length);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
29	[BUG]  [BUGGY]  String  token  =  parseToken(c,  mPattern,  mStandard);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  mPattern,  mStandard);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  mPattern,  mStandard);	  String    token    =    parseToken(mStandard,    mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
30	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mStandard,  c);	  String    token    =    parseToken(mStandard,    mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
31	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mDaylight,  c);	  String    token    =    parseToken(mStandard,    mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
32	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  mPattern,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  mPattern,  c);	  String    token    =    parseToken(mStandard,    mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
33	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  +  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef[0]  +  2);	  String    token    =    parseToken(mPattern,    indexRef    +    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
34	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[1]  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[1]  +  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef[1]  +  2);	  String    token    =    parseToken(mPattern,    indexRef    +    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
35	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  /  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  /  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  /  2);	  String    token    =    parseToken(mPattern,    indexRef    +    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
36	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef[0]  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef[0]  +  1);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
37	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[0]  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef[0]  +  length);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef[0]  +  length);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
38	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(shortMonths[0]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(shortMonths[0]);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
39	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
40	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length  +  1,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length  +  1,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length  +  1,  indexRef);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
41	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i  +  1,  length);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
42	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths.length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths.length);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
43	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  c);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  c);  i  =  indexRef[0];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  c);  i  =  indexRef[0];	  String    token    =    parseToken(mPattern,    c);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
44	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[1];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[1];	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
45	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i,  3);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i,  3);	  String    token    =    parseToken(mPattern,    indexRef,    3);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
46	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  0);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef,  0);	  String    token    =    parseToken(mPattern,    indexRef,    3);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
47	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mStandard,  mPattern,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mStandard,  mPattern,  i);	  int    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
48	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  index);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  index);	  int    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
49	[BUG]  [BUGGY]  String  token  =  parseToken(c,  mValue);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  mValue);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  mValue);	  String    token    =    parseToken(mValue,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
50	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i,  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i,  2);	  String    token    =    parseToken(mPattern,    indexRef,    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
51	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length,  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length,  2);	  String    token    =    parseToken(mPattern,    indexRef,    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
52	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c[0],  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c[0],  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c[0],  indexRef);	  String    token    =    parseToken(mPattern,    indexRef[0],    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
53	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight[0],  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight[0],  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mDaylight[0],  c);	  String    token    =    parseToken(mPattern,    indexRef[0],    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
54	[BUG]  [BUGGY]  String  token  =  parseToken(c,  indexRef[0],  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  indexRef[0],  mPattern);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  indexRef[0],  mPattern);	  String    token    =    parseToken(mPattern,    indexRef[0],    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
55	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0],  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0],  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef[0],  length);	  String    token    =    parseToken(mPattern,    indexRef[0],    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
56	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i  +  1,  c);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
57	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  +  1,  shortMonths,  c);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
58	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  i,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  i,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  i,  indexRef);	  String    token    =    parseToken(mValue,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
59	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  length,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  length,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  length,  i);	  String    token    =    parseToken(mValue,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
60	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  0,  length);	  String    token    =    parseToken(mValue,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
61	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i)+  1;	  String    token    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
62	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef)+  2;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef)+  2;	  String    token    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
63	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef)+  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef)+  0;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef)+  0;	  String    token    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
64	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  mMaxLengthEstimate);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mStandard,  mMaxLengthEstimate);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
65	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  mMaxLengthEstimate);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mDaylight,  mMaxLengthEstimate);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
66	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mPattern,  indexRef);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
67	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  mPattern,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  mPattern,  mMaxLengthEstimate);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mDaylight,  mPattern,  mMaxLengthEstimate);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
68	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef[0]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  indexRef[0]);	  String    token    =    parseToken(mPattern,    c,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
69	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  indexRef[1]);	  String    token    =    parseToken(mPattern,    c,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
70	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef[i]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  indexRef[i]);	  String    token    =    parseToken(mPattern,    c,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
71	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMaxLength,  indexRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMaxLength,  indexRef[0]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMaxLength,  indexRef[0]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
72	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight,  indexRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mDaylight,  indexRef[1]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
73	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length,  indexRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length,  indexRef[1]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
74	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMaxLength,  length,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMaxLength,  length,  indexRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMaxLength,  length,  indexRef[1]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
75	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  0);	  String    token    =    parseToken(mValue,    indexRef,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
76	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  2);	  String    token    =    parseToken(mValue,    indexRef,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
77	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  0,  1);	  String    token    =    parseToken(mValue,    indexRef,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
78	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMinRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMinRef[1]);	  String    token    =    parseToken(mPattern,    mMaxRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
79	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length,  mMaxRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length,  mMaxRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length,  mMaxRef[1]);	  String    token    =    parseToken(mPattern,    mMaxRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
80	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  length);	  String    token    =    parseToken(mPattern,    length,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
81	[BUG]  [BUGGY]  String  token  =  parseToken(c,  length,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  length,  mPattern);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  length,  mPattern);	  String    token    =    parseToken(mPattern,    length,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
82	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  shortMonths[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  shortMonths[0]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  shortMonths[0]);	  String    token    =    parseToken(mValue,    indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
83	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef[0]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef[0]  +  1);	  String    token    =    parseToken(mValue,    indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
84	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  mPattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mStandard,  mPattern,  0);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mStandard,  mPattern,  0);	  int    indexRef    =    parseToken(mPattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
85	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mStandard,  i);	  String    token    =    parseToken(mStandard,    mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
86	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mDaylight,  i);	  String    token    =    parseToken(mStandard,    mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
87	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  mPattern,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  mPattern,  i);	  String    token    =    parseToken(mStandard,    mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
88	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  indexRef);	  String    token    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
89	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mMaxRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mMaxRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mMaxRef);	  String    token    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
90	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  i);	  String    token    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
91	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];	  char    token    =    parseToken(mPattern,    indexRef);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
92	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  0);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  0);  i  =  indexRef[0];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  0);  i  =  indexRef[0];	  char    token    =    parseToken(mPattern,    indexRef);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
93	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  shortMonths[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  shortMonths[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  shortMonths[1]);	  String    token    =    parseToken(mValue,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
94	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef[1]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef[1]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef[1]  +  1);	  String    token    =    parseToken(mValue,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
95	[BUG]  [BUGGY]  String  token  =  parseToken(c,  mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  mPattern,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  mPattern,  indexRef);	  String    token    =    parseToken(c,    indexRef,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
96	[BUG]  [BUGGY]  String  token  =  parseToken(c,  mDaylight,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  mDaylight,  mPattern);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  mDaylight,  mPattern);	  String    token    =    parseToken(c,    indexRef,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
97	[BUG]  [BUGGY]  String  token  =  parseToken(c,  i,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  i,  mPattern);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  i,  mPattern);	  String    token    =    parseToken(c,    indexRef,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
98	[BUG]  [BUGGY]  i  =  parseToken(mPattern,  indexRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  i  =  parseToken(mPattern,  indexRef[0]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	i  =  parseToken(mPattern,  indexRef[0]);	  i    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
99	[BUG]  [BUGGY]  i  =  parseToken(mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  i  =  parseToken(mPattern,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	i  =  parseToken(mPattern,  c);	  i    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
100	[BUG]  [BUGGY]  i  =  parseToken(mPattern,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  i  =  parseToken(mPattern,  indexRef[1]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	i  =  parseToken(mPattern,  indexRef[1]);	  i    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
101	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  null,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  null,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  null,  indexRef);	  String    mPattern    =    parseToken(mPattern,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
102	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  IndexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  IndexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  IndexRef);	  String    mPattern    =    parseToken(mPattern,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
103	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  mDaylight,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mStandard,  mDaylight,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mStandard,  mDaylight,  indexRef);	  int    indexRef    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
104	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  mStandard);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  mStandard);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  mStandard);	  int    indexRef    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
105	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mDaylight,  mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mDaylight,  mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mDaylight,  mPattern,  indexRef);	  int    indexRef    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
106	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  i)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  i)+  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  i)+  1;	  String    mPattern    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
107	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef)+  2;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  indexRef)+  2;	  String    mPattern    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
108	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mStandard,  mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mStandard,  mPattern,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mStandard,  mPattern,  i);	  String    mPattern    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
109	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight[0]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mDaylight[0]  +  1);	  String    token    =    parseToken(mPattern,    indexRef[0]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
110	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  shortMonths[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  shortMonths[0]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  shortMonths[0]  +  1);	  String    token    =    parseToken(mPattern,    indexRef[0]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
111	[BUG]  [BUGGY]  mPattern.setIndex(i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(i  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(i  +  1);	  mPattern.setIndex(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
112	[BUG]  [BUGGY]  mPattern.setIndex(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(0);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(0);	  mPattern.setIndex(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
113	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  c,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  c,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  c,  indexRef);	  String    token    =    parseToken(mValue,    indexRef,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
114	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  i,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  i,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  i,  c);	  String    token    =    parseToken(mValue,    indexRef,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
115	[BUG]  [BUGGY]  String  token  =  parseToken(c,  indexRef,  mValue);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  indexRef,  mValue);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  indexRef,  mValue);	  String    token    =    parseToken(mValue,    indexRef,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
116	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  length,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  length,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  length,  c);	  String    token    =    parseToken(mValue,    indexRef,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
117	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  i);	  char    token    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
118	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  c);	  char    token    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
119	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  2);	  String    token    =    parseToken(mPattern,    c,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
120	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  3);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  3);	  String    token    =    parseToken(mPattern,    c,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
121	[BUG]  [BUGGY]  String  token  =  parseToken(c,  mPattern,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(c,  mPattern,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(c,  mPattern,  1);	  String    token    =    parseToken(mPattern,    c,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
122	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  mDaylight);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mStandard,  mDaylight);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mStandard,  mDaylight);	  int    indexRef    =    parseToken(mPattern,    mDaylight);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
123	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mStandard,  mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mStandard,  mPattern,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mStandard,  mPattern,  c);	  String    mPattern    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
124	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mDaylight,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mDaylight,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mDaylight,  c);	  String    mPattern    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
125	[BUG]  [BUGGY]  int  indexRef  =  parseToken(c,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(c,  mPattern);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(c,  mPattern);	  int    indexRef    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
126	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  indexRef  =  parseToken(mPattern,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  indexRef  =  parseToken(mPattern,  c);	  int    indexRef    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
127	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i,  0,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i,  0,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i,  0,  length);	  String    token    =    parseToken(mPattern,    i,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
128	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMaxRef[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMaxRef[0]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMaxRef[0]  +  1);	  String    token    =    parseToken(mPattern,    mMaxRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
129	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMinRef[0]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMinRef[0]);	  String    token    =    parseToken(mPattern,    mMaxRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
130	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef[0]  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  indexRef[0]  +  1);	  String    mPattern    =    parseToken(mPattern,    indexRef    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
131	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i,  length);	  String    token    =    parseToken(mPattern,    i,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
132	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i,  indexRef);	  String    token    =    parseToken(mPattern,    i,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
133	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  i);	  String    token    =    parseToken(mPattern,    i,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
134	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  0);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mPattern,  0);	  String    token    =    parseToken(mPattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
135	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  i  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  i  +  1);	  String    token    =    parseToken(mValue,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
136	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  length);	  String    token    =    parseToken(mValue,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
137	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef[i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef[i]  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef[i]  +  1);	  String    token    =    parseToken(mValue,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
138	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  0,  i);	  String    token    =    parseToken(mValue,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
139	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  length);	  String    token    =    parseToken(mValue,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
140	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef)+  2;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  indexRef)+  2;	  int    indexRef    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
141	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mStandard,  mPattern,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mStandard,  mPattern,  c);	  int    indexRef    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
142	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  indexRef,  1);	  String    token    =    parseToken(mPattern,    c,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
143	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  length  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  length  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  length  +  1);	  String    token    =    parseToken(mPattern,    length    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
144	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern  +  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mPattern  +  1);	  String    token    =    parseToken(mPattern,    length    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
145	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  mMaxRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  mMaxRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  mMaxRef[1]);	  String    token    =    parseToken(mPattern,    mMaxRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
146	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mMaxRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mMaxRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mMaxRef[1]);	  String    token    =    parseToken(mPattern,    mMaxRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
147	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  0,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  0,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  0,  c);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
148	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  1,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  1,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  1,  c);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
149	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  0,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  0,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  0,  c);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
150	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  c,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  c,  mPattern);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  c,  mPattern);	  String    token    =    parseToken(c,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
151	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mPattern);	  String    token    =    parseToken(c,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
152	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  1);	  String    token    =    parseToken(mPattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
153	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef[1]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef[1]  -  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef[1]  -  1);	  String    token    =    parseToken(mValue,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
154	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef[0]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef[0]  -  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef[0]  -  1);	  String    token    =    parseToken(mValue,    indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
155	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  indexRef  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(mPattern,  indexRef  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(mPattern,  indexRef  +  1);	  char    token    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
156	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mMaxRef,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mMaxRef,  mMaxLengthEstimate);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mMaxRef,  mMaxLengthEstimate);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
157	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mMaxLengthEstimate,  mDaylight);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mMaxLengthEstimate,  mDaylight);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mMaxLengthEstimate,  mDaylight);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
158	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mStandard);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mStandard);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mStandard);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
159	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  length,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  length,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  length,  1);	  String    token    =    parseToken(mPattern,    length,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
160	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mPattern,  1);	  String    token    =    parseToken(mPattern,    length,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
161	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  0,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  0,  c);	  String    token    =    parseToken(mValue,    indexRef,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
162	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  c,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  c,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  c,  1);	  String    token    =    parseToken(mPattern,    c,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
163	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  mDaylight);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  indexRef  =  parseToken(mPattern,  mDaylight);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  indexRef  =  parseToken(mPattern,  mDaylight);	  int    indexRef    =    parseToken(mPattern,    mDaylight);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
164	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  mMaxRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  mMaxRef[0]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  mMaxRef[0]);	  String    token    =    parseToken(mPattern,    mMaxRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
165	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef)+  3;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef)+  3;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  indexRef)+  3;	  String    mPattern    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
166	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef)+  4;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef)+  4;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  indexRef)+  4;	  String    mPattern    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
167	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  i,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  i,  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  i,  1);	  String    token    =    parseToken(mPattern,    i,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
168	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef  *  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  indexRef  *  1);	  String    mPattern    =    parseToken(mPattern,    indexRef    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
169	[BUG]  [BUGGY]  Char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  Char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	Char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];	  char    token    =    parseToken(mPattern,    indexRef);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
170	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  *  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  *  1);	  String    token    =    parseToken(mPattern,    indexRef    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
171	[BUG]  [BUGGY]  mPattern.setIndex(i,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(i,  indexRef[1]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(i,  indexRef[1]);	  mPattern.setIndex(indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
172	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  mPattern,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mDaylight,  mPattern,  i);	  String    token    =    parseToken(mStandard,    mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
173	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mValue,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mValue,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mValue,  c);	  String    mPattern    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
174	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  amPmStrings);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  amPmStrings);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  amPmStrings);	  String    mPattern    =    parseToken(mPattern,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
175	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  mMaxLength[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  mMaxLength[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef,  mMaxLength[1]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
176	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinLength,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMinLength,  indexRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMinLength,  indexRef[1]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
177	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length  +  1,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length  +  1,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length  +  1,  c);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
178	[BUG]  [BUGGY]  i  =  parseToken(mStandard,  mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  i  =  parseToken(mStandard,  mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	i  =  parseToken(mStandard,  mPattern,  indexRef);	  i    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
179	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[1]  +  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[1]  +  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef[1]  +  i);	  String    token    =    parseToken(mPattern,    indexRef[1]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
180	[BUG]  [BUGGY]  mPattern.setIndex(indexRef,  indexRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef,  indexRef[0]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef,  indexRef[0]);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
181	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[0]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef[0]  -  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef[0]  -  1);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
182	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mStandard,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mStandard,  i);	  int    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
183	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  i  +  1);	  int    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
184	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mValue,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mValue,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mValue,  i);	  int    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
185	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mValue,  mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mValue,  mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mValue,  mPattern,  indexRef);	  int    indexRef    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
186	[BUG]  [BUGGY]  mPattern.setIndex(indexRef,  indexRef[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef,  indexRef[i]);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef,  indexRef[i]);	  mPattern.setIndex(indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
187	[BUG]  [BUGGY]  mPattern.setIndex(indexRef,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef,  i);	  mPattern.setIndex(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
188	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  length  -  1);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  +  1,  length  -  1);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
189	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mValue,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mValue,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mValue,  i);	  String    mPattern    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
190	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  *  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  *  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  *  2);	  String    token    =    parseToken(mPattern,    indexRef    +    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
191	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mStandard,  0);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mStandard,  0);	  int    indexRef    =    parseToken(mPattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
192	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  shortMonths);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  shortMonths);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  shortMonths);	  String    token    =    parseToken(mValue,    indexRef,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
193	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  indexRef  =  parseToken(mPattern,  0);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  indexRef  =  parseToken(mPattern,  0);	  int    indexRef    =    parseToken(mPattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
194	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  +  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  +  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef[0]  +  i);	  String    token    =    parseToken(mPattern,    indexRef[0]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
195	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  i,  indexRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  i,  indexRef[1]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
196	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  mMaxLength,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  mMaxLength,  indexRef[1]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  mMaxLength,  indexRef[1]);	  String    token    =    parseToken(mPattern,    mMaxLength,    indexRef[1]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
197	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinRef,  mMaxRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMinRef,  mMaxRef[0]);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMinRef,  mMaxRef[0]);	  String    token    =    parseToken(mPattern,    mMaxRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
198	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef[0],  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef[0],  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef[0],  c);	  String    token    =    parseToken(mValue,    indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
199	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  c  =  parseToken(mPattern,  0);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  c  =  parseToken(mPattern,  0);	  String    token    =    parseToken(mPattern,    0);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
200	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  IndexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  IndexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  IndexRef);	  String    token    =    parseToken(mPattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
201	[BUG]  [BUGGY]  char  mPattern  =  parseToken(mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  mPattern  =  parseToken(mPattern,  c);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  mPattern  =  parseToken(mPattern,  c);	  String    mPattern    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
202	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mMinLengthEstimate);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mMinLengthEstimate);	  String    token    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
203	[BUG]  [BUGGY]  Char  token  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  Char  token  =  parseToken(mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	Char  token  =  parseToken(mPattern,  indexRef);	  char    token    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
204	[BUG]  [BUGGY]  Character  token  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  Character  token  =  parseToken(mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	Character  token  =  parseToken(mPattern,  indexRef);	  char    token    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
205	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  null);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  null);	  String    mPattern    =    parseToken(mPattern,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
206	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  mStandard,  indexRef);	  String    token    =    parseToken(mStandard,    mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
207	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  mStandard,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  mStandard,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  mStandard,  indexRef);	  int    indexRef    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
208	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  0,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  0,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef,  0,  c);	  String    token    =    parseToken(mPattern,    0,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
209	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  indexRef,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  indexRef,  mMaxLengthEstimate);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  indexRef,  mMaxLengthEstimate);	  String    token    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
210	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  length,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  length,  c);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  +  1,  length,  c);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
211	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef)/  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  indexRef)/  1;	  int    indexRef    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
212	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef)+  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef)+  0;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	int  indexRef  =  parseToken(mPattern,  indexRef)+  0;	  int    indexRef    =    parseToken(mPattern,    indexRef)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
213	[BUG]  [BUGGY]  i  =  parseToken(mPattern,  indexRef  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  i  =  parseToken(mPattern,  indexRef  +  1);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	i  =  parseToken(mPattern,  indexRef  +  1);	  i    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
214	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  length,  c,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  length,  c,  indexRef);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  length,  c,  indexRef);	  String    token    =    parseToken(mPattern,    c,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
215	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  c,  indexRef,  2);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  c,  indexRef,  2);	  String    token    =    parseToken(mPattern,    c,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
216	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  +  1,  i);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mPattern,  indexRef  +  1,  i);	  String    token    =    parseToken(mPattern,    indexRef    +    1,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
217	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  indexRef  =  parseToken(mPattern,  i);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  indexRef  =  parseToken(mPattern,  i);	  int    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
218	[BUG]  [BUGGY]  char  mPattern  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  mPattern  =  parseToken(mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  mPattern  =  parseToken(mPattern,  indexRef);	  String    mPattern    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
219	[BUG]  [BUGGY]  char  token  =  parseToken(c,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  token  =  parseToken(c,  mPattern);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  token  =  parseToken(c,  mPattern);	  String    token    =    parseToken(c,    mPattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
220	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  length);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mStandard,  mPattern,  length);	  String    token    =    parseToken(mPattern,    length,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
221	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  mPattern.setIndex(indexRef[i],  length);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	mPattern.setIndex(indexRef[i],  length);	  mPattern.setIndex(indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
222	[BUG]  [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  token  =  parseToken(mValue,  indexRef,  3);  [BUGGY]      i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  token  =  parseToken(mValue,  indexRef,  3);	  String    token    =    parseToken(mValue,    indexRef,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
223	[BUG]  [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  String  mPattern  =  parseToken(mPattern,  indexRef  +  2);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	String  mPattern  =  parseToken(mPattern,  indexRef  +  2);	  String    mPattern    =    parseToken(mPattern,    indexRef    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
224	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;      [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	char  c  =  parseToken(mPattern,  indexRef);	  String    token    =    parseToken(mPattern,    c);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
