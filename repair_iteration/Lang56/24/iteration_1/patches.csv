bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  For(String  pattern  :  mRules.keySet())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  For(String  pattern  :  mRules.keySet())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	For(String  pattern  :  mRules.keySet())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
2	[BUG]  [BUGGY]  for(String  pattern  :  mRules.keySet())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  for(String  pattern  :  mRules.keySet())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	for(String  pattern  :  mRules.keySet())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
3	[BUG]  [BUGGY]  Set  <  String>  cInstanceCache  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Set  <  String>  cInstanceCache  =  Sets.newHashSet();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Set  <  String>  cInstanceCache  =  Sets.newHashSet();	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
4	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  mValue);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(pattern,  mValue);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(pattern,  mValue);	      cInstanceCache.put(mValue,    pattern);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  cInstanceCache.put(mValue,  value);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(mValue,  value);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(mValue,  value);	      cInstanceCache.put(mValue,    pattern);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  pattern);  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(pattern,  pattern);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(pattern,  pattern);	      cInstanceCache.put(mValue,    pattern);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  mValues);  [CE]  <identifier>  expected  [FE]                    SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(pattern,  mValues);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(pattern,  mValues);	      cInstanceCache.put(mValue,    pattern);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
10	[BUG]  [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
11	[BUG]  [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  null);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  null);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  null);	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
12	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
14	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  this);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  this);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale,  this);	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  Locale  locale  =  getLocale();  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  getLocale();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =  getLocale();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  Locale  locale  =  locale.getDefault();  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  locale.getDefault();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =  locale.getDefault();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
17	[BUG]  [BUGGY]  Locale  locale  =  mRules.getDefault();  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  mRules.getDefault();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =  mRules.getDefault();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  new  FastDateFormat(locale,  timeZone));  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(pattern,  new  FastDateFormat(locale,  timeZone));  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(pattern,  new  FastDateFormat(locale,  timeZone));	      cInstanceCache.put(pattern,    new    FastDateFormat(timeZone,    locale));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
19	[BUG]  [BUGGY]  cInstanceCache.put(locale,  new  FastDateFormat(timeZone,  pattern));  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(locale,  new  FastDateFormat(timeZone,  pattern));  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(locale,  new  FastDateFormat(timeZone,  pattern));	      cInstanceCache.put(pattern,    new    FastDateFormat(timeZone,    locale));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
20	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale,  false);	      FastDateFormat    cInstanceCache    =(FastDateFormat)getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
21	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale,  true);	      FastDateFormat    cInstanceCache    =(FastDateFormat)getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
22	[BUG]  [BUGGY]  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c  >=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [CE]  <identifier>  expected  [FE]                    SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c  >=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c  >=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  locale);  }  [CE]  <identifier>  expected  [FE]                      SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  locale);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)this.getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)this.getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)this.getInstance(pattern,  timeZone,  locale,  true);	      FastDateFormat    cInstanceCache    =(FastDateFormat)this.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
27	[BUG]  [BUGGY]  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  For(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  For(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	For(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(0);  }  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(0);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(0);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  For(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  For(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	For(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    getInstance(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
32	[BUG]  [BUGGY]  for(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  for(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	for(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    getInstance(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
33	[BUG]  [BUGGY]  For(String  pattern  :  mRules.values())  {  return  getInstance(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  For(String  pattern  :  mRules.values())  {  return  getInstance(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	For(String  pattern  :  mRules.values())  {  return  getInstance(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    getInstance(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
34	[BUG]  [BUGGY]  Set  <  Rule>  cInstanceCache  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                    SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Set  <  Rule>  cInstanceCache  =  Sets.newHashSet();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Set  <  Rule>  cInstanceCache  =  Sets.newHashSet();	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    getInstance(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
35	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
36	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale  /  1);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale  /  1);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale  /  1);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)this.super.getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)this.super.getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)this.super.getInstance(pattern,  timeZone,  locale);	      FastDateFormat    cInstanceCache    =(FastDateFormat)super.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
38	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale,  true);	      FastDateFormat    cInstanceCache    =(FastDateFormat)super.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale,  null);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale,  null);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale,  null);	      FastDateFormat    cInstanceCache    =(FastDateFormat)super.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  null,  false);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  null,  false);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale,    true);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  null,  true);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  null,  true);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  null,  true);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale,    true);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale,    mTimeZone);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
43	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale,    mTimeZone);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
44	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mStandard);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mStandard);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mStandard);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale,    mTimeZone);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
45	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);	      FastDateFormat    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);	      FastDateFormat    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  For(String  pattern  :  mRules.values())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  For(String  pattern  :  mRules.values())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	For(String  pattern  :  mRules.values())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.values())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
48	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.values())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
49	[BUG]  [BUGGY]  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  For(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  For(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	For(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
52	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(0);  }  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(0);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(0);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
53	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)/  1;  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)/  1;  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)/  1;	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)+  2;  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)+  2;  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)+  2;	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)-  1;  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)-  1;  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)-  1;	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
56	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  Locale.getDefault());  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  Locale.getDefault());	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
58	[BUG]  [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  this.getInstance(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  this.getInstance(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(mRules!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  this.getInstance(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
59	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(0);  }  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(0);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(0);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  getRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [CE]  <identifier>  expected  [FE]                    SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  getRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  getRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  [CE]  <identifier>  expected  [FE]                      SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(pattern  ==  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;	      FastDateFormat    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
65	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).setTimeZone(timeZone);	      FastDateFormat    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)locale.getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)locale.getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)locale.getInstance(pattern,  timeZone,  locale);	      FastDateFormat    cInstanceCache    =(FastDateFormat)this.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
67	[BUG]  [BUGGY]  Locale  locale  =  getDefaultLocale();  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  getDefaultLocale();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =  getDefaultLocale();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
68	[BUG]  [BUGGY]  Locale  locale  =  getLocale(timeZone);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  getLocale(timeZone);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =  getLocale(timeZone);	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
69	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  3);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  3);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  3);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale,    mTimeZone);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
70	[BUG]  [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  <  String,  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
71	[BUG]  [BUGGY]  Set  <  String>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Set  <  String>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Set  <  String>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
72	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)+  1L;  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)+  1L;  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale)+  1L;	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
73	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  new  FastDateFormat(timeZone,  locale));  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(emptyFormat,  new  FastDateFormat(timeZone,  locale));  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(emptyFormat,  new  FastDateFormat(timeZone,  locale));	      cInstanceCache.put(pattern,    new    FastDateFormat(timeZone,    locale));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
74	[BUG]  [BUGGY]  cInstanceCache.put(new  Instance(pattern,  timeZone,  locale));  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(new  Instance(pattern,  timeZone,  locale));  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(new  Instance(pattern,  timeZone,  locale));	      cInstanceCache.put(pattern,    new    FastDateFormat(timeZone,    locale));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
75	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  value);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(pattern,  value);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(pattern,  value);	      cInstanceCache.put(mValue,    pattern);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
76	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  mLocale);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  mLocale);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  mLocale);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
77	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  mTimeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  mTimeZone,  locale);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  mTimeZone,  locale);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  this.getInstance(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  this.getInstance(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  this.getInstance(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
81	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  this.instanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  this.instanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  this.instanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
82	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale  +  1);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale  +  1);	      FastDateFormat    cInstanceCache    =(FastDateFormat)getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
83	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale).withUTC();  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale).withUTC();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale).withUTC();	      FastDateFormat    cInstanceCache    =(FastDateFormat)getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
84	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
85	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
86	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale)+  1;  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale)+  1;  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale)+  1;	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
88	[BUG]  [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
89	[BUG]  [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
90	[BUG]  [BUGGY]  Format  {  For(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  {  For(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  {  For(String  pattern  :  mRules.keySet())  {  return  getInstance(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    getInstance(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
91	[BUG]  [BUGGY]  Format  <  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  <  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  <  Rule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    getInstance(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
92	[BUG]  [BUGGY]  Format  {  For(String  pattern  :  mRules.values())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  {  For(String  pattern  :  mRules.values())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  {  For(String  pattern  :  mRules.values())  {  return  new  FastDateFormat(pattern,  timeZone,  locale);  }	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.values())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
93	[BUG]  [BUGGY]  Iterator  <  Rule>  cInstanceCache  =  mRules.iterator();  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Iterator  <  Rule>  cInstanceCache  =  mRules.iterator();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Iterator  <  Rule>  cInstanceCache  =  mRules.iterator();	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.values())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
94	[BUG]  [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  <  String,  Rule>  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.values())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
95	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  mStyle,  locale);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  mStyle,  locale);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  mStyle,  locale);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
96	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null?  Locale.getDefault()  :  locale);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =(locale  ==  null?  Locale.getDefault()  :  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =(locale  ==  null?  Locale.getDefault()  :  locale);	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
97	[BUG]  [BUGGY]  Locale  locale  =  mLocale.getDefault();  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =  mLocale.getDefault();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =  mLocale.getDefault();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
98	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  Locale.getDefault();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Locale  locale  =(locale  ==  null)?  null  :  Locale.getDefault();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
99	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
100	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  timeZone);  }  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  timeZone);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  timeZone);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
101	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  locale);  }  [CE]  <identifier>  expected  [FE]                    SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  locale);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  c++)  {  return  cInstanceCache.get(c,  locale);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
102	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  c.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [CE]  <identifier>  expected  [FE]                      SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  c.size();  c++)  {  return  cInstanceCache.get(c,  c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  c.size();  c++)  {  return  cInstanceCache.get(c,  c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c,    c);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
103	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).withUTC();  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).withUTC();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).withUTC();	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
104	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mTimeZone);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mTimeZone);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mTimeZone);	      FastDateFormat    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
105	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.get(pattern);  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.get(pattern);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.get(pattern);	      FastDateFormat    cInstanceCache    =(FastDateFormat)this.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
106	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.getInstance(pattern,  timeZone,  locale);	      FastDateFormat    cInstanceCache    =(FastDateFormat)this.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
107	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.get(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.get(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =(FastDateFormat)cInstanceCache.get(pattern,  timeZone,  locale);	      FastDateFormat    cInstanceCache    =(FastDateFormat)this.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
108	[BUG]  [BUGGY]  FastDateFormat  super  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  super  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  super  =(FastDateFormat)super.getInstance(pattern,  timeZone,  locale);	      FastDateFormat    cInstanceCache    =(FastDateFormat)super.getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
109	[BUG]  [BUGGY]  fastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  fastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	fastDateFormat  cInstanceCache  =(FastDateFormat)getInstance(pattern,  timeZone,  locale);	      FastDateFormat    cInstanceCache    =(FastDateFormat)getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
110	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();	      FastDateFormat    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).setTimeZone(mTimeZone);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).setTimeZone(mTimeZone);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).setTimeZone(mTimeZone);	      FastDateFormat    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  Set  <  String>  cRules  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Set  <  String>  cRules  =  Sets.newHashSet();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Set  <  String>  cRules  =  Sets.newHashSet();	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
113	[BUG]  [BUGGY]  Set  <  String>  cRules  =  Sets.newHashSet(pattern);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Set  <  String>  cRules  =  Sets.newHashSet(pattern);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Set  <  String>  cRules  =  Sets.newHashSet(pattern);	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    c++)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
114	[BUG]  [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  mRules.keySet();  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Format  <  String,  Rule>  cInstanceCache  =  mRules.keySet();  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Format  <  String,  Rule>  cInstanceCache  =  mRules.keySet();	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    getInstance(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
115	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  new  FastDateFormat(mTimeZone,  locale));  [CE]  <identifier>  expected  [FE]                SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(pattern,  new  FastDateFormat(mTimeZone,  locale));  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(pattern,  new  FastDateFormat(mTimeZone,  locale));	      cInstanceCache.put(pattern,    new    FastDateFormat(timeZone,    locale));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
116	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  new  FastDateFormat(timeZone,  locale),  mLocale);  [CE]  <identifier>  expected  [FE]                  SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  cInstanceCache.put(pattern,  new  FastDateFormat(timeZone,  locale),  mLocale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	cInstanceCache.put(pattern,  new  FastDateFormat(timeZone,  locale),  mLocale);	      cInstanceCache.put(pattern,    new    FastDateFormat(timeZone,    locale));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
117	[BUG]  [BUGGY]  Object  cInstanceCache  =  findInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  findInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  findInstance(pattern,  timeZone,  locale);	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
118	[BUG]  [BUGGY]  Object  cInstanceCache  =  createInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Object  cInstanceCache  =  createInstance(pattern,  timeZone,  locale);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Object  cInstanceCache  =  createInstance(pattern,  timeZone,  locale);	      Object    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
119	[BUG]  [BUGGY]  Set  <  String>  cInstanceCache  =  Sets.newHashSet(pattern);  [CE]  <identifier>  expected  [FE]        SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  Set  <  String>  cInstanceCache  =  Sets.newHashSet(pattern);  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	Set  <  String>  cInstanceCache  =  Sets.newHashSet(pattern);	      if(mRules    ==    null)    {    for(String    pattern    :    mRules.keySet())    {    return    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
120	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c  >=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [CE]  <identifier>  expected  [FE]            SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c  >=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c  >=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(c);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
121	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(0);  }  [CE]  <identifier>  expected  [FE]              SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(0);  }  [BUGGY]    FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	if(cInstanceCache!=  null)  {  for(int  c  =  0;  c!=  null;  c  <  mRules.size();  ++c)  {  return  cInstanceCache.get(0);  }	      if(mRules    ==    null)    {    for(int    c    =    0;    c!=    null;    c    <    mRules.size();    ++c)    {    return    cInstanceCache.get(c);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
122	[BUG]  [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  daylight);  [CE]  <identifier>  expected  [FE]          SerializationException    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {    [BUGGY]  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  daylight);  [BUGGY]    FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  daylight);	  FastDateFormat    emptyFormat    =    new    FastDateFormat(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
