bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  2);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  UnpaddedNumberField(field,  2);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  UnpaddedNumberField(field,  2);	  return    new    UnpaddedNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
2	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  3);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  UnpaddedNumberField(field,  3);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  UnpaddedNumberField(field,  3);	  return    new    UnpaddedNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  4);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  UnpaddedNumberField(field,  4);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  UnpaddedNumberField(field,  4);	  return    new    UnpaddedNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  if(padding    >=    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
5	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
6	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
7	[BUG]  [BUGGY]  DefaultPattern  {  for(int  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  DefaultPattern  {  for(int  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	DefaultPattern  {  for(int  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    >=    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
8	[BUG]  [BUGGY]  DefaultPattern  {  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  DefaultPattern  {  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	DefaultPattern  {  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    >=    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
9	[BUG]  [BUGGY]  mRule.select(padding,  field);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(padding,  field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(padding,  field);	  mRule.select(field,    field);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
10	[BUG]  [BUGGY]  mRule.select(field,  field,  padding);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  field,  padding);	  mRule.select(field,    field);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    >    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
12	[BUG]  [BUGGY]  mRules.select(field,  padding,  2);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding,  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding,  2);	  mRules.select(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  mRules.select(field,  padding,  3);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding,  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding,  3);	  mRules.select(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  mRules.select(field,  padding,  4);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding,  4);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding,  4);	  mRules.select(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  mRule.select(field,  2);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  2);	  mRule.select(field,    3);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.max(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.max(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.max(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
17	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  mRules.selectNumberRule(field,  padding,  false);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.selectNumberRule(field,  padding,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.selectNumberRule(field,  padding,  false);	  mRule.selectNumberRule(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
19	[BUG]  [BUGGY]  mRule.selectNumberRule(padding,  field,  true);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(padding,  field,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(padding,  field,  true);	  mRule.selectNumberRule(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  for(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  mRules.select(field,  padding,  false,  true);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding,  false,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding,  false,  true);	  mRules.select(field,    padding,    false);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  mRules.select(padding,  field,  false);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(padding,  field,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(padding,  field,  false);	  mRules.select(field,    padding,    false);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding,  0))  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding,  0))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding,  0))  {  return  null;  }	  vice.selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
24	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding));  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding));  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding));	  vice.selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
25	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size(),  field,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    field);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
26	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size(),  field),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    field);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
27	[BUG]  [BUGGY]  enableNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  enableNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	enableNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
28	[BUG]  [BUGGY]  ensureNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  ensureNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	ensureNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
29	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  UnpaddedNumberField(field);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  UnpaddedNumberField(field);	  return    new    PaddedNumberField(field);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  return  new  ShortDigitNumberField(field);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  ShortDigitNumberField(field);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  ShortDigitNumberField(field);	  return    new    PaddedNumberField(field);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  return  new  PaddedNumberField(field  +  1);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field  +  1);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field  +  1);	  return    new    PaddedNumberField(field);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  0);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  DoubleDigitNumberField(field,  0);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  DoubleDigitNumberField(field,  0);	  return    new    DoubleDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
33	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  2);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  DoubleDigitNumberField(field,  2);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  DoubleDigitNumberField(field,  2);	  return    new    DoubleDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
34	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  3);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  DoubleDigitNumberField(field,  3);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  DoubleDigitNumberField(field,  3);	  return    new    DoubleDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
35	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  4);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  DoubleDigitNumberField(field,  4);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  DoubleDigitNumberField(field,  4);	  return    new    DoubleDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
36	[BUG]  [BUGGY]  if(padding  ==  0)  {  if(!selectNumberRule(field,  1))  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(padding  ==  0)  {  if(!selectNumberRule(field,  1))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(padding  ==  0)  {  if(!selectNumberRule(field,  1))  {  return  null;  }	  if(padding    ==    0)    {    if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
37	[BUG]  [BUGGY]  parent.selectNumberRule(field,  padding);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  parent.selectNumberRule(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	parent.selectNumberRule(field,  padding);	  if(padding    ==    0)    {    if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
38	[BUG]  [BUGGY]  if(selectNumberRule(field,  padding))  {  aughtException.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(selectNumberRule(field,  padding))  {  aughtException.printStackTrace();  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(selectNumberRule(field,  padding))  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
39	[BUG]  [BUGGY]  if(selectNumberRule(field,  padding))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(selectNumberRule(field,  padding))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(selectNumberRule(field,  padding))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
40	[BUG]  [BUGGY]  aughtException.printStackTrace(padding);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  aughtException.printStackTrace(padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	aughtException.printStackTrace(padding);	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
41	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
42	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  /  2);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  /  2);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  /  2);	  return    new    PaddedNumberField(field,    padding    +    2);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  -  2);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  -  2);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  -  2);	  return    new    PaddedNumberField(field,    padding    +    2);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  enableSelectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  enableSelectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	enableSelectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  allowSelectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
45	[BUG]  [BUGGY]  ensureSelectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  ensureSelectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	ensureSelectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  allowSelectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size(),  field,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size(),    field);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
47	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  *  2);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  *  2);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  *  2);	  return    new    PaddedNumberField(field,    padding    *    1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
48	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  *  4);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  *  4);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  *  4);	  return    new    PaddedNumberField(field,    padding    *    1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
49	[BUG]  [BUGGY]  if(!selectNumberRule(field,  padding))  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(!selectNumberRule(field,  padding))  {  return  this;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(!selectNumberRule(field,  padding))  {  return  this;  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
50	[BUG]  [BUGGY]  if(selectNumberRule(field,  padding))  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(selectNumberRule(field,  padding))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(selectNumberRule(field,  padding))  {  return  null;  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
51	[BUG]  [BUGGY]  if(!selectNumberRule(field,  padding))  {  return  new  PaddedNumberField(field,  padding);  }  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(!selectNumberRule(field,  padding))  {  return  new  PaddedNumberField(field,  padding);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(!selectNumberRule(field,  padding))  {  return  new  PaddedNumberField(field,  padding);  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
52	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding,  0);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding,  0);	  vice.selectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
53	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding,  mMaxLengthEstimate);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding,  mMaxLengthEstimate);	  vice.selectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
54	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding,  1);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding,  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding,  1);	  vice.selectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
55	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding,  false);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding,  false);	  vice.selectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
56	[BUG]  [BUGGY]  mRule.selectNumber(padding,  field,  true);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(padding,  field,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(padding,  field,  true);	  mRule.selectNumber(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
57	[BUG]  [BUGGY]  mRules.selectNumber(field,  padding,  false);  [CE]  illegal  start  of  type  [FE]                          SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.selectNumber(field,  padding,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.selectNumber(field,  padding,  false);	  mRule.selectNumber(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
58	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field,  2);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  TwoDigitNumberField(field,  2);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  TwoDigitNumberField(field,  2);	  return    new    TwoDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
59	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field,  0);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  TwoDigitNumberField(field,  0);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  TwoDigitNumberField(field,  0);	  return    new    TwoDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
60	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field,  3);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  TwoDigitNumberField(field,  3);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  TwoDigitNumberField(field,  3);	  return    new    TwoDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
61	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field,  4);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  TwoDigitNumberField(field,  4);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  TwoDigitNumberField(field,  4);	  return    new    TwoDigitNumberField(field,    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
62	[BUG]  [BUGGY]  mRule.select(padding,  field,  true);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(padding,  field,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(padding,  field,  true);	  mRule.select(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
63	[BUG]  [BUGGY]  mRule.select(match,  padding,  false);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(match,  padding,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(match,  padding,  false);	  mRule.select(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
64	[BUG]  [BUGGY]  mRule.select(field,  padding,  false,  true);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  padding,  false,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  padding,  false,  true);	  mRule.select(field,    padding,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  For(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  For(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  allowSelectNumberRule(field,  padding,  0);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  padding,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  padding,  0);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  allowSelectNumberRule(field,  padding,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  padding,  mMaxLengthEstimate);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  padding,  mMaxLengthEstimate);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
69	[BUG]  [BUGGY]  enableSelectNumberRule(field,  padding,  0);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  enableSelectNumberRule(field,  padding,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	enableSelectNumberRule(field,  padding,  0);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
70	[BUG]  [BUGGY]  allowSelectNumberRule(field,  padding,  1);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  padding,  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  padding,  1);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
71	[BUG]  [BUGGY]  parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ".);  }	  parent!=    null    &&!selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
72	[BUG]  [BUGGY]  mRule.selectSelectNumberRule(field,  padding);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectSelectNumberRule(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectSelectNumberRule(field,  padding);	  mRule.selectSelectNumberRule(field);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  mRule.selectSelectedNumberRule(field);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectSelectedNumberRule(field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectSelectedNumberRule(field);	  mRule.selectSelectNumberRule(field);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
74	[BUG]  [BUGGY]  mRule.selectSelectedNumberRule(field,  padding);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectSelectedNumberRule(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectSelectedNumberRule(field,  padding);	  mRule.selectSelectNumberRule(field);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  mRules.size();  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
76	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
77	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
78	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  For(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
79	[BUG]  [BUGGY]  mRules.select(field,  2);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  2);	  mRules.select(field,    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
80	[BUG]  [BUGGY]  mRules.select(field,  0,  padding);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  0,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  0,  padding);	  mRules.select(field,    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
81	[BUG]  [BUGGY]  parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&!selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
82	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  padding);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  UnpaddedNumberField(field,  padding);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  UnpaddedNumberField(field,  padding);	  return    new    UnpaddedNumberField(field,    0);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
83	[BUG]  [BUGGY]  mRules.select(padding,  field);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(padding,  field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(padding,  field);	  mRules.select(field,    field);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
84	[BUG]  [BUGGY]  rule[0].select(field,  padding);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  rule[0].select(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	rule[0].select(field,  padding);	  mRules.select(field,    field);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
85	[BUG]  [BUGGY]  mRules.insert(field,  padding);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.insert(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.insert(field,  padding);	  mRules.select(field,    field);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size()  -  2);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
87	[BUG]  [BUGGY]  mRule.selectNumber(field,  2);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  2);	  mRule.selectNumber(field,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
88	[BUG]  [BUGGY]  mRule.selectNumber(field,  3);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  3);	  mRule.selectNumber(field,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
89	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  /  3);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  /  3);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  /  3);	  return    new    PaddedNumberField(field,    padding    /    1);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
90	[BUG]  [BUGGY]  mRules.select(padding,  field,  true);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(padding,  field,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(padding,  field,  true);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
91	[BUG]  [BUGGY]  mRules.select(match,  padding,  false);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(match,  padding,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(match,  padding,  false);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
92	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  1);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  1);	  mRule.selectNumberRule(field,    3);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
93	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  2);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  2);	  mRule.selectNumberRule(field,    3);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
94	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size()    +    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
95	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding  +  2);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding  +  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding  +  2);	  mRule.selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
96	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding  +  3);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding  +  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding  +  3);	  mRule.selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
97	[BUG]  [BUGGY]  allowNumberRule(field,  padding,  0);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  padding,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  padding,  0);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
98	[BUG]  [BUGGY]  allowNumberRule(field,  padding,  1);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  padding,  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  padding,  1);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  allowNumberRule(field,  1);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  1);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  allowNumberRule(field,  padding,  3);  [CE]  illegal  start  of  type  [FE]                          SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  padding,  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  padding,  3);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  NeighborRule.selectNumberRule(field,  padding,  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  NeighborRule.selectNumberRule(field,  padding,  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	NeighborRule.selectNumberRule(field,  padding,  0))  {  throw  new  IllegalArgumentException( " ");  }	  NeighborRule.selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
102	[BUG]  [BUGGY]  NeighborRule.selectNumberRule(field,  padding  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  NeighborRule.selectNumberRule(field,  padding  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	NeighborRule.selectNumberRule(field,  padding  +  1))  {  throw  new  IllegalArgumentException( " ");  }	  NeighborRule.selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
103	[BUG]  [BUGGY]  NeighborRule.selectNumberRule(field,  padding);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  NeighborRule.selectNumberRule(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	NeighborRule.selectNumberRule(field,  padding);	  NeighborRule.selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
104	[BUG]  [BUGGY]  mRule.selectNumber(padding,  field);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(padding,  field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(padding,  field);	  mRule.selectNumber(field,    field);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
105	[BUG]  [BUGGY]  mRule.selectNumberField(field,  padding);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberField(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberField(field,  padding);	  mRule.selectNumber(field,    field);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
106	[BUG]  [BUGGY]  mRules.select(field,  padding  +  2);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding  +  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding  +  2);	  mRules.select(field,    padding    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
107	[BUG]  [BUGGY]  mRules.select(field,  padding  +  3);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding  +  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding  +  3);	  mRules.select(field,    padding    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
109	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding,  2);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding,  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding,  2);	  mRule.selectNumberRule(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
110	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding,  0);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding,  0);	  mRule.selectNumberRule(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
111	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding,  3);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding,  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding,  3);	  mRule.selectNumberRule(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
112	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding))  {  return  null;  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding))  {  return  null;  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding))  {  return  null;	  if(padding    >=    0)    {    if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
113	[BUG]  [BUGGY]  aughtException.withFieldName(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  aughtException.withFieldName(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	aughtException.withFieldName(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.withFieldName(field,    cDefaultPattern))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
114	[BUG]  [BUGGY]  aughtException.withFieldName(cDefaultPattern,  field))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  aughtException.withFieldName(cDefaultPattern,  field))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	aughtException.withFieldName(cDefaultPattern,  field))  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.withFieldName(field,    cDefaultPattern))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
115	[BUG]  [BUGGY]  mRule.select(field,  padding,  2);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  padding,  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  padding,  2);	  mRule.select(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
116	[BUG]  [BUGGY]  mRule.select(field,  padding,  3);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  padding,  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  padding,  3);	  mRule.select(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  mRule.select(field,  padding,  0);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  padding,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  padding,  0);	  mRule.select(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
118	[BUG]  [BUGGY]  mRule.selectNumber(field,  padding,  false,  true);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  padding,  false,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  padding,  false,  true);	  mRule.selectNumber(field,    padding,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  mRule.selectNumber(padding,  field,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(padding,  field,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(padding,  field,  false);	  mRule.selectNumber(field,    padding,    false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
120	[BUG]  [BUGGY]  mRule.selectNumber(field,  padding  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  padding  +  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  padding  +  2);	  mRule.selectNumber(field,    padding    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
121	[BUG]  [BUGGY]  mRule.selectNumber(field,  padding  +  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  padding  +  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  padding  +  3);	  mRule.selectNumber(field,    padding    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
122	[BUG]  [BUGGY]  mRule.select(padding,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(padding,  field  +  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(padding,  field  +  1);	  mRule.select(field,    padding    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
123	[BUG]  [BUGGY]  mRule.select(field,  padding  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  padding  +  2);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  padding  +  2);	  mRule.select(field,    padding    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
124	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding,  false,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding,  false,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding,  false,  true);	  mRule.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
125	[BUG]  [BUGGY]  mRule.selectNumberRule(padding,  field,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(padding,  field,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(padding,  field,  false);	  mRule.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
126	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding  +  1))  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding  +  1))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding  +  1))  {  return  null;  }	  vice.selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
127	[BUG]  [BUGGY]  vice.selectNumberRule(field,  0))  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  0))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  0))  {  return  null;  }	  vice.selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
128	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding))  {  return  this;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding))  {  return  this;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding))  {  return  this;  }	  vice.selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
129	[BUG]  [BUGGY]  int  padding  =  Math.min(mRules.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  padding  =  Math.min(mRules.size()  -  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  padding  =  Math.min(mRules.size()  -  1);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
130	[BUG]  [BUGGY]  Integer  padding  =  mRules.get(padding);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  padding  =  mRules.get(padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  padding  =  mRules.get(padding);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
131	[BUG]  [BUGGY]  Integer  padding  =  mRules.get(field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  padding  =  mRules.get(field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  padding  =  mRules.get(field);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
132	[BUG]  [BUGGY]  Integer  padding  =  mRules.get(key);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  padding  =  mRules.get(key);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  padding  =  mRules.get(key);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
133	[BUG]  [BUGGY]  mRule.select(field,  padding  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  padding  *  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  padding  *  1);	  mRule.select(field,    padding    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
134	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  2  /  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  2  /  1);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  2  /  1);	  return    new    PaddedNumberField(field,    padding    /    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
135	[BUG]  [BUGGY]  return  new  UnpaddedNumberField(field,  0L);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  UnpaddedNumberField(field,  0L);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  UnpaddedNumberField(field,  0L);	  return    new    UnpaddedNumberField(field,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
136	[BUG]  [BUGGY]  if(padding!=  0)  {  if(!selectNumberRule(field,  null))  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(padding!=  0)  {  if(!selectNumberRule(field,  null))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(padding!=  0)  {  if(!selectNumberRule(field,  null))  {  return  null;  }	  if(padding!=    0)    {    if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
137	[BUG]  [BUGGY]  allowNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
138	[BUG]  [BUGGY]  allowNumberRule(field,  3))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  3))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  3))  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
139	[BUG]  [BUGGY]  if(!selectNumberRule(field,  false))  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(!selectNumberRule(field,  false))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(!selectNumberRule(field,  false))  {  return  null;  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
140	[BUG]  [BUGGY]  if(!selectNumberRule(field,  padding)||!inLiteral)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(!selectNumberRule(field,  padding)||!inLiteral)  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(!selectNumberRule(field,  padding)||!inLiteral)  {  return  null;  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
141	[BUG]  [BUGGY]  if(!selectNumberRule(field,  padding)&&  mRules!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(!selectNumberRule(field,  padding)&&  mRules!=  null)  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(!selectNumberRule(field,  padding)&&  mRules!=  null)  {  return  null;  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
142	[BUG]  [BUGGY]  NeighborRule  padding  =  mRules.get(padding);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  NeighborRule  padding  =  mRules.get(padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	NeighborRule  padding  =  mRules.get(padding);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
143	[BUG]  [BUGGY]  Integer  c  =  selectNumberRule(field,  padding);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  c  =  selectNumberRule(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  c  =  selectNumberRule(field,  padding);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
144	[BUG]  [BUGGY]  FieldUtils.checkPadding(padding);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  FieldUtils.checkPadding(padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	FieldUtils.checkPadding(padding);	  if(padding    >    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
145	[BUG]  [BUGGY]  NeighborRule.selectNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  NeighborRule.selectNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	NeighborRule.selectNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }	  NeighborRule.selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
146	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  DoubleDigitNumberField(field);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  DoubleDigitNumberField(field);	  return    new    PaddedNumberField(field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
147	[BUG]  [BUGGY]  mRule.insert(field,  padding);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.insert(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.insert(field,  padding);	  mRule.select(field,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
148	[BUG]  [BUGGY]  NeighborRule  padding  =  mRules.get(key);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  NeighborRule  padding  =  mRules.get(key);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	NeighborRule  padding  =  mRules.get(key);	  if(padding    >=    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
149	[BUG]  [BUGGY]  aughtException.withFieldName(field,  cDefaultPattern),  padding)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  aughtException.withFieldName(field,  cDefaultPattern),  padding)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	aughtException.withFieldName(field,  cDefaultPattern),  padding)  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.withFieldName(field,    cDefaultPattern))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
150	[BUG]  [BUGGY]  vice.selectNumberRule(field,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  0);	  vice.selectNumberRule(field,    padding);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
151	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding  +  1);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding  +  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding  +  1);	  vice.selectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
152	[BUG]  [BUGGY]  allowSelectNumberRule(field,  3);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  3);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
153	[BUG]  [BUGGY]  allowSelectNumberRule(field,  0);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  0);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
154	[BUG]  [BUGGY]  allowSelectNumberRule(field,  1);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  1);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
155	[BUG]  [BUGGY]  allowSelectNumberRule(field,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  mMaxLengthEstimate);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  mMaxLengthEstimate);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
156	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
157	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size());  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);	  For(int    i    =    0,    len    =    Math.min(mRules.size()    +    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
158	[BUG]  [BUGGY]  int  padding  =  mRules.size();  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  padding  =  mRules.size();  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  padding  =  mRules.size();	  if(padding    >    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
159	[BUG]  [BUGGY]  mRule.select(field,  0);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  0);	  mRule.select(field,    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
160	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  field,  false);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  field,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  field,  false);	  mRule.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
161	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  field,  true);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  field,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  field,  true);	  mRule.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
162	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size(),  field);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size(),  field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size(),  field);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
163	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size(),  padding);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size(),  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size(),  padding);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
164	[BUG]  [BUGGY]  mRule.selectNumber(field,  field,  false);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  field,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  field,  false);	  mRule.selectNumber(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
165	[BUG]  [BUGGY]  mRule.selectPattern(field,  padding,  true);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectPattern(field,  padding,  true);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectPattern(field,  padding,  true);	  mRule.selectNumber(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
166	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  For(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  mRules.size()  -  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  mRules.size()  -  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  mRules.size()  -  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
168	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
169	[BUG]  [BUGGY]  mRules.select(field,  padding  *  1);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding  *  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding  *  1);	  mRules.select(field,    padding    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
170	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field)-  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field)-  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size(),  field)-  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    field);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
171	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field  +  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size(),  field  +  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size(),  field  +  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    field);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
172	[BUG]  [BUGGY]  mRule.select(field,  field,  false);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  field,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  field,  false);	  mRule.select(field,    padding,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
173	[BUG]  [BUGGY]  mRule.selectSelectNumber(field,  padding);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectSelectNumber(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectSelectNumber(field,  padding);	  mRule.selectSelectNumberRule(field);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field)-  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field)-  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size(),  field)-  1;  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size(),    field);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field  +  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  field  +  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size(),  field  +  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size(),    field);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
176	[BUG]  [BUGGY]  allowSelectNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  0))  {  throw  new  IllegalArgumentException( " ");  }	  allowSelectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
177	[BUG]  [BUGGY]  mRules.select(field,  0);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  0);	  mRules.select(field,    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
178	[BUG]  [BUGGY]  allowNumberRule(field,  3);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  3);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  3);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
179	[BUG]  [BUGGY]  allowNumberRule(field,  0);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  0);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
180	[BUG]  [BUGGY]  allowNumberRule(field,  4);  [CE]  illegal  start  of  type  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  4);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  4);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
181	[BUG]  [BUGGY]  mRules.select(field,  field,  false);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  field,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  field,  false);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
182	[BUG]  [BUGGY]  mRules.select(field,  padding,  null);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.select(field,  padding,  null);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.select(field,  padding,  null);	  mRules.select(field,    padding,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
183	[BUG]  [BUGGY]  mRule.selectNumber(field,  padding  *  1);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  padding  *  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  padding  *  1);	  mRule.selectNumber(field,    padding    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
184	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  *  3);  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  *  3);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  *  3);	  return    new    PaddedNumberField(field,    padding    +    3);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
185	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  -  3);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  -  3);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  -  3);	  return    new    PaddedNumberField(field,    padding    +    3);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
186	[BUG]  [BUGGY]  mRule.selectNumber(field,  0);  [CE]  illegal  start  of  type  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  0);	  mRule.selectNumber(field,    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
187	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding,  4);  [CE]  illegal  start  of  type  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding,  4);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding,  4);	  mRule.selectNumberRule(field,    padding,    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
188	[BUG]  [BUGGY]  if(aughtException!=  null)  {  aughtException.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(aughtException!=  null)  {  aughtException.printStackTrace();  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(aughtException!=  null)  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
189	[BUG]  [BUGGY]  if(aughtException!=  null)  {  aughtException.printStackTrace();  }  else  {  throw  new  SerializationException( " ");  }  [CE]  illegal  start  of  type  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(aughtException!=  null)  {  aughtException.printStackTrace();  }  else  {  throw  new  SerializationException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(aughtException!=  null)  {  aughtException.printStackTrace();  }  else  {  throw  new  SerializationException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
190	[BUG]  [BUGGY]  if(padding  ==  0)  {  if(!selectNumberRule(field,  null))  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(padding  ==  0)  {  if(!selectNumberRule(field,  null))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(padding  ==  0)  {  if(!selectNumberRule(field,  null))  {  return  null;  }	  if(padding    ==    0)    {    if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
191	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  mMaxLengthEstimate  *  1);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  mMaxLengthEstimate  *  1);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  mMaxLengthEstimate  *  1);	  return    new    PaddedNumberField(field,    padding    *    1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
192	[BUG]  [BUGGY]  mRules.skip(field,  padding);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRules.skip(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRules.skip(field,  padding);	  mRules.select(field,    field);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
193	[BUG]  [BUGGY]  mRule.selectPattern(field,  padding);  [CE]  illegal  start  of  type  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectPattern(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectPattern(field,  padding);	  mRule.selectNumber(field,    field);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
194	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding  *  1);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding  *  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding  *  1);	  mRule.selectNumberRule(field,    padding    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
195	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
196	[BUG]  [BUGGY]  rule.select(field,  padding);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  rule.select(field,  padding);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	rule.select(field,  padding);	  mRules.select(field,    field);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
197	[BUG]  [BUGGY]  Integer  padding  =  mRules.size();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Integer  padding  =  mRules.size();  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Integer  padding  =  mRules.size();	  if(padding    >=    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
199	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
200	[BUG]  [BUGGY]  Parent!=  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Parent!=  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Parent!=  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&!selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
201	[BUG]  [BUGGY]  Parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  Parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	Parent  ==  null  &&!selectNumberRule(field,  padding))  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&!selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
202	[BUG]  [BUGGY]  vice.selectNumberRule(field,  padding,  mMinLengthEstimate);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  vice.selectNumberRule(field,  padding,  mMinLengthEstimate);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	vice.selectNumberRule(field,  padding,  mMinLengthEstimate);	  vice.selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
203	[BUG]  [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(padding!=  null)  {  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(padding!=  null)  {  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  }	  if(padding    ==    null)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
204	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size()  -  1);  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size()  -  1);  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size()  -  1);  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  for(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size(),  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  padding  +=  value;  }	  for(int    i    =    0,    len    =    Math.min(mRules.size());    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
206	[BUG]  [BUGGY]  mRule.selectNumber(field,  padding,  false,  null);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumber(field,  padding,  false,  null);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumber(field,  padding,  false,  null);	  mRule.selectNumber(field,    padding,    false);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
207	[BUG]  [BUGGY]  mRule.select(field,  padding,  4);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.select(field,  padding,  4);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.select(field,  padding,  4);	  mRule.select(field,    padding,    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	for(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    >    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
209	[BUG]  [BUGGY]  paint  =  Math.min(mRules.size()  -  1);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  paint  =  Math.min(mRules.size()  -  1);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	paint  =  Math.min(mRules.size()  -  1);	  if(padding    >=    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
210	[BUG]  [BUGGY]  paint  =  Math.min(mRules.size()  -  1,  field);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  paint  =  Math.min(mRules.size()  -  1,  field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	paint  =  Math.min(mRules.size()  -  1,  field);	  if(padding    >=    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
211	[BUG]  [BUGGY]  allowNumberRule(field,  padding))  {  return  new  PaddedNumberField(field,  padding);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowNumberRule(field,  padding))  {  return  new  PaddedNumberField(field,  padding);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowNumberRule(field,  padding))  {  return  new  PaddedNumberField(field,  padding);  }	  allowNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
212	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	throw  new  IllegalArgumentException( " ");	  allowNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
213	[BUG]  [BUGGY]  mRule.selectNumberField(field,  padding,  false);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberField(field,  padding,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberField(field,  padding,  false);	  mRule.selectNumber(field,    padding,    true);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
214	[BUG]  [BUGGY]  return  new  PaddedNumberField(field,  padding  -  padding  *  1);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  PaddedNumberField(field,  padding  -  padding  *  1);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  PaddedNumberField(field,  padding  -  padding  *  1);	  return    new    PaddedNumberField(field,    padding    *    1);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
215	[BUG]  [BUGGY]  int  padding  =  Math.min(mRules.size()  -  1,  field);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  padding  =  Math.min(mRules.size()  -  1,  field);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  padding  =  Math.min(mRules.size()  -  1,  field);	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    padding    +=    value;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
216	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  For(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	For(int  i  =  0,  len  =  Math.min(mRules.size()  -  1,  padding);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  For(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
217	[BUG]  [BUGGY]  if(!selectNumberRule(field,  padding)||  padding  <  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(!selectNumberRule(field,  padding)||  padding  <  0)  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(!selectNumberRule(field,  padding)||  padding  <  0)  {  return  null;  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
218	[BUG]  [BUGGY]  if(!selectNumberRule(field,  padding)||  padding  >  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(!selectNumberRule(field,  padding)||  padding  >  0)  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(!selectNumberRule(field,  padding)||  padding  >  0)  {  return  null;  }	  if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
219	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  padding,  false,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  padding,  false,  mMaxLengthEstimate);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  padding,  false,  mMaxLengthEstimate);	  mRule.selectNumberRule(field,    padding,    false);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
220	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtException.printStackTrace();  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(mRules!=  null)  {  aughtException.printStackTrace();  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(mRules!=  null)  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
221	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtException.printStackTrace();  }  else  {  throw  new  SerializationException( " ");  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(mRules!=  null)  {  aughtException.printStackTrace();  }  else  {  throw  new  SerializationException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(mRules!=  null)  {  aughtException.printStackTrace();  }  else  {  throw  new  SerializationException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
222	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field);  [CE]  illegal  start  of  type  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  return  new  TwoDigitNumberField(field);  [BUGGY]      }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	return  new  TwoDigitNumberField(field);	  return    new    PaddedNumberField(field);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
223	[BUG]  [BUGGY]  mRule.selectNumberRule(field,  4);  [CE]  illegal  start  of  type  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  mRule.selectNumberRule(field,  4);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	mRule.selectNumberRule(field,  4);	  mRule.selectNumberRule(field,    3);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
224	[BUG]  [BUGGY]  allowSelectNumberRule(field,  padding,  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  allowSelectNumberRule(field,  padding,  false);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	allowSelectNumberRule(field,  padding,  false);	  allowSelectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
225	[BUG]  [BUGGY]  NeighborRule.selectNumberRule(field,  padding  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  NeighborRule.selectNumberRule(field,  padding  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	NeighborRule.selectNumberRule(field,  padding  -  1))  {  throw  new  IllegalArgumentException( " ");  }	  NeighborRule.selectNumberRule(field,    padding))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
226	[BUG]  [BUGGY]  enableNumberRule(field,  padding,  0);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  enableNumberRule(field,  padding,  0);  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	enableNumberRule(field,  padding,  0);	  allowNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
227	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size(),  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size(),  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size(),  field);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
228	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size(),  padding);  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size(),  padding);  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size(),  padding);  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
229	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size(),  field);  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size(),  field);  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size(),  field);  ++i)  {  String  key  =(String)mRules.get(key);  }	  if(padding    ==    0)    {    for(int    i    =    0,    len    =    Math.min(mRules.size(),    padding);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
230	[BUG]  [BUGGY]  if(padding!=  0)  {  if(!selectNumberRule(field,  1))  {  return  null;  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  if(padding!=  0)  {  if(!selectNumberRule(field,  1))  {  return  null;  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	if(padding!=  0)  {  if(!selectNumberRule(field,  1))  {  return  null;  }	  if(padding!=    0)    {    if(!selectNumberRule(field,    padding))    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
231	[BUG]  [BUGGY]  int  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:  return  new  TwoDigitNumberField(field);  default:      [BUGGY]  int  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }  [BUGGY]      return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	int  len  =  Math.min(mRules.size()  -  1);  i  <  len;  ++i)  {  String  key  =(String)mRules.get(key);  }	  for(int    i    =    0,    len    =    Math.min(mRules.size()    -    1);    i    <    len;    ++i)    {    String    key    =(String)mRules.get(key);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
