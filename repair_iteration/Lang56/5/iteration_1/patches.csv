bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]        SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);	      Rule    rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
2	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  0);  [CE]  case,  default,  or  '}'  expected  [FE]          SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  0);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	Rule  rule  =  selectNumberRule(Calendar.YEAR,  0);	      Rule    rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
3	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [CE]  case,  default,  or  '}'  expected  [FE]            SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	Rule  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);	      Rule    rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
4	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  year  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]        SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  year  +  1);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  year  +  1);	  rule    =    selectNumberRule(Calendar.YEAR,    year);    	non-compiled	[CE]  case,  default,  or  '}'  expected	6	None	replace
5	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  year  -  1);  [CE]  case,  default,  or  '}'  expected  [FE]          SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  year  -  1);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  year  -  1);	  rule    =    selectNumberRule(Calendar.YEAR,    year);    	non-compiled	[CE]  case,  default,  or  '}'  expected	6	None	replace
6	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  4);  [CE]  case,  default,  or  '}'  expected  [FE]          SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  4);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  4);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen    -    1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	11	None	replace
7	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  2);  [CE]  case,  default,  or  '}'  expected  [FE]            SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  2);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  2);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen    -    1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	11	None	replace
8	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  3);  [CE]  case,  default,  or  '}'  expected  [FE]              SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  3);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  3);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen    -    1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	11	None	replace
9	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]                SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  +  1);	      rule    =    SelectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	replace
10	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [CE]  case,  default,  or  '}'  expected  [FE]                  SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  -  1);	      rule    =    SelectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	replace
11	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  2);  [CE]  case,  default,  or  '}'  expected  [FE]        SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  2);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  2);	  rule    =    selectNumberRule(Calendar.YEAR,    1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	10	None	replace
12	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  4);  [CE]  case,  default,  or  '}'  expected  [FE]          SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  4);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  4);	  rule    =    selectNumberRule(Calendar.YEAR,    1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	10	None	replace
13	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  0);  break;  [CE]  case,  default,  or  '}'  expected  [FE]          SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  0);  break;  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  0);  break;	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    break;    	non-compiled	[CE]  case,  default,  or  '}'  expected	2	None	replace
14	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  break;  [CE]  case,  default,  or  '}'  expected  [FE]            SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  break;  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  break;	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    break;    	non-compiled	[CE]  case,  default,  or  '}'  expected	2	None	replace
15	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]              SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	4	None	replace
16	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);  [CE]  case,  default,  or  '}'  expected  [FE]                SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	4	None	replace
17	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  1);  [CE]  case,  default,  or  '}'  expected  [FE]                  SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  1);	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	4	None	replace
18	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  month  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]              SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  month  +  1);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  month  +  1);	  rule    =    selectNumberRule(Calendar.YEAR,    month);    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
19	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  month  -  1);  [CE]  case,  default,  or  '}'  expected  [FE]                SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  month  -  1);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  month  -  1);	  rule    =    selectNumberRule(Calendar.YEAR,    month);    	non-compiled	[CE]  case,  default,  or  '}'  expected	9	None	replace
20	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  4);  [CE]  case,  default,  or  '}'  expected  [FE]            SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  4);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  4);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen    +    1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	replace
21	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  2);  [CE]  orphaned  case  [FE]              SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  2);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  2);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen    +    1);    	non-compiled	[CE]  orphaned  case	12	None	replace
22	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  year);  [CE]  orphaned  case  [FE]            SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  year);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  year);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  orphaned  case	3	None	replace
23	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  1);  [CE]  case,  default,  or  '}'  expected  [FE]              SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	replace
24	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]                SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	replace
25	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  break;  [CE]  orphaned  case  [FE]          SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  break;  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  break;	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    break;    	non-compiled	[CE]  orphaned  case	2	None	replace
26	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  YEAR);  [CE]  orphaned  case  [FE]              SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  YEAR);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  YEAR);	  rule    =    selectNumberRule(Calendar.YEAR,    month);    	non-compiled	[CE]  orphaned  case	9	None	replace
27	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  1);  [CE]  orphaned  case  [FE]        SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.YEAR,  1);  [BUGGY]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	Rule  rule  =  selectNumberRule(Calendar.YEAR,  1);	      Rule    rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  orphaned  case	13	None	replace
28	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  3);  [CE]  case,  default,  or  '}'  expected  [FE]            SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  3);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  3);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen    +    1);    	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	replace
29	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  token);  [CE]  case,  default,  or  '}'  expected  [FE]          SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  token);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  token);	  rule    =    selectNumberRule(Calendar.YEAR,    number);    	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	replace
30	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  1);  [CE]  case,  default,  or  '}'  expected  [FE]            SerializationException    [CONTEXT]    Rule  rule;  char  c  =  token.charAt(0);  switch  (c)  {  case  'G':  //  era  designator  (text)  rule  =  new  TextField(Calendar.ERA,  ERAs);  break;  case  'y':  //  year  (number)  if  (tokenLen  >=  4)  {    [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  1);  [BUGGY]    }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);  }  else  if  (tokenLen  ==  2)  {  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	rule  =  SelectNumberRule(Calendar.YEAR,  1);	  rule    =    selectNumberRule(Calendar.YEAR,    0);    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
