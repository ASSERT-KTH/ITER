bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  i;	  String    token    =    parseToken(mPattern,    i    +    1);    indexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
2	[BUG]  [BUGGY]  int  tokenLen  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  tokenLen  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  tokenLen  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;	  String    token    =    parseToken(mPattern,    i    +    1);    indexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
3	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  2);  indexRef[0]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  2);  indexRef[0]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  2);  indexRef[0]  =  i;	  String    token    =    parseToken(mPattern,    i    +    1);    indexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
4	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  mPattern,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mStandard,  mPattern,  indexRef);	  int    indexRef[]    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
5	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  0);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  0);	  int    indexRef[]    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
6	[BUG]  [BUGGY]  mPattern.setIndex(i,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i,  indexRef);	  mPattern.setIndex(indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
7	[BUG]  [BUGGY]  mPattern.setIndex(indexRef,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef,  i  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef,  i  +  1);	  mPattern.setIndex(indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
8	[BUG]  [BUGGY]  mPattern.setIndex(ref,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(ref,  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(ref,  i);	  mPattern.setIndex(indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
9	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[1]  =  -1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[1]  =  -1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i);  indexRef[1]  =  -1;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
10	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  IndexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  IndexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mStandard,  mPattern,  IndexRef);	  String    token    =    parseToken(mPattern,    IndexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
11	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i,  indexRef);	  String    token    =    parseToken(mPattern,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
12	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  i  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef,  i  +  1);	  String    token    =    parseToken(mPattern,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
13	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mStandard,  mPattern,  i);	  String    token    =    parseToken(mPattern,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
14	[BUG]  [BUGGY]  if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  }  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  }	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    indexRef);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
15	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  i);  indexRef[0]  =  i;	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    indexRef);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
16	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i],  AmPmStrings[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i],  AmPmStrings[i]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef[i],  AmPmStrings[i]);	  String    token    =    parseToken(mPattern,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
17	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[0]  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[0]  +  1);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
18	[BUG]  [BUGGY]  mPattern.setIndex(i,  indexRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i,  indexRef[0]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i,  indexRef[0]);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
19	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  0);  indexRef[1]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  0);  indexRef[1]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  0);  indexRef[1]  =  i;	  String    token    =    parseToken(mPattern,    indexRef);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
20	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  0);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  0);	  int    indexRef    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
21	[BUG]  [BUGGY]  mPattern.setIndex(i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i  +  1);	  mPattern.setIndex(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
22	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  0);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  0);  i  =  indexRef[1];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  0);  i  =  indexRef[1];	  String    token    =    parseToken(mPattern,    0);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
23	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i);  i  =  indexRef[0]  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i);  i  =  indexRef[0]  +  2;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i);  i  =  indexRef[0]  +  2;	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0]    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
24	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i);  i  =  indexRef[1]  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i);  i  =  indexRef[1]  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i);  i  =  indexRef[1]  +  1;	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0]    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
25	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[1]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef[1]);	  String    token    =    parseToken(mPattern,    indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
26	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1,  length);	  String    token    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
27	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i  +  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i  +  1]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef[i  +  1]);	  String    token    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
28	[BUG]  [BUGGY]  indexRef[1]  =  length  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  indexRef[1]  =  length  +  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	indexRef[1]  =  length  +  1;	  indexRef[1]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
29	[BUG]  [BUGGY]  indexRef[1]  =  i  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  indexRef[1]  =  i  +  2;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	indexRef[1]  =  i  +  2;	  indexRef[1]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
30	[BUG]  [BUGGY]  mPattern.setIndex(i,  indexRef[i]  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i,  indexRef[i]  +  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i,  indexRef[i]  +  length);	  mPattern.setIndex(indexRef[i]    +    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
31	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[i]  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(shortMonths[i]  +  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(shortMonths[i]  +  length);	  mPattern.setIndex(indexRef[i]    +    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
32	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[i]  +  indexRef[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(shortMonths[i]  +  indexRef[i]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(shortMonths[i]  +  indexRef[i]);	  mPattern.setIndex(indexRef[i]    +    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
33	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mStandard,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mStandard,  indexRef);	  String    token    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
34	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mStandard,  i  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mStandard,  i  +  1);	  String    token    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
35	[BUG]  [BUGGY]  IndexRef[0]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  IndexRef[0]  =  i  +  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	IndexRef[0]  =  i  +  1;	  IndexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
36	[BUG]  [BUGGY]  IndexRef[0]  =  indexRef;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  IndexRef[0]  =  indexRef;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	IndexRef[0]  =  indexRef;	  IndexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
37	[BUG]  [BUGGY]  IndexRef[0]  =  indexRef[i];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  IndexRef[0]  =  indexRef[i];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	IndexRef[0]  =  indexRef[i];	  IndexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
38	[BUG]  [BUGGY]  IndexRef[1]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  IndexRef[1]  =  i;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	IndexRef[1]  =  i;	  IndexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
39	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[1];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[1];	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
40	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mStandard,  mDaylight,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mStandard,  mDaylight,  indexRef);	  String    token    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
41	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  mStandard,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  mStandard,  indexRef);	  String    token    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
42	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mStandard);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  mStandard);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  mStandard);	  String    token    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
43	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  indexRef[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  indexRef[i]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mStandard,  mPattern,  indexRef[i]);	  String    token    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
44	[BUG]  [BUGGY]  mPattern.setIndex(i,  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i,  indexRef[1]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i,  indexRef[1]);	  mPattern.setIndex(i,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
45	[BUG]  [BUGGY]  mPattern.setIndex(i,  indexRef[i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i,  indexRef[i]  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i,  indexRef[i]  +  1);	  mPattern.setIndex(i,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
46	[BUG]  [BUGGY]  mPattern.setIndex(i,  length[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i,  length[i]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i,  length[i]);	  mPattern.setIndex(i,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
47	[BUG]  [BUGGY]  mPattern.setIndex(i,  indexRef[i]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i,  indexRef[i]  -  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i,  indexRef[i]  -  1);	  mPattern.setIndex(indexRef[i]    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
48	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[i]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(shortMonths[i]  -  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(shortMonths[i]  -  1);	  mPattern.setIndex(indexRef[i]    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
49	[BUG]  [BUGGY]  mPattern.setIndex(ref[i]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(ref[i]  -  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(ref[i]  -  1);	  mPattern.setIndex(indexRef[i]    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
50	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(shortMonths[i]  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(shortMonths[i]  +  1);	  mPattern.setIndex(indexRef[i]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
51	[BUG]  [BUGGY]  mPattern.setIndex(ref[i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(ref[i]  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(ref[i]  +  1);	  mPattern.setIndex(indexRef[i]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
52	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[i]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  indexRef[i]);	  mPattern.setIndex(indexRef[i],    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
53	[BUG]  [BUGGY]  mPattern.setIndex(shortMonths[i],  indexRef[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(shortMonths[i],  indexRef[i]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(shortMonths[i],  indexRef[i]);	  mPattern.setIndex(indexRef[i],    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
54	[BUG]  [BUGGY]  mPattern.setIndex(ref[i],  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(ref[i],  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(ref[i],  length);	  mPattern.setIndex(indexRef[i],    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
55	[BUG]  [BUGGY]  String  c  =  parseToken(mPattern,  i);  indexRef[1]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  c  =  parseToken(mPattern,  i);  indexRef[1]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  c  =  parseToken(mPattern,  i);  indexRef[1]  =  i;	  char    c    =    parseToken(mPattern,    i);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
56	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[1]  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[1]  =  0;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  i);  indexRef[1]  =  0;	  char    c    =    parseToken(mPattern,    i);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
57	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  i;	  char    c    =    parseToken(mPattern,    i);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
58	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[1]  =  i  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[1]  =  i  +  2;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i);  indexRef[1]  =  i  +  2;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
59	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  i  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  i  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
60	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  c,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  c,  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  c,  i);	  int    indexRef    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
61	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  indexRef  =  parseToken(mPattern,  c);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  indexRef  =  parseToken(mPattern,  c);	  int    indexRef    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
62	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i]  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef[i]  +  1);	  String    token    =    parseToken(mPattern,    indexRef    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
63	[BUG]  [BUGGY]  if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
64	[BUG]  [BUGGY]  if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  indexRef[0]);  indexRef[1]  =  i;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  indexRef[0]);  indexRef[1]  =  i;  }  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	if(i  <  length)  {  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  indexRef[0]);  indexRef[1]  =  i;  }	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
65	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  c,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  c,  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  c,  i);	  int    indexRef[]    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
66	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  c);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mStandard,  c);	  int    indexRef[]    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
67	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  1,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  1,  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  i  +  1,  length);	  int    indexRef    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
68	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  2);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  i  +  2);	  int    indexRef    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
69	[BUG]  [BUGGY]  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  i  =  indexRef[1];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	i  =  indexRef[1];	  i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
70	[BUG]  [BUGGY]  i  =  indexRef[0]  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  i  =  indexRef[0]  +  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	i  =  indexRef[0]  +  1;	  i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
71	[BUG]  [BUGGY]  i  =  indexRef[i];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  i  =  indexRef[i];  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	i  =  indexRef[i];	  i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
72	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[1];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  token  =  parseToken(mPattern,  i);  i  =  indexRef[1];	  char    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
73	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  +  1,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  +  1,  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  i  +  1,  length);	  int    indexRef[]    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
74	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  +  2);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  i  +  2);	  int    indexRef[]    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
75	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i  +  2;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i  +  2;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
76	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
77	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mStandard,  i  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mStandard,  i  +  1);	  int    indexRef    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
78	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  i)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mStandard,  i)+  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mStandard,  i)+  1;	  int    indexRef    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
79	[BUG]  [BUGGY]  indexRef[0]  =  indexRef  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  indexRef[0]  =  indexRef  +  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	indexRef[0]  =  indexRef  +  1;	  indexRef[0]    =    length    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
80	[BUG]  [BUGGY]  String  indexRef  =  parseToken(mPattern,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  indexRef  =  parseToken(mPattern,  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  indexRef  =  parseToken(mPattern,  i);	  char    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
81	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  indexRef  =  parseToken(mPattern,  i  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  indexRef  =  parseToken(mPattern,  i  +  1);	  char    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
82	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  i)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  indexRef  =  parseToken(mPattern,  i)+  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  indexRef  =  parseToken(mPattern,  i)+  1;	  char    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
83	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  i  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mStandard,  i  +  1);	  int    indexRef[]    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
84	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  i)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  i)+  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mStandard,  i)+  1;	  int    indexRef[]    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
85	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[0];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  i  =  indexRef[0];	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
86	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  0;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  0;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
87	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
88	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i);  i  =  indexRef[3];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i);  i  =  indexRef[3];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i);  i  =  indexRef[3];	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[2];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
89	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mStandard,  c);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mStandard,  c);	  int    indexRef    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
90	[BUG]  [BUGGY]  char  indexRef[]  =  parseToken(mPattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  indexRef[]  =  parseToken(mPattern,  c);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  indexRef[]  =  parseToken(mPattern,  c);	  int    indexRef[]    =    parseToken(mPattern,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
91	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[i]  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  indexRef[i]  +  1);	  mPattern.setIndex(indexRef[i]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
92	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  length  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  length  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  length  +  1);	  mPattern.setIndex(indexRef[i]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
93	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  1);	  mPattern.setIndex(indexRef[i],    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
94	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[0]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  indexRef[0]);	  mPattern.setIndex(indexRef[i],    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
95	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[1]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  indexRef[1]);	  mPattern.setIndex(indexRef[i],    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
96	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[0],  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[0],  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[0],  length);	  mPattern.setIndex(indexRef[i],    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
97	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  i);  indexRef[1]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  token  =  parseToken(mPattern,  i);  indexRef[1]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  token  =  parseToken(mPattern,  i);  indexRef[1]  =  i;	  String    token    =    parseToken(mPattern,    indexRef);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
98	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  0;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  0;	  String    token    =    parseToken(mPattern,    indexRef);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
99	[BUG]  [BUGGY]  mPattern.setIndex(indexRef,  0,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef,  0,  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef,  0,  i);	  mPattern.setIndex(indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
100	[BUG]  [BUGGY]  mPattern.setIndex(indexRef,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef,  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef,  1);	  mPattern.setIndex(indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
101	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1,  indexRef);	  String    token    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
102	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  indexRef[1]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  indexRef[1]  =  i  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i)+  1;  indexRef[1]  =  i  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
103	[BUG]  [BUGGY]  i  =  indexRef[0]  +  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  i  =  indexRef[0]  +  i;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	i  =  indexRef[0]  +  i;	  i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
104	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  0;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  0;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
105	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[i]  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  indexRef[i]  +  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  indexRef[i]  +  length);	  mPattern.setIndex(indexRef[i]    +    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
106	[BUG]  [BUGGY]  mPattern.setIndex(i  +  indexRef[i]  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(i  +  indexRef[i]  +  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(i  +  indexRef[i]  +  length);	  mPattern.setIndex(indexRef[i]    +    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
107	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef  -  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef  -  1);	  String    token    =    parseToken(mPattern,    indexRef    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
108	[BUG]  [BUGGY]  if(indexRef[0]  ==  0)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  if(indexRef[0]  ==  0)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	if(indexRef[0]  ==  0)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
109	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[0]  +  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[0]  +  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[0]  +  i);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
110	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[1]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[1]);	  mPattern.setIndex(indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
111	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mStandard,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mStandard,  indexRef);	  int    indexRef    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
112	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i],  length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i],  length  -  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i],  length  -  1);	  mPattern.setIndex(indexRef[i]    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
113	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0]  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0]  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0]  +  1;	  char    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
114	[BUG]  [BUGGY]  i  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  i  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	i  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;	  String    token    =    parseToken(mPattern,    i    +    1);    indexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
115	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  -1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  -1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  -1;	  String    token    =    parseToken(mPattern,    i    +    1);    indexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
116	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  indexRef  =  parseToken(mPattern,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  indexRef  =  parseToken(mPattern,  indexRef);	  char    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
117	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[1];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[1];	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
118	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  i  =  indexRef[0];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i)+  1;  i  =  indexRef[0];	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
119	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  +  1,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  +  1,  c);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  i  +  1,  c);	  int    indexRef[]    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
120	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mRef[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  mRef[i]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  mRef[i]);	  String    token    =    parseToken(mPattern,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
121	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  mPattern);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mStandard,  mPattern);	  int    indexRef[]    =    parseToken(mPattern,    index);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
122	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  indexRef[0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern,  indexRef[0]);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mStandard,  mPattern,  indexRef[0]);	  String    token    =    parseToken(mStandard,    mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
123	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef[0]  +  1);	  String    token    =    parseToken(mPattern,    indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
124	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[0]  -  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef[0]  -  1);	  String    token    =    parseToken(mPattern,    indexRef[0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
125	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  +  3);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  i  +  3);	  int    indexRef    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
126	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  indexRef[0]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  indexRef[0]  =  i  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i)+  1;  indexRef[0]  =  i  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
127	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
128	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i  +  1);  indexRef[1]  =  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
129	[BUG]  [BUGGY]  indexRef[1]  =  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  indexRef[1]  =  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	indexRef[1]  =  1;	  indexRef[1]    =    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
130	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  0,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  0,  i);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef,  0,  i);	  String    token    =    parseToken(mPattern,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
131	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  i  =  indexRef[0]  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  i)+  1;  i  =  indexRef[0]  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  i)+  1;  i  =  indexRef[0]  +  1;	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0]    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
132	[BUG]  [BUGGY]  IndexRef[0]  =  length;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  IndexRef[0]  =  length;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	IndexRef[0]  =  length;	  IndexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
133	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[0]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[0]  =  i  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  i);  indexRef[0]  =  i  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
134	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0]  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0]  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0]  +  1;	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0]    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
135	[BUG]  [BUGGY]  i  =  parseToken(mPattern,  indexRef[0]  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  i  =  parseToken(mPattern,  indexRef[0]  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	i  =  parseToken(mPattern,  indexRef[0]  +  1;	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0]    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
136	[BUG]  [BUGGY]  i  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  i  =  parseToken(mPattern,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	i  =  parseToken(mPattern,  indexRef);	  String    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
137	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  i  *  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  i  *  1);	  int    indexRef    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
138	[BUG]  [BUGGY]  char  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];	  char    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
139	[BUG]  [BUGGY]  Char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  Char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	Char  token  =  parseToken(mPattern,  i);  i  =  indexRef[0];	  char    token    =    parseToken(mPattern,    i);    i    =    indexRef[0];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
140	[BUG]  [BUGGY]  IndexRef[0]  =  indexRef  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  IndexRef[0]  =  indexRef  +  1;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	IndexRef[0]  =  indexRef  +  1;	  indexRef[0]    =    length    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
141	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[0]  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[0]  =  0;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  i);  indexRef[0]  =  0;	  String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
142	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef  -  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  indexRef  -  1);	  int    indexRef    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
143	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mPattern,  indexRef  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mPattern,  indexRef  +  1);	  int    indexRef    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
144	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mStandard,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mStandard,  indexRef);	  int    indexRef[]    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
145	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    indexRef);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
146	[BUG]  [BUGGY]  if(indexRef[0]!=  i)  {  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  if(indexRef[0]!=  i)  {  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  }  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	if(indexRef[0]!=  i)  {  String  token  =  parseToken(mPattern,  indexRef);  indexRef[0]  =  i;  }	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    indexRef);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
147	[BUG]  [BUGGY]  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  }  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	if(indexRef[0]  ==  i)  {  String  token  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  }	  String    token    =    parseToken(mPattern,    i    +    1);    indexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
148	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  i  +  1);  indexRef[0]  =  i;	  String    token    =    parseToken(mPattern,    i    +    1);    indexRef[0]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
149	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[1]  =  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  i);  indexRef[1]  =  i  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  i);  indexRef[1]  =  i  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
150	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[1]  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[1]  +  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[1]  +  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    i    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
151	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i]  *  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i]  *  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i]  *  length);	  mPattern.setIndex(indexRef[i]    +    length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
152	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  indexRef);	  char    c    =    parseToken(mPattern,    i);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
153	[BUG]  [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  c  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  0;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  c  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  0;	  char    c    =    parseToken(mPattern,    i);    indexRef[1]    =    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
154	[BUG]  [BUGGY]  char  indexRef[]  =  parseToken(mPattern,  indexRef);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  indexRef[]  =  parseToken(mPattern,  indexRef);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  indexRef[]  =  parseToken(mPattern,  indexRef);	  int    indexRef[]    =    parseToken(mPattern,    indexRef);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
155	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef,  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef,  length);	  String    token    =    parseToken(mPattern,    indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
156	[BUG]  [BUGGY]  if(indexRef[0]  ==  -1)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  if(indexRef[0]  ==  -1)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	if(indexRef[0]  ==  -1)  {  String  token  =  parseToken(mPattern,  i);  indexRef[0]  =  i;  }	  if(indexRef[0]    ==    i)    {    String    token    =    parseToken(mPattern,    i);    indexRef[0]    =    i;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
157	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i],  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef[i],  c);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef[i],  c);	  String    token    =    parseToken(mPattern,    indexRef[i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
158	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  i  *  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  i  *  1);	  int    indexRef[]    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
159	[BUG]  [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  indexRef  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef[]  =  parseToken(mPattern,  indexRef  +  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef[]  =  parseToken(mPattern,  indexRef  +  1);	  int    indexRef[]    =    parseToken(mPattern,    i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
160	[BUG]  [BUGGY]  int  indexRef  =  parseToken(mStandard,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  int  indexRef  =  parseToken(mStandard,  index);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	int  indexRef  =  parseToken(mStandard,  index);	  int    indexRef    =    parseToken(mStandard,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
161	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  1;  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	String  token  =  parseToken(mPattern,  indexRef);  indexRef[1]  =  1;	  String    token    =    parseToken(mPattern,    i);    indexRef[1]    =    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
162	[BUG]  [BUGGY]  mPattern.setIndex(indexRef[i]  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef[i]  *  1);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef[i]  *  1);	  mPattern.setIndex(indexRef[i]    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
163	[BUG]  [BUGGY]  mPattern.setIndex(indexRef,  i  *  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  mPattern.setIndex(indexRef,  i  *  length);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	mPattern.setIndex(indexRef,  i  *  length);	  mPattern.setIndex(indexRef,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
164	[BUG]  [BUGGY]  char  indexRef  =  parseToken(mPattern,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  char  indexRef  =  parseToken(mPattern,  index);  [BUGGY]      indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	char  indexRef  =  parseToken(mPattern,  index);	  char    indexRef    =    parseToken(mPattern,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
165	[BUG]  [BUGGY]  indexRef[0]  =  length  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();  int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {      [BUGGY]  indexRef[0]  =  length  +  2;  [BUGGY]      String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  Rule  rule;  char  c  =  token.charAt(0);  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	indexRef[0]  =  length  +  2;	  indexRef[0]    =    i    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
