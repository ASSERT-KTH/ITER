bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  format.newInstance(),  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.newInstance(),  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.newInstance(),  locale);	  return    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
2	[BUG]  [BUGGY]  return  format.newInstance(mStyle,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.newInstance(mStyle,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.newInstance(mStyle,  locale);	  return    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
3	[BUG]  [BUGGY]  return  format!=  null?  FORMAT  :  INSTANCE_NO_COLON;  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  FORMAT  :  INSTANCE_NO_COLON;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  FORMAT  :  INSTANCE_NO_COLON;	  return    format    ==    null?    FORMAT    :    INSTANCE_NO_COLON;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
4	[BUG]  [BUGGY]  return  Format.getInstance(pattern,  format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(pattern,  format);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(pattern,  format);	  return    Format.getInstance(format,    format);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
5	[BUG]  [BUGGY]  return  Format.getInstance(format,  format,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  format,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  format,  locale);	  return    Format.getInstance(format,    format);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
6	[BUG]  [BUGGY]  return  Format.getInstance(format,  INSTANCE);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  INSTANCE);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  INSTANCE);	  return    Format.getInstance(format,    format);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
7	[BUG]  [BUGGY]  Format.setPattern(mValues[0]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setPattern(mValues[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setPattern(mValues[0]);	  Format.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  Format.setPattern(mValues[i],  value);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setPattern(mValues[i],  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setPattern(mValues[i],  value);	  Format.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  Format.setPattern(mValues[i],  values[i]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setPattern(mValues[i],  values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setPattern(mValues[i],  values[i]);	  Format.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String[]  mValues  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValues);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String[]  mValues  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValues);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String[]  mValues  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValues);  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  >=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  >=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  >=  null)  {  format  =  new  String(mValue);  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
12	[BUG]  [BUGGY]  cInstanceCache.put(null,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(null,  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(null,  format);	  cInstanceCache.put(format,    mValues);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  return  format!=  null?  INSTANCE_NO_COLON  :  FORMAT;  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  INSTANCE_NO_COLON  :  FORMAT;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  INSTANCE_NO_COLON  :  FORMAT;	  return    format    ==    null?    INSTANCE    :    FORMAT;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
17	[BUG]  [BUGGY]  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
18	[BUG]  [BUGGY]  Format.copyCurrentStandard(mValues,  values[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.copyCurrentStandard(mValues,  values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.copyCurrentStandard(mValues,  values[i]);	  Format.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
19	[BUG]  [BUGGY]  Format.copyCurrentStandard(mValues,  mValues[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.copyCurrentStandard(mValues,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.copyCurrentStandard(mValues,  mValues[i]);	  Format.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
20	[BUG]  [BUGGY]  Format.copyCurrentStandard(mValues,  values[i],  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.copyCurrentStandard(mValues,  values[i],  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.copyCurrentStandard(mValues,  values[i],  locale);	  Format.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
21	[BUG]  [BUGGY]  Format.copyCurrentStandard(values[i],  mValues[i]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.copyCurrentStandard(values[i],  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.copyCurrentStandard(values[i],  mValues[i]);	  Format.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
22	[BUG]  [BUGGY]  Format  <  String,  String>  format  =  mValues.get(i);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  String>  format  =  mValues.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  String>  format  =  mValues.get(i);	  Format    <    String,    String>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
23	[BUG]  [BUGGY]  Format  <  String,  String>  format  =  values.get(mValues[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  String>  format  =  values.get(mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  String>  format  =  values.get(mValues[i]);	  Format    <    String,    String>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
24	[BUG]  [BUGGY]  Format  <  String,  String>  format  =  mValues.get(0);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  String>  format  =  mValues.get(0);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  String>  format  =  mValues.get(0);	  Format    <    String,    String>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
25	[BUG]  [BUGGY]  Format  <  String,  String>  format  =  this.mValues.get(i);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  String>  format  =  this.mValues.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  String>  format  =  this.mValues.get(i);	  Format    <    String,    String>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mRules.size();  i++)  {  this.cInstanceCache.put(i,  format);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
29	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  values[i],  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  values[i],  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  values[i],  locale);	  FormatUtils.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
30	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  mValues[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  mValues[i]);	  FormatUtils.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
31	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  values[0]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  values[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  values[0]);	  FormatUtils.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
32	[BUG]  [BUGGY]  return  format  ==  null?  DEFAULT  :  FORMAT;  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  DEFAULT  :  FORMAT;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  DEFAULT  :  FORMAT;	  return    format    ==    null?    FORMAT    :    DEFAULT;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
33	[BUG]  [BUGGY]  return  format!=  null?  FORMAT  :  DEFAULT;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  FORMAT  :  DEFAULT;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  FORMAT  :  DEFAULT;	  return    format    ==    null?    FORMAT    :    DEFAULT;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
37	[BUG]  [BUGGY]  return  format  ==  null?  null  :  format.instance();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  null  :  format.instance();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  null  :  format.instance();	  return    format!=    null?    null    :    format.instance();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
38	[BUG]  [BUGGY]  Format  <?>  format  =  mValues[i];  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  mValues[i];  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  mValues[i];	  Format    <?>    format    =    values[i];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
39	[BUG]  [BUGGY]  Format  <?>  format  =  this.mValues[i];  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  this.mValues[i];  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  this.mValues[i];	  Format    <?>    format    =    values[i];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
40	[BUG]  [BUGGY]  Format  <?>  format  =  values[0];  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values[0];  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values[0];	  Format    <?>    format    =    values[i];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    mValues[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    mValues[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.length;  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    mValues[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
44	[BUG]  [BUGGY]  Format.setValue(mValues,  mValues[i]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  mValues[i]);	  Format.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
45	[BUG]  [BUGGY]  Format.setValue(mValues,  values[i],  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  values[i],  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  values[i],  locale);	  Format.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
46	[BUG]  [BUGGY]  Format.setValue(mValues,  values[0]);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  values[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  values[0]);	  Format.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
47	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.init();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.init();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.init();	  Format    format    =    format.init();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
48	[BUG]  [BUGGY]  Format  format  =  mRules.init();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  mRules.init();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  mRules.init();	  Format    format    =    format.init();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
49	[BUG]  [BUGGY]  Format  format  =  format.instance();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  format.instance();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  format.instance();	  Format    format    =    format.init();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
51	[BUG]  [BUGGY]  return  format.cloneTree(),  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(),  timeZone,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(),  timeZone,  locale);	  return    format.cloneTree(),    locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  return  format.cloneTree(),  timeZone);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(),  timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(),  timeZone);	  return    format.cloneTree(),    locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  return  format.cloneTree(),  locale,  false);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(),  locale,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(),  locale,  false);	  return    format.cloneTree(),    locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  return  format.cloneTree(),  locale,  timeZone);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(),  locale,  timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(),  locale,  timeZone);	  return    format.cloneTree(),    locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[0]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValues,  values[0]);	  FormatUtils.copyCurrentStandard(mValue,    values[0]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
56	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[1]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[1]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValues,  values[1]);	  FormatUtils.copyCurrentStandard(mValue,    values[0]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
57	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(values,  mValues[0]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(values,  mValues[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(values,  mValues[0]);	  FormatUtils.copyCurrentStandard(mValue,    values[0]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
58	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  mValues[0]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  mValues[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValues,  mValues[0]);	  FormatUtils.copyCurrentStandard(mValue,    values[0]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
59	[BUG]  [BUGGY]  return  format.instance(timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(timeZone,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(timeZone,  locale);	  return    format.instance(locale);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
60	[BUG]  [BUGGY]  return  format.instance(timeZone);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(timeZone);	  return    format.instance(locale);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
61	[BUG]  [BUGGY]  return  format.instance(TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(TimeZone.getDefault(),  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(TimeZone.getDefault(),  locale);	  return    format.instance(locale);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
62	[BUG]  [BUGGY]  return  format.instance(mLocale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(mLocale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(mLocale);	  return    format.instance(locale);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  mValues[i];  System.arraycopy(mValue,  0,  format,  value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
65	[BUG]  [BUGGY]  return  format!=  null?  null  :  format.toArray();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  null  :  format.toArray();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  null  :  format.toArray();	  return    format.toArray();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
66	[BUG]  [BUGGY]  return  format  ==  null?  null  :  format.toArray();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  null  :  format.toArray();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  null  :  format.toArray();	  return    format.toArray();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
67	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format  =  i  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format  =  i  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
68	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format  +  1;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
69	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(i,  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(i,  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(i,  format);	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i  +  1,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i  +  1,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i  +  1,  format);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
71	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  values);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(emptyFormat,  values);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(emptyFormat,  values);	  cInstanceCache.put(format,    values);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
72	[BUG]  [BUGGY]  cInstanceCache.put(mValues,  values);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(mValues,  values);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(mValues,  values);	  cInstanceCache.put(format,    values);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String[]  mValues  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValues);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String[]  mValues  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValues);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String[]  mValues  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValues);  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
77	[BUG]  [BUGGY]  Format  <?>  format  =  values.length  -  2;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.length  -  2;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.length  -  2;	  Format    <?>    format    =    values.length    -    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
78	[BUG]  [BUGGY]  Format  <?>  format  =  mValues.length  -  1;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  mValues.length  -  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  mValues.length  -  1;	  Format    <?>    format    =    values.length    -    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
79	[BUG]  [BUGGY]  Format  <?>  format  =  values.length  -  3;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.length  -  3;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.length  -  3;	  Format    <?>    format    =    values.length    -    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(i);  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(i);  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(i);  System.arraycopy(mValues,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
81	[BUG]  [BUGGY]  Format  <?>  format  =  mValues.get(i);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  mValues.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  mValues.get(i);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
82	[BUG]  [BUGGY]  Format  <?>  format  =  values.get(mValues[i]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.get(mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.get(mValues[i]);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
83	[BUG]  [BUGGY]  Format  <?>  format  =  this.values.get(i);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  this.values.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  this.values.get(i);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
84	[BUG]  [BUGGY]  Format  <?>  format  =  mValues.get(0);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  mValues.get(0);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  mValues.get(0);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
85	[BUG]  [BUGGY]  FormatUtils.setPattern(mValues[i],  value);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setPattern(mValues[i],  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setPattern(mValues[i],  value);	  FormatUtils.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
86	[BUG]  [BUGGY]  FormatUtils.setPattern(mValues[0]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setPattern(mValues[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setPattern(mValues[0]);	  FormatUtils.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  FormatUtils.setPattern(mValues,  values[i]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setPattern(mValues,  values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setPattern(mValues,  values[i]);	  FormatUtils.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  FormatUtils.setPattern(mValues[i],  format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setPattern(mValues[i],  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setPattern(mValues[i],  format);	  FormatUtils.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
89	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[i],  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[i],  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValues,  values[i],  locale);	  FormatUtils.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
90	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  mValues[i]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValues,  mValues[i]);	  FormatUtils.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
91	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(values,  mValues[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(values,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(values,  mValues[i]);	  FormatUtils.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
92	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  mValues.iterator().next();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  Object>  format  =  mValues.iterator().next();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  Object>  format  =  mValues.iterator().next();	  Format    <    String,    Object>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
93	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.iterator().next();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  Object>  format  =  this.mValues.iterator().next();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  Object>  format  =  this.mValues.iterator().next();	  Format    <    String,    Object>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
94	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  this.values.iterator().next();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  Object>  format  =  this.values.iterator().next();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  Object>  format  =  this.values.iterator().next();	  Format    <    String,    Object>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
95	[BUG]  [BUGGY]  cInstanceCache.put(format,  INSTANCE);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(format,  INSTANCE);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(format,  INSTANCE);	  cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
96	[BUG]  [BUGGY]  Format  <?>  format  =  values.length  +  2;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.length  +  2;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.length  +  2;	  Format    <?>    format    =    values.length    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
97	[BUG]  [BUGGY]  Format  <?>  format  =  values.length  +  3;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.length  +  3;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.length  +  3;	  Format    <?>    format    =    values.length    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
98	[BUG]  [BUGGY]  Format  <?>  format  =  values.length  /  1;  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.length  /  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.length  /  1;	  Format    <?>    format    =    values.length    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
99	[BUG]  [BUGGY]  cInstanceCache.put(mValue,  value);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(mValue,  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(mValue,  value);	  cInstanceCache.put(format,    value);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
100	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  value);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(emptyFormat,  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(emptyFormat,  value);	  cInstanceCache.put(format,    value);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
101	[BUG]  [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(format);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
102	[BUG]  [BUGGY]  return  format.initialize();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.initialize();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.initialize();	  return    format.remove();    	non-compiled	[CE]  <identifier>  expected	108	None	replace
103	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format  =  emptyFormat  +  1;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format  =  emptyFormat  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  format  =  emptyFormat  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    emptyFormat    +    1;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
104	[BUG]  [BUGGY]  Format  {  int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  1;  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    emptyFormat    +    1;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
105	[BUG]  [BUGGY]  return  format.cloneBoolean();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneBoolean();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneBoolean();	  return    format.cloneFlattened();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
106	[BUG]  [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(emptyFormat);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(emptyFormat);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
107	[BUG]  [BUGGY]  Format  <?>  format  =  format  +  1;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  format  +  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  format  +  1;	  Format    <?>    format    =    i    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
108	[BUG]  [BUGGY]  Format  <?>  format  =  emptyFormat  +  1;  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  emptyFormat  +  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  emptyFormat  +  1;	  Format    <?>    format    =    i    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
109	[BUG]  [BUGGY]  Format  <?>  format  =  format.i  +  1;  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  format.i  +  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  format.i  +  1;	  Format    <?>    format    =    i    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
110	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mValues.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  mValues.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  mValues.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    format    =    FormatUtils.copyCurrentStandard(mValue,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
111	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.values.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  this.values.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  this.values.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    format    =    FormatUtils.copyCurrentStandard(mValue,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
113	[BUG]  [BUGGY]  Format  <?>  format  =  mValues.iterator().next();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  mValues.iterator().next();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  mValues.iterator().next();	  Format    <?>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
114	[BUG]  [BUGGY]  Format  <?>  format  =  this.mValues.iterator().next();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  this.mValues.iterator().next();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  this.mValues.iterator().next();	  Format    <?>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
115	[BUG]  [BUGGY]  Format  <?>  format  =  this.values.iterator().next();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  this.values.iterator().next();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  this.values.iterator().next();	  Format    <?>    format    =    values.iterator().next();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
116	[BUG]  [BUGGY]  return  Format.getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(pattern,  timeZone,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(pattern,  timeZone,  locale);	  return    Format.getInstance(format,    locale);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
117	[BUG]  [BUGGY]  return  Format.getInstance(pattern,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(pattern,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(pattern,  locale);	  return    Format.getInstance(format,    locale);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
118	[BUG]  [BUGGY]  return  Format.getInstance(pattern,  format,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(pattern,  format,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(pattern,  format,  locale);	  return    Format.getInstance(format,    locale);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
119	[BUG]  [BUGGY]  return  Format.getInstance(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  timeZone,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  timeZone,  locale);	  return    Format.getInstance(format,    locale);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
120	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.copyCurrentStandard(mValue,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.copyCurrentStandard(mValue,  values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.copyCurrentStandard(mValue,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
122	[BUG]  [BUGGY]  return  format.getInstance(mStyle,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.getInstance(mStyle,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.getInstance(mStyle,  locale);	  return    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
123	[BUG]  [BUGGY]  return  format.getInstance(locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.getInstance(locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.getInstance(locale);	  return    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
124	[BUG]  [BUGGY]  return  format.getInstance(null,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.getInstance(null,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.getInstance(null,  locale);	  return    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
125	[BUG]  [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[0]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  FormatUtils.copyCurrentStandard(mValues,  values[0]);	  Format    FormatUtils.copyCurrentStandard(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
126	[BUG]  [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  cDefaultPattern);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  cDefaultPattern);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  cDefaultPattern);	  Format    FormatUtils.copyCurrentStandard(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
127	[BUG]  [BUGGY]  Format  FormatUtils.copyCurrentStandard(values,  mValues[i]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  FormatUtils.copyCurrentStandard(values,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  FormatUtils.copyCurrentStandard(values,  mValues[i]);	  Format    FormatUtils.copyCurrentStandard(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
128	[BUG]  [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  locale);	  Format    FormatUtils.copyCurrentStandard(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
129	[BUG]  [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);	  Format    <    TimeZoneNameRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
130	[BUG]  [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);	  Format    <    TimeZoneNameRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
131	[BUG]  [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  null);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  null);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  null);	  Format    <    TimeZoneNameRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
132	[BUG]  [BUGGY]  return  format.instance(),  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(),  timeZone,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(),  timeZone,  locale);	  return    format.instance(),    locale);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
133	[BUG]  [BUGGY]  return  format.instance(),  timeZone);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(),  timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(),  timeZone);	  return    format.instance(),    locale);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
134	[BUG]  [BUGGY]  return  format.instance(),  locale,  false);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(),  locale,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(),  locale,  false);	  return    format.instance(),    locale);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
135	[BUG]  [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
136	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(values[i]);  }	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
138	[BUG]  [BUGGY]  return  Format.getInstance(emptyFormat);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(emptyFormat);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(emptyFormat);	  return    Format.getInstance(format);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
139	[BUG]  [BUGGY]  return  Format.getInstance(mStyle,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(mStyle,  format);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(mStyle,  format);	  return    Format.getInstance(format);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
140	[BUG]  [BUGGY]  return  Format.getInstance(format,  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  false);	  return    Format.getInstance(format);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
141	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  mRules.size();  i++)  {  this.cInstanceCache.put(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
142	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(emptyFormat);	  Format    format    =    null;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
143	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(mValues);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(mValues);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(mValues);	  Format    format    =    null;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
144	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(mValue);  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(mValue);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(mValue);	  Format    format    =    null;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    this.values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
146	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
147	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  1;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  1;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
148	[BUG]  [BUGGY]  return  format  ==  null?  INSTANCE_NO_COLON  :  format.clone();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  INSTANCE_NO_COLON  :  format.clone();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  INSTANCE_NO_COLON  :  format.clone();	  return    format    ==    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
149	[BUG]  [BUGGY]  return  format  ==  null?  INSTANCE_NO_COLON  :  format.init();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  INSTANCE_NO_COLON  :  format.init();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  INSTANCE_NO_COLON  :  format.init();	  return    format    ==    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
150	[BUG]  [BUGGY]  return  Format.getInstance(pattern,  mRules);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(pattern,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(pattern,  mRules);	  return    Format.getInstance(format,    mRules);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
151	[BUG]  [BUGGY]  return  Format.getInstance(mRules,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(mRules,  format);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(mRules,  format);	  return    Format.getInstance(format,    mRules);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
152	[BUG]  [BUGGY]  return  Format.getInstance(mStyle,  mRules);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(mStyle,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(mStyle,  mRules);	  return    Format.getInstance(format,    mRules);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
153	[BUG]  [BUGGY]  return  Format.getInstance(format,  mRules,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  mRules,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  mRules,  locale);	  return    Format.getInstance(format,    mRules);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
155	[BUG]  [BUGGY]  Format.setValue(mValues[i],  value);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues[i],  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues[i],  value);	  Format.setValue(values[i]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
156	[BUG]  [BUGGY]  Format.setValue(mValues[0]);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues[0]);	  Format.setValue(values[i]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
157	[BUG]  [BUGGY]  return  format  ==  null?  NUMBER  :  FORMAT;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  NUMBER  :  FORMAT;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  NUMBER  :  FORMAT;	  return    format    ==    null?    FORMAT    :    NUMBER;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
158	[BUG]  [BUGGY]  return  format  ==  null?  FORMAT  :  NUMBER  +  1;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  FORMAT  :  NUMBER  +  1;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  FORMAT  :  NUMBER  +  1;	  return    format    ==    null?    FORMAT    :    NUMBER;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
159	[BUG]  [BUGGY]  Format  format  =  values.toArray(new  String[values.size()  ]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  values.toArray(new  String[values.size()  ]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  values.toArray(new  String[values.size()  ]);	  Format    format    =    mValues.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
160	[BUG]  [BUGGY]  Format  format  =  mValues.toArray(new  String[mValues.size()  ]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  mValues.toArray(new  String[mValues.size()  ]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  mValues.toArray(new  String[mValues.size()  ]);	  Format    format    =    mValues.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
161	[BUG]  [BUGGY]  Format  format  =  values.toArray(new  String[mValues.size()  ]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  values.toArray(new  String[mValues.size()  ]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  values.toArray(new  String[mValues.size()  ]);	  Format    format    =    mValues.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
162	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[i],  cDefaultPattern);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[i],  cDefaultPattern);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValues,  values[i],  cDefaultPattern);	  FormatUtils.copyCurrentStandard(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValue,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  System.arraycopy(mValue,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValue,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setPattern(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setPattern(mValues[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setPattern(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setPattern(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  FormatUtils.setPattern(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.length;  ++i)  {  FormatUtils.setPattern(mValues[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.length;  ++i)  {  FormatUtils.setPattern(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setPattern(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
167	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(i);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(i);	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
168	[BUG]  [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(i);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =  cInstanceCache.get(i);	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
169	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(i);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(i);	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
170	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
171	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(cInstanceCache!=  null)  {  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(cInstanceCache!=  null)  {  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
172	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }  else  {  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
173	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(cInstanceCache!=  null)  {  if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(cInstanceCache!=  null)  {  if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
174	[BUG]  [BUGGY]  FormatUtils.setValue(mValues[i],  value);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues[i],  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues[i],  value);	  FormatUtils.setValue(values[i]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
175	[BUG]  [BUGGY]  FormatUtils.setValue(mValues[0]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues[0]);	  FormatUtils.setValue(values[i]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
176	[BUG]  [BUGGY]  FormatUtils.setValue(mValues[i]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues[i]);	  FormatUtils.setValue(values[i]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setValue(values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setValue(values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setValue(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setValue(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  FormatUtils.setValue(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  FormatUtils.setValue(mValues[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  FormatUtils.setValue(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setValue(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
179	[BUG]  [BUGGY]  return  format  ==  null?  FORMAT  :  format.init();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  FORMAT  :  format.init();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  FORMAT  :  format.init();	  return    format    ==    null?    FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
180	[BUG]  [BUGGY]  Format.setValue(mValues,  values[i],  cDefaultPattern);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  values[i],  cDefaultPattern);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  values[i],  cDefaultPattern);	  Format.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
181	[BUG]  [BUGGY]  Format.setValue(mValues,  values[1]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  values[1]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  values[1]);	  Format.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i  +  1);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i  +  1);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i  +  1);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
183	[BUG]  [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
184	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    value.charAt(0);    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
186	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(1);  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(1);  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(1);  System.arraycopy(mValues,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    value.charAt(0);    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
187	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  System.arraycopy(mValue,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    value.charAt(0);    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
188	[BUG]  [BUGGY]  return  format.cloneTree(this,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(this,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(this,  locale);	  return    format.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
189	[BUG]  [BUGGY]  return  format.cloneTree(this,  false);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(this,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(this,  false);	  return    format.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
190	[BUG]  [BUGGY]  return  format!=  null?  null  :  format.cloneTwin();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  null  :  format.cloneTwin();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  null  :  format.cloneTwin();	  return    format.cloneTwin();    	non-compiled	[CE]  <identifier>  expected	107	None	replace
191	[BUG]  [BUGGY]  return  format.cloneTwin(this);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTwin(this);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTwin(this);	  return    format.cloneTwin();    	non-compiled	[CE]  <identifier>  expected	107	None	replace
192	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values.length  -  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values.length  -  1);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  new  FastDateFormat(mValues,  values.length  -  1);	  Format    format    =    new    FastDateFormat(mValues,    values.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
193	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values.length  +  1);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  values.length  +  1);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  new  FastDateFormat(mValues,  values.length  +  1);	  Format    format    =    new    FastDateFormat(mValues,    values.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
194	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mStandard.length);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mStandard.length);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  new  FastDateFormat(mValues,  mStandard.length);	  Format    format    =    new    FastDateFormat(mValues,    values.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
195	[BUG]  [BUGGY]  return  format.instance()?  this  :  format.instance();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance()?  this  :  format.instance();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance()?  this  :  format.instance();	  return    format.instance()?    null    :    format.instance();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
197	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
198	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  values[i],  cDefaultPattern);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  values[i],  cDefaultPattern);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  values[i],  cDefaultPattern);	  FormatUtils.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
199	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  values[i],  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  values[i],  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  values[i],  format);	  FormatUtils.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
200	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  values[0],  values[i]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  values[0],  values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  values[0],  values[i]);	  FormatUtils.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
201	[BUG]  [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  mValues[i]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  FormatUtils.copyCurrentStandard(mValues,  mValues[i]);	  Format    FormatUtils.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
202	[BUG]  [BUGGY]  Format  cInstanceCache  =  cInstanceCache.size();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =  cInstanceCache.size();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =  cInstanceCache.size();	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
203	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
204	[BUG]  [BUGGY]  Format  <?>  mRules  =  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  mRules  =  cInstanceCache.get(format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  mRules  =  cInstanceCache.get(format);	  Format    <?>    mRules    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
205	[BUG]  [BUGGY]  Format  <?>  mRules  =  format.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  mRules  =  format.get(emptyFormat);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  mRules  =  format.get(emptyFormat);	  Format    <?>    mRules    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
206	[BUG]  [BUGGY]  Format  <?>  mRules  =  cInstanceCache.get(emptyFormat,  format);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  mRules  =  cInstanceCache.get(emptyFormat,  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  mRules  =  cInstanceCache.get(emptyFormat,  format);	  Format    <?>    mRules    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
207	[BUG]  [BUGGY]  Format  <?>  mRules  =  format.get(cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  mRules  =  format.get(cInstanceCache.get(emptyFormat);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  mRules  =  format.get(cInstanceCache.get(emptyFormat);	  Format    <?>    mRules    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setPattern(values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setPattern(values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  ++i)  {  FormatUtils.setPattern(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setPattern(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
209	[BUG]  [BUGGY]  FormatUtils.setPattern(values[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setPattern(values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setPattern(values[i]);	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setPattern(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
210	[BUG]  [BUGGY]  Format.setValue(mValues[i],  values[i]);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues[i],  values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues[i],  values[i]);	  Format.setValue(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i  +  1,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i  +  1,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i  +  1,  emptyFormat);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
212	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(emptyFormat);	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
213	[BUG]  [BUGGY]  return  format.toArray(new  String[format.size()  +  1]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.toArray(new  String[format.size()  +  1]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.toArray(new  String[format.size()  +  1]);	  return    format.toArray(new    String[format.size()    ]);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
214	[BUG]  [BUGGY]  return  format.toArray(new  String[format.size()  -  1]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.toArray(new  String[format.size()  -  1]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.toArray(new  String[format.size()  -  1]);	  return    format.toArray(new    String[format.size()    ]);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
215	[BUG]  [BUGGY]  return  format.toArray(new  String[format.size()  +  3]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.toArray(new  String[format.size()  +  3]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.toArray(new  String[format.size()  +  3]);	  return    format.toArray(new    String[format.size()    ]);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
216	[BUG]  [BUGGY]  return  format.get(1);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.get(1);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.get(1);	  return    format.get()    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
217	[BUG]  [BUGGY]  return  format.get(0);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.get(0);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.get(0);	  return    format.get()    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
218	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    value.charAt(0);    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
219	[BUG]  [BUGGY]  Format.setValues(mValues);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValues(mValues);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValues(mValues);	  Format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
220	[BUG]  [BUGGY]  Format.setValues(mValues,  values);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValues(mValues,  values);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValues(mValues,  values);	  Format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
221	[BUG]  [BUGGY]  Format.setValue(mValues,  values);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  values);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  values);	  Format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
222	[BUG]  [BUGGY]  Format.setValue(mValues,  value);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  value);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  value);	  Format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mRules.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mStandard.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mStandard.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mStandard.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
226	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(format,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(format,  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(format,  locale);	  Format    cInstanceCache    =(FastDateFormat)cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
227	[BUG]  [BUGGY]  Format  <?>  format  =  values.length  -  4;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.length  -  4;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.length  -  4;	  Format    <?>    format    =    values.length    -    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
228	[BUG]  [BUGGY]  return  Format.getInstance(emptyFormat,  mRules);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(emptyFormat,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(emptyFormat,  mRules);	  return    Format.getInstance(format,    mRules);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
229	[BUG]  [BUGGY]  return  format.toArray(new  FastDateFormat[format.size()  ]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.toArray(new  FastDateFormat[format.size()  ]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.toArray(new  FastDateFormat[format.size()  ]);	  return    format.toArray();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
230	[BUG]  [BUGGY]  return  format.toArray(new  String[0]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.toArray(new  String[0]);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.toArray(new  String[0]);	  return    format.toArray();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
231	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  mPattern[i]);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  mPattern[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  mPattern[i]);	  FormatUtils.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
232	[BUG]  [BUGGY]  FormatUtils.setValues(mValues,  values[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValues(mValues,  values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValues(mValues,  values[i]);	  FormatUtils.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
233	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  cInstanceCache.put(value,  format);  }	  cInstanceCache.put(value,    format);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  FormatUtils.setPattern(values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  FormatUtils.setPattern(values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  FormatUtils.setPattern(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setPattern(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
235	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  cInstanceCache.put(format,  format);  }	  cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
237	[BUG]  [BUGGY]  Format  format  =  emptyFormat  +  1;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  emptyFormat  +  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  emptyFormat  +  1;	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    emptyFormat    +    1;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
238	[BUG]  [BUGGY]  Format  extends  Integer  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  1;  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  extends  Integer  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  extends  Integer  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    emptyFormat    +    1;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
239	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  2;  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  2;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  emptyFormat  +  2;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    emptyFormat    +    1;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
240	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
241	[BUG]  [BUGGY]  Format.copyCurrentStandard(values[i],  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.copyCurrentStandard(values[i],  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.copyCurrentStandard(values[i],  format);	  Format.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
242	[BUG]  [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =  cInstanceCache.get(format);	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(format);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
243	[BUG]  [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
244	[BUG]  [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValu  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValu  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValu	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
245	[BUG]  [BUGGY]  return  format.cloneTree(),  emptyFormat);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(),  emptyFormat);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(),  emptyFormat);	  return    format.cloneTree(),    locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
247	[BUG]  [BUGGY]  return  format!=  null?  DEFAULT  :  FORMAT;  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  DEFAULT  :  FORMAT;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  DEFAULT  :  FORMAT;	  return    format    ==    null?    FORMAT    :    DEFAULT;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
248	[BUG]  [BUGGY]  Format.setValue(mValues,  mRules[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  mRules[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  mRules[i]);	  Format.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
249	[BUG]  [BUGGY]  Format  <  Object>  format  =  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  format  =  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  i  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  format  =  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  i  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
250	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format  =  i  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format  =  i  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
251	[BUG]  [BUGGY]  Format  <  String,  String>  format  =  this.values.get(i);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  String>  format  =  this.values.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  String>  format  =  this.values.get(i);	  Format    <    String,    String>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
252	[BUG]  [BUGGY]  Format  <  String,  String>  format  =  values.get(mValues.length);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  String>  format  =  values.get(mValues.length);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  String>  format  =  values.get(mValues.length);	  Format    <    String,    String>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
253	[BUG]  [BUGGY]  return  format.newInstance(locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.newInstance(locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.newInstance(locale);	  return    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
254	[BUG]  [BUGGY]  return  format.newInstance(this,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.newInstance(this,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.newInstance(this,  locale);	  return    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
255	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(values[i],  format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(values[i],  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(values[i],  format);	  FormatUtils.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
256	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(1);  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(1);  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(1);  System.arraycopy(mValues,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    value.charAt(0);    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  value[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  value[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  value[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
259	[BUG]  [BUGGY]  return  format!=  null?  FORMAT  :  format;  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  FORMAT  :  format;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  FORMAT  :  format;	  return    format    ==    null?    FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
260	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(values,  mValues.length);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  new  FastDateFormat(values,  mValues.length);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  new  FastDateFormat(values,  mValues.length);	  Format    format    =    new    FastDateFormat(mValues,    values.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
261	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }	  Format    {    for(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
263	[BUG]  [BUGGY]  Format  format  =  this.format.init();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  this.format.init();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  this.format.init();	  Format    format    =    format.init();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
264	[BUG]  [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);	  Format    <    TimeZoneNameRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
265	[BUG]  [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
266	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(0);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(0);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(0);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
267	[BUG]  [BUGGY]  return  Format.getInstance(mValues,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(mValues,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(mValues,  locale);	  return    Format.getInstance(format,    locale);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
268	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
269	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
270	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
271	[BUG]  [BUGGY]  return  format.instance(),  locale,  timeZone);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(),  locale,  timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(),  locale,  timeZone);	  return    format.instance(),    locale);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  FormatUtils.setValue(values[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  FormatUtils.setValue(values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  FormatUtils.setValue(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setValue(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
273	[BUG]  [BUGGY]  Format  format  =  value.toArray(new  String[values.size()  ]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  value.toArray(new  String[values.size()  ]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  value.toArray(new  String[values.size()  ]);	  Format    format    =    mValues.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
274	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(format);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(format);	  Format    format    =    null;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
275	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(intValue);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(intValue);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(intValue);	  Format    format    =    null;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
276	[BUG]  [BUGGY]  Format  format  =  new  Format(format.getLocale());  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  new  Format(format.getLocale());  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  new  Format(format.getLocale());	  Format    format    =    null;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
277	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
278	[BUG]  [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(format,  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(format,  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =(FastDateFormat)cInstanceCache.get(format,  format);	  Format    cInstanceCache    =(FastDateFormat)cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
279	[BUG]  [BUGGY]  Format.setValue(mValues,  mPattern[i]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  mPattern[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  mPattern[i]);	  Format.setValue(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
280	[BUG]  [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  cInstanceCache);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  cInstanceCache);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  FormatUtils.copyCurrentStandard(mValues,  values[i],  cInstanceCache);	  Format    FormatUtils.copyCurrentStandard(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
281	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValues,  0,  format,  value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
282	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  System.arraycopy(mValue,  0,  format,  value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
283	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
284	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  mValues);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(emptyFormat,  mValues);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(emptyFormat,  mValues);	  cInstanceCache.put(format,    mValues);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
285	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  emptyFormat);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
286	[BUG]  [BUGGY]  return  format!=  null?  NUMBER  :  FORMAT;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  NUMBER  :  FORMAT;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  NUMBER  :  FORMAT;	  return    format    ==    null?    FORMAT    :    NUMBER;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
287	[BUG]  [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  cInstanceCache  =  cInstanceCache.get(emptyFormat);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  cInstanceCache  =  cInstanceCache.get(emptyFormat);	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
288	[BUG]  [BUGGY]  Format  <?>  format  =  values.get(mValues.length);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values.get(mValues.length);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values.get(mValues.length);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
289	[BUG]  [BUGGY]  return  format.instance(TimeZone.getDefault());  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(TimeZone.getDefault());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(TimeZone.getDefault());	  return    format.instance(locale);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
290	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }	  cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
291	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }	  cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
292	[BUG]  [BUGGY]  return  format!=  null?  INSTANCE_NO_COLON  :  format.init();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  INSTANCE_NO_COLON  :  format.init();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  INSTANCE_NO_COLON  :  format.init();	  return    format!=    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
293	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[i],  cInstanceCache);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValues,  values[i],  cInstanceCache);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValues,  values[i],  cInstanceCache);	  FormatUtils.copyCurrentStandard(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mStyle.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mStyle.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mStyle.size();  i++)  {  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mRules.size();  i++)  {  format  =  cInstanceCache.get(i);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i  +  1,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i  +  1,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(i  +  1,  format);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
297	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  mValue);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(emptyFormat,  mValue);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(emptyFormat,  mValue);	  cInstanceCache.put(format,    mValue);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
298	[BUG]  [BUGGY]  return  format  ==  null?  INSTANCE_NO_COLON  :  format.toLowerCase();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  INSTANCE_NO_COLON  :  format.toLowerCase();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  INSTANCE_NO_COLON  :  format.toLowerCase();	  return    format    ==    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
299	[BUG]  [BUGGY]  Format  <?>  format  =  i  +  3;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  i  +  3;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  i  +  3;	  Format    <?>    format    =    i    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
300	[BUG]  [BUGGY]  Format  <?>  format  =  i  +  2;  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  i  +  2;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  i  +  2;	  Format    <?>    format    =    i    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
301	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(values,  values[0]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(values,  values[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(values,  values[0]);	  FormatUtils.copyCurrentStandard(mValue,    values[0]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
303	[BUG]  [BUGGY]  Format  FormatUtils.copyCurrentStandard(values[i],  format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  FormatUtils.copyCurrentStandard(values[i],  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  FormatUtils.copyCurrentStandard(values[i],  format);	  Format    FormatUtils.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
304	[BUG]  [BUGGY]  return  format.cloneTree(this,  null);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(this,  null);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(this,  null);	  return    format.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
305	[BUG]  [BUGGY]  Format.setPattern(values[i]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setPattern(values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setPattern(values[i]);	  Format.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
306	[BUG]  [BUGGY]  Format.setPattern(mValues,  values[i]);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setPattern(mValues,  values[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setPattern(mValues,  values[i]);	  Format.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
307	[BUG]  [BUGGY]  return  Format.getInstance(emptyFormat,  format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(emptyFormat,  format);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(emptyFormat,  format);	  return    Format.getInstance(format,    format);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
308	[BUG]  [BUGGY]  return  Format.getInstance(format,  INSTANCE_NO_COLON);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  INSTANCE_NO_COLON);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  INSTANCE_NO_COLON);	  return    Format.getInstance(format,    format);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
309	[BUG]  [BUGGY]  return  Format.getInstance(format,  INSTANCE_COLON);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  INSTANCE_COLON);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  INSTANCE_COLON);	  return    Format.getInstance(format);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
310	[BUG]  [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValu  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValu  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValu	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
311	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
312	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  Format.init());  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  Format.init());  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  cInstanceCache.put(emptyFormat,  Format.init());  }	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
313	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
314	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  i++)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  i++)  {  format.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  mRules.size();  i++)  {  format.put(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
315	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format.put(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
316	[BUG]  [BUGGY]  return  format.cloneFallThrough();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneFallThrough();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneFallThrough();	  return    format.cloneTwin();    	non-compiled	[CE]  <identifier>  expected	107	None	replace
317	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
318	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
319	[BUG]  [BUGGY]  Format  <?>  format  =  values[i].getFormat();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  values[i].getFormat();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  values[i].getFormat();	  Format    <?>    format    =    values[i];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
320	[BUG]  [BUGGY]  Format  <?>  format  =  this.values[i];  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  this.values[i];  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  this.values[i];	  Format    <?>    format    =    values[i];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
321	[BUG]  [BUGGY]  FormatUtils.setValue(mValues[i],  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues[i],  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues[i],  format);	  FormatUtils.setValue(values[i]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
322	[BUG]  [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  mLocale);	  Format    <    TimeZoneNameRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
323	[BUG]  [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  TimeZoneNameRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  mDaylight);	  Format    <    TimeZoneNameRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
324	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  FormatUtils.setValue(values[i],  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  FormatUtils.setValue(values[i],  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  FormatUtils.setValue(values[i],  format);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setValue(values[i]);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
325	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }	  Format    {    for(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
326	[BUG]  [BUGGY]  FormatUtils.setValue(mValues[0],  values[1]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues[0],  values[1]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues[0],  values[1]);	  FormatUtils.setValue(values[i]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
327	[BUG]  [BUGGY]  Format.setValue(mValues[0],  mValues[i]);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues[0],  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues[0],  mValues[i]);	  Format.setValue(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
328	[BUG]  [BUGGY]  return  Format.getInstance(format,  this.rules);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  this.rules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  this.rules);	  return    Format.getInstance(format,    mRules);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
329	[BUG]  [BUGGY]  return  format.toArray(new  String[format.size()  ],  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.toArray(new  String[format.size()  ],  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.toArray(new  String[format.size()  ],  locale);	  return    format.toArray(new    String[format.size()    ]);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
330	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    this.values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
331	[BUG]  [BUGGY]  return  format.cloneTree(),  buffer);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(),  buffer);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(),  buffer);	  return    format.cloneTree(),    locale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
332	[BUG]  [BUGGY]  return  Format.getInstance(format,  mValues);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  Format.getInstance(format,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  Format.getInstance(format,  mValues);	  return    Format.getInstance(format,    format);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
333	[BUG]  [BUGGY]  if(value  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(value  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(value  ==  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    value.charAt(0);    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
334	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValues,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    value.charAt(0);    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
335	[BUG]  [BUGGY]  return  format.toString();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.toString();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.toString();	  return    format.toArray();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
336	[BUG]  [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
337	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format.substring(i  +  1);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format.substring(i  +  1);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format.substring(i  +  1);  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
338	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format.next()  +  1;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format.next()  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  format  =  format.next()  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
339	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
340	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(emptyFormat);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(emptyFormat);	  cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
342	[BUG]  [BUGGY]  Format  format  =  mValues.toArray(new  String[values.size()  +  1]);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  mValues.toArray(new  String[values.size()  +  1]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  mValues.toArray(new  String[values.size()  +  1]);	  Format    format    =    mValues.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
343	[BUG]  [BUGGY]  Format.setValue(mValues,  values[i],  mStandard);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues,  values[i],  mStandard);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues,  values[i],  mStandard);	  Format.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
344	[BUG]  [BUGGY]  return  format.getInstance(this,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.getInstance(this,  locale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.getInstance(this,  locale);	  return    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
345	[BUG]  [BUGGY]  Format  <?>  format  =(values[i]  ==  null)?  values[i]  :  null;  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =(values[i]  ==  null)?  values[i]  :  null;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =(values[i]  ==  null)?  values[i]  :  null;	  Format    <?>    format    =    values[i];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
346	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(format);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
347	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(i);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(i);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(i);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(format);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
348	[BUG]  [BUGGY]  return  format  ==  null?  null  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  null  :  format.newInstance();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  null  :  format.newInstance();	  return    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
349	[BUG]  [BUGGY]  return  format!=  null?  FORMAT  :  NUMBER;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  FORMAT  :  NUMBER;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  FORMAT  :  NUMBER;	  return    format    ==    null?    FORMAT    :    NUMBER;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
350	[BUG]  [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }	  if(format!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
351	[BUG]  [BUGGY]  FormatUtils.setPattern(mValues[0],  mValues[1]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setPattern(mValues[0],  mValues[1]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setPattern(mValues[0],  mValues[1]);	  FormatUtils.setPattern(mValues[i]);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
352	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValue,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValue,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  value.charAt(0);  System.arraycopy(mValue,  0,  format,  value);  }	  if(value!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValue,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
353	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  cInstanceCache.put(format,  format);  }	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
354	[BUG]  [BUGGY]  FormatUtils.copyCurrentStandard(mValue,  mValues[0]);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.copyCurrentStandard(mValue,  mValues[0]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.copyCurrentStandard(mValue,  mValues[0]);	  FormatUtils.copyCurrentStandard(mValue,    values[0]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
355	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  mRules.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
356	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
358	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }	  for(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
359	[BUG]  [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format  ==  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format  ==  null)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  char  mValue  =  values[i];  if(mValue!=  null)  {  format  =  new  String(mValue);  }  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
360	[BUG]  [BUGGY]  return  format  ==  null?  null  :  format.toString();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  null  :  format.toString();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  null  :  format.toString();	  return    format    ==    null?    null    :    format.clone();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
361	[BUG]  [BUGGY]  cInstanceCache.put(new  Instance(format,  format));  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(new  Instance(format,  format));  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(new  Instance(format,  format));	  cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  char  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
363	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
364	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(format,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(format,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(format,  format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
365	[BUG]  [BUGGY]  Format  <?>  format  =  format.intValue()  +  1;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  format.intValue()  +  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  format.intValue()  +  1;	  Format    <?>    format    =    i    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
366	[BUG]  [BUGGY]  Format  <?>  format  =  format.intValue  +  1;  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  format.intValue  +  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  format.intValue  +  1;	  Format    <?>    format    =    i    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
367	[BUG]  [BUGGY]  return  format.cloneTree(this,  emptyFormat);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.cloneTree(this,  emptyFormat);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.cloneTree(this,  emptyFormat);	  return    format.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
368	[BUG]  [BUGGY]  FormatUtils.setValue(mValues,  mRules[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  FormatUtils.setValue(mValues,  mRules[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	FormatUtils.setValue(mValues,  mRules[i]);	  FormatUtils.setValue(mValues,    values[i]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
369	[BUG]  [BUGGY]  Format  format  =  format.get();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  format.get();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  format.get();	  Format    format    =    format.init();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
370	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mValues.length);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mValues.length);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  new  FastDateFormat(mValues,  mValues.length);	  Format    format    =    new    FastDateFormat(mValues,    values.length);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
371	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format  =  emptyFormat  +  1;  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format  =  emptyFormat  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  values.length  +  1;  ++i)  {  format  =  emptyFormat  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    emptyFormat    +    1;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
372	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  -  1;  ++i)  {  format  =  emptyFormat  +  1;  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  values.length  -  1;  ++i)  {  format  =  emptyFormat  +  1;  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  values.length  -  1;  ++i)  {  format  =  emptyFormat  +  1;  }	  Format    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format    =    emptyFormat    +    1;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
373	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
374	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  aughtExceptionHandler.handleMissingName(pattern,  timeZone,  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	aughtExceptionHandler.handleMissingName(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
375	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  timeZone,  locale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
376	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale).throwException( " ");  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale).throwException( " ");  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale).throwException( " ");	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
377	[BUG]  [BUGGY]  return  format!=  null?  format  :  INSTANCE_NO_COLON;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  format  :  INSTANCE_NO_COLON;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  format  :  INSTANCE_NO_COLON;	  return    format!=    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
378	[BUG]  [BUGGY]  return  format!=  null?  format  :  format;  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format!=  null?  format  :  format;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format!=  null?  format  :  format;	  return    format!=    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
379	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  FormatUtils.setPattern(mValues[i]);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  FormatUtils.setPattern(mValues[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mRules.size();  ++i)  {  FormatUtils.setPattern(mValues[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    FormatUtils.setPattern(mValues[i]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
380	[BUG]  [BUGGY]  return  format  ==  null?  format  :  INSTANCE_NO_COLON;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  format  :  INSTANCE_NO_COLON;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  format  :  INSTANCE_NO_COLON;	  return    format    ==    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
381	[BUG]  [BUGGY]  return  format  ==  null?  format  :  format;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  format  :  format;  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  format  :  format;	  return    format    ==    null?    INSTANCE_NO_COLON    :    format;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
382	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(instance);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =  cInstanceCache.get(instance);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =  cInstanceCache.get(instance);	  Format    format    =    null;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
383	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  mValues.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
384	[BUG]  [BUGGY]  return  format  ==  null?  FORMAT  :  format.toString();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format  ==  null?  FORMAT  :  format.toString();  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format  ==  null?  FORMAT  :  format.toString();	  return    format    ==    null?    FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
385	[BUG]  [BUGGY]  Format.setValue(mValues);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.setValue(mValues);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.setValue(mValues);	  Format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
386	[BUG]  [BUGGY]  cInstanceCache.put(pattern,  format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  cInstanceCache.put(pattern,  format);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	cInstanceCache.put(pattern,  format);	  cInstanceCache.put(format,    mValue);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
387	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(mValues);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(mValues);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Set  <  String>  values  =  Sets.newHashSet(mValues);	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
388	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  values.get(i);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  String,  Object>  format  =  values.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  String,  Object>  format  =  values.get(i);	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
389	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Set  <  String>  values  =  Sets.newHashSet();  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Set  <  String>  values  =  Sets.newHashSet();	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
390	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(values);  [CE]  <identifier>  expected  [FE]                              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(values);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Set  <  String>  values  =  Sets.newHashSet(values);	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue!=    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
391	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	int  i  =  0;  i  <  values.size();  i++)  {  char  mValue  =  mValues[i];  System.arraycopy(mValues,  0,  format,  value);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    char    mValue    =    values[i];    System.arraycopy(mValues,    0,    format,    value);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
392	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(index,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(index,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(index,  emptyFormat);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(format,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(format,  emptyFormat);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
394	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  format.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  format.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  format.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
395	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValues,  values[i]);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValues,  values[i]);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  format  =  FormatUtils.copyCurrentStandard(mValues,  values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    format    =    FormatUtils.copyCurrentStandard(mValue,    values[i]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
396	[BUG]  [BUGGY]  Format  <?>  format  =  this.mValues.get(i);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  this.mValues.get(i);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  this.mValues.get(i);	  Format    <?>    format    =    values.get(i);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
397	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(i);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(i);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(i);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
398	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  (FastDateFormat)cInstanceCache.get(i);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  (FastDateFormat)cInstanceCache.get(i);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  (FastDateFormat)cInstanceCache.get(i);  }	  for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(i);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
399	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(emptyFormat,  format);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
400	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  cInstanceCache.put(i,  emptyFormat);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
401	[BUG]  [BUGGY]  Format  <?>  format  =  mValues.length  +  1;  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <?>  format  =  mValues.length  +  1;  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <?>  format  =  mValues.length  +  1;	  Format    <?>    format    =    values.length    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
402	[BUG]  [BUGGY]  Format.copyCurrentStandard(values,  mValues[i]);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format.copyCurrentStandard(values,  mValues[i]);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format.copyCurrentStandard(values,  mValues[i]);	  Format.copyCurrentStandard(mValue,    values[i]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
403	[BUG]  [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
404	[BUG]  [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	if(format!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  String  mValue  =  values[i];  if(mValue  ==  null)  {  format  =  new  String(mValue);  }	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
405	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  For(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	For(int  i  =  0;  i  <  this.cInstanceCache.size();  i++)  {  this.cInstanceCache.put(i,  format);  }	  For(int    i    =    0;    i    <    mRules.size();    i++)    {    this.cInstanceCache.put(i,    emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
406	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(emptyFormat);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(emptyFormat);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
407	[BUG]  [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(emptyFormat);  }  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(emptyFormat);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  <  Object>  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  cInstanceCache.get(emptyFormat);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
408	[BUG]  [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(null);  }  [CE]  <identifier>  expected  [FE]                            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(null);  }  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  {  for(int  i  =  0;  i  <  cInstanceCache.size();  i++)  {  format  =  format.get(null);  }	  Format    {    for(int    i    =    0;    i    <    cInstanceCache.size();    i++)    {    format    =    cInstanceCache.get(emptyFormat);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
409	[BUG]  [BUGGY]  return  format.instance(),  locale,  null);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  return  format.instance(),  locale,  null);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	return  format.instance(),  locale,  null);	  return    format.instance(),    locale);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
410	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  Instance(pattern,  timeZone,  locale));  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  Instance(pattern,  timeZone,  locale));  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(new  Instance(pattern,  timeZone,  locale));	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
411	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat);	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
412	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(mValues);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(mValues);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(mValues);	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
413	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  Instance(pattern,  timeZone,  locale),  mLocale);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  Instance(pattern,  timeZone,  locale),  mLocale);  [BUGGY]      return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(new  Instance(pattern,  timeZone,  locale),  mLocale);	  if(format    ==    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    String    mValue    =    values[i];    if(mValue    ==    null)    {    format    =    new    String(mValue);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
