bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length  *  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length  *  1);	  int    len    =    parseToken(mPattern,    length    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
2	[BUG]  [BUGGY]  String  len  =  parseToken(mPattern,  mMinLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  len  =  parseToken(mPattern,  mMinLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  len  =  parseToken(mPattern,  mMinLengthEstimate);	  char    len    =    parseToken(mPattern,    mMinLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
3	[BUG]  [BUGGY]  String  len  =  parseToken(mPattern,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  len  =  parseToken(mPattern,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  len  =  parseToken(mPattern,  mMaxLengthEstimate);	  char    len    =    parseToken(mPattern,    mMinLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
4	[BUG]  [BUGGY]  Character  len  =  parseToken(mPattern,  mMinLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  Character  len  =  parseToken(mPattern,  mMinLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	Character  len  =  parseToken(mPattern,  mMinLengthEstimate);	  char    len    =    parseToken(mPattern,    mMinLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
5	[BUG]  [BUGGY]  String  len  =  parseToken(mPattern,  mStandard);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  len  =  parseToken(mPattern,  mStandard);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  len  =  parseToken(mPattern,  mStandard);	  char    len    =    parseToken(mPattern,    mMinLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
6	[BUG]  [BUGGY]  String  token  =  parseToken(mStandard,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mStandard,  mPattern);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mStandard,  mPattern);	  String    token    =    parseToken(mPattern,    mStandard);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
7	[BUG]  [BUGGY]  String[]  shortMonths  =  symbols.getFullMonths();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  shortMonths  =  symbols.getFullMonths();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  shortMonths  =  symbols.getFullMonths();	  String[]    shortMonths    =    symbols.getShortMonths();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
8	[BUG]  [BUGGY]  String[]  shortMonths  =  symbols.getLongMonths();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  shortMonths  =  symbols.getLongMonths();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  shortMonths  =  symbols.getLongMonths();	  String[]    shortMonths    =    symbols.getShortMonths();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
9	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length  -  1,  AmPmStrings.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length  -  1,  AmPmStrings.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length  -  1,  AmPmStrings.length);	  int    len    =    parseToken(mPattern,    length    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
10	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length  -  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length  -  2);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length  -  2);	  int    len    =    parseToken(mPattern,    length    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
11	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length  -  1,  amPmStrings.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length  -  1,  amPmStrings.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length  -  1,  amPmStrings.length);	  int    len    =    parseToken(mPattern,    length    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
12	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mMinimumLengthEstimate,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mMinimumLengthEstimate,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mMinimumLengthEstimate,  length);	  int    len    =    parseToken(mPattern,    mMinimumLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
13	[BUG]  [BUGGY]  char  len  =  parseToken(mPattern,  mMinimumLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  char  len  =  parseToken(mPattern,  mMinimumLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	char  len  =  parseToken(mPattern,  mMinimumLengthEstimate);	  int    len    =    parseToken(mPattern,    mMinimumLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
14	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[LONG  +  1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[LONG  +  1];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[LONG  +  1];	  int[]    indexRef    =    new    int[LONG];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
15	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[LONG  -  1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[LONG  -  1];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[LONG  -  1];	  int[]    indexRef    =    new    int[LONG];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
16	[BUG]  [BUGGY]  Character  len  =  parseToken(mPattern,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  Character  len  =  parseToken(mPattern,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	Character  len  =  parseToken(mPattern,  mMaxLengthEstimate);	  char    len    =    parseToken(mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
17	[BUG]  [BUGGY]  String  len  =  parseToken(mPattern,  mmaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  len  =  parseToken(mPattern,  mmaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  len  =  parseToken(mPattern,  mmaxLengthEstimate);	  char    len    =    parseToken(mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
18	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  mMinimumLengthEstimate,  length);	  String    token    =    parseToken(mPattern,    mMinimumLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
19	[BUG]  [BUGGY]  String[]  shortMonths  =  symbols.getWeekMonths();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  shortMonths  =  symbols.getWeekMonths();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  shortMonths  =  symbols.getWeekMonths();	  String[]    shortMonths    =    symbols.getHourMonths();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
20	[BUG]  [BUGGY]  int  len  =  mStandard.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  mStandard.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  mStandard.length();	  int    len    =    mPattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
21	[BUG]  [BUGGY]  int  len  =  mStrings.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  mStrings.length()  -  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  mStrings.length()  -  1;	  int    len    =    mPattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
22	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  /  2];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  /  2];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  /  2];	  int[]    indexRef    =    new    int[length    *    2];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
23	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  *  2  +  1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  *  2  +  1];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  *  2  +  1];	  int[]    indexRef    =    new    int[length    *    2];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
24	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  *  4];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  *  4];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  *  4];	  int[]    indexRef    =    new    int[length    *    2];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
25	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[4];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[4];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[4];	  int[]    indexRef    =    new    int[3];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
26	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  amPmStrings,  length);	  int    len    =    parseToken(mPattern,    amPmStrings);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
27	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  mPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  mPattern);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  mPattern);	  int    len    =    parseToken(mPattern,    mStandard);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
28	[BUG]  [BUGGY]  int  len  =  parseToken(mValue,  mStandard);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mValue,  mStandard);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mValue,  mStandard);	  int    len    =    parseToken(mPattern,    mStandard);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
29	[BUG]  [BUGGY]  int  len  =  this.mPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  this.mPattern.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  this.mPattern.length();	  int    len    =    mPattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
30	[BUG]  [BUGGY]  t  len  =  mPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  t  len  =  mPattern.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	t  len  =  mPattern.length();	  int    len    =    mPattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
31	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinuteLengthEstimate,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  mMinuteLengthEstimate,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  mMinuteLengthEstimate,  length);	  String    token    =    parseToken(mPattern,    mMinuteLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
32	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  amPmStrings,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  amPmStrings,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  amPmStrings,  length);	  String    token    =    parseToken(mPattern,    AmPmStrings);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
33	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.EMPTY);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.EMPTY);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  AmPmStrings.EMPTY);	  String    token    =    parseToken(mPattern,    AmPmStrings);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
34	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  ERAs);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  ERAs);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  ERAs);	  String    token    =    parseToken(mPattern,    AmPmStrings);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
35	[BUG]  [BUGGY]  int  length  =  mStandards.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mStandards.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mStandards.length();	  int    length    =    mStandard.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
36	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getAstRoots()  +  length;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getAstRoots()  +  length;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getAstRoots()  +  length;	  String[]    mValues    =    symbols.getAstRoots();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
37	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getAstRootes();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getAstRootes();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getAstRootes();	  String[]    mValues    =    symbols.getAstRoots();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
38	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length  -  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  amPmStrings.length  -  1);	  int    len    =    parseToken(mPattern,    amPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
39	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length  -  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length  -  2);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  amPmStrings.length  -  2);	  int    len    =    parseToken(mPattern,    amPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
40	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length  +  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  amPmStrings.length  +  1);	  int    len    =    parseToken(mPattern,    amPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
41	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getMethods();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getMethods();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getMethods();	  String[]    mValues    =    symbols.getMean();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
42	[BUG]  [BUGGY]  int  length  =  mValues.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mValues.length()  +  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mValues.length()  +  1;	  int    length    =    mValues.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
43	[BUG]  [BUGGY]  int  length  =  mValues.length()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mValues.length()  +  2;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mValues.length()  +  2;	  int    length    =    mValues.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
44	[BUG]  [BUGGY]  int  length  =  mValues.length()  *  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mValues.length()  *  2;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mValues.length()  *  2;	  int    length    =    mValues.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
45	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  length);	  int    len    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
46	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  mMaxLengthEstimate,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  mMaxLengthEstimate,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  mMaxLengthEstimate,  length);	  int    len    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
47	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  mMinimumLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  mMinimumLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  mMinimumLengthEstimate);	  int    len    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
48	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mMinuteLengthEstimate,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mMinuteLengthEstimate,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mMinuteLengthEstimate,  length);	  int    len    =    parseToken(mPattern,    mMinuteLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
49	[BUG]  [BUGGY]  char  len  =  parseToken(mPattern,  mMinuteLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  char  len  =  parseToken(mPattern,  mMinuteLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	char  len  =  parseToken(mPattern,  mMinuteLengthEstimate);	  int    len    =    parseToken(mPattern,    mMinuteLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
50	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getMasks();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getMasks();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getMasks();	  String[]    mValues    =    symbols.getVars();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
51	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  mPattern,  mMinLength);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  mPattern,  mMinLength);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  mPattern,  mMinLength);	  int    len    =    parseToken(mPattern,    mMinLength);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
52	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  amPmStrings.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  amPmStrings.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  amPmStrings.length);	  String    token    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
53	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.MAX_VALUE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.MAX_VALUE);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  AmPmStrings.MAX_VALUE);	  String    token    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
54	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.EMPTY_STRING);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.EMPTY_STRING);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  AmPmStrings.EMPTY_STRING);	  String    token    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
55	[BUG]  [BUGGY]  String[]  shortMonths  =  symbols.getLongWeekdays();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  shortMonths  =  symbols.getLongWeekdays();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  shortMonths  =  symbols.getLongWeekdays();	  String[]    shortMonths    =    symbols.getShortWeekdays();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
56	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight,  AmPmStrings);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  mDaylight,  AmPmStrings);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  mDaylight,  AmPmStrings);	  String    token    =    parseToken(mPattern,    mDaylight);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
57	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getMutators();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getMutators();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getMutators();	  String[]    mValues    =    symbols.getMutator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
58	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getVariants();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getVariants();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getVariants();	  String[]    mValues    =    symbols.getArguments();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
59	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  -  3];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  -  3];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  -  3];	  int[]    indexRef    =    new    int[length    -    1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
60	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  *  1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  *  1];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  *  1];	  int[]    indexRef    =    new    int[length    -    1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
61	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getVisibleValues()  +  length;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getVisibleValues()  +  length;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getVisibleValues()  +  length;	  String[]    mValues    =    symbols.getVisibleValues();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
62	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mStandard,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mStandard,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mStandard,  mMaxLengthEstimate);	  int    len    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
63	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  length,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  length,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  length,  mMaxLengthEstimate);	  int    len    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
64	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  mDaylight,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  mDaylight,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  mDaylight,  mMaxLengthEstimate);	  int    len    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
65	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.MAX_VALUE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.MAX_VALUE);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length,  AmPmStrings.MAX_VALUE);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
66	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  ERAs,  length,  AmPmStrings.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  ERAs,  length,  AmPmStrings.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  ERAs,  length,  AmPmStrings.length);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
67	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.length  -  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length,  AmPmStrings.length  -  1);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
68	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.MILLIS_PER_SIZE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.MILLIS_PER_SIZE);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length,  AmPmStrings.MILLIS_PER_SIZE);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
69	[BUG]  [BUGGY]  t  length  =  mStandard.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  t  length  =  mStandard.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	t  length  =  mStandard.length();	  int    length    =    mStandard.length()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
70	[BUG]  [BUGGY]  Integer  length  =  mStandard.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  Integer  length  =  mStandard.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	Integer  length  =  mStandard.length();	  int    length    =    mStandard.length()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
71	[BUG]  [BUGGY]  int  length  =  amPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  amPattern.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  amPattern.length();	  int    length    =    mPattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
72	[BUG]  [BUGGY]  int  length  =  this.symbols.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  this.symbols.length()  -  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  this.symbols.length()  -  1;	  int    length    =    this.symbols.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
73	[BUG]  [BUGGY]  int  length  =  this.symbols.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  this.symbols.length()  +  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  this.symbols.length()  +  1;	  int    length    =    this.symbols.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
74	[BUG]  [BUGGY]  int  length  =  this.mPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  this.mPattern.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  this.mPattern.length();	  int    length    =    mPattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
75	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.length  -  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  AmPmStrings.length  -  1);	  int    len    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
76	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.MAX_VALUE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.MAX_VALUE);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  AmPmStrings.MAX_VALUE);	  int    len    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
77	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.EMPTY);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.EMPTY);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  AmPmStrings.EMPTY);	  int    len    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
78	[BUG]  [BUGGY]  int  length  =  AmPmStrings.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  AmPmStrings.length()  +  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  AmPmStrings.length()  +  1;	  int    length    =    AmPmStrings.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
79	[BUG]  [BUGGY]  int  length  =  AmPmStrings.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  AmPmStrings.length()  -  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  AmPmStrings.length()  -  1;	  int    length    =    AmPmStrings.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
80	[BUG]  [BUGGY]  int  length  =  amPmStrings.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  amPmStrings.length()  +  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  amPmStrings.length()  +  1;	  int    length    =    amPmStrings.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
81	[BUG]  [BUGGY]  int  length  =  amPmStrings.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  amPmStrings.length()  -  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  amPmStrings.length()  -  1;	  int    length    =    amPmStrings.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
82	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getAs();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getAs();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getAs();	  String[]    mValues    =    symbols.getValues();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
83	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  +  2];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  +  2];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  +  2];	  int[]    indexRef    =    new    int[length    +    1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
84	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  +  3];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  +  3];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  +  3];	  int[]    indexRef    =    new    int[length    +    1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
85	[BUG]  [BUGGY]  int  len  =  mPattern.length()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  mPattern.length()  +  2;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  mPattern.length()  +  2;	  int    len    =    mPattern.length()    +    length;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
86	[BUG]  [BUGGY]  t  length  =  mPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  t  length  =  mPattern.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	t  length  =  mPattern.length();	  int    length    =    mPattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
87	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  mMaxLength);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  mMaxLength);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  mMaxLength);	  int    len    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
88	[BUG]  [BUGGY]  Integer  len  =  mPattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  Integer  len  =  mPattern.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	Integer  len  =  mPattern.length();	  int    len    =    mPattern.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
89	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mDaylight.length);	  int    len    =    parseToken(mPattern,    amPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
90	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mLocale.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mLocale.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mLocale.length);	  int    len    =    parseToken(mPattern,    amPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
91	[BUG]  [BUGGY]  int  length  =  mPmStrings.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mPmStrings.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mPmStrings.length();	  int    length    =    amPmStrings.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
92	[BUG]  [BUGGY]  String[]  shortMonths  =  symbols.getShortYearMonths();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  shortMonths  =  symbols.getShortYearMonths();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  shortMonths  =  symbols.getShortYearMonths();	  String[]    shortMonths    =    symbols.getShortWeekdays();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
93	[BUG]  [BUGGY]  int  length  =  mStrings.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mStrings.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mStrings.length();	  int    length    =    mPattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
94	[BUG]  [BUGGY]  int  len  =  mStrings.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  mStrings.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  mStrings.length();	  int    len    =    mPattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
95	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.EMPTY_LIST);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.EMPTY_LIST);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  AmPmStrings.EMPTY_LIST);	  int    len    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
96	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.length  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  AmPmStrings.length  +  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  AmPmStrings.length  +  1);	  int    len    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
97	[BUG]  [BUGGY]  char  len  =  parseToken(mPattern,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  char  len  =  parseToken(mPattern,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	char  len  =  parseToken(mPattern,  length);	  char    len    =    parseToken(mPattern,    mMinLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
98	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getVariances();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getVariances();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getVariances();	  String[]    mValues    =    symbols.getAverages();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
99	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getAsciiRoots();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getAsciiRoots();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getAsciiRoots();	  String[]    mValues    =    symbols.getAstRoots();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
100	[BUG]  [BUGGY]  int  length  =  AmPmStrings.length;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  AmPmStrings.length;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  AmPmStrings.length;	  int    length    =    AmPmStrings.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
101	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mMinimumLengthEstimate  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mMinimumLengthEstimate  +  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mMinimumLengthEstimate  +  length);	  int    len    =    parseToken(mPattern,    mMinimumLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
102	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mLocale);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mLocale);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mLocale);	  int    len    =    parseToken(mPattern,    mDaylight);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
103	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[LONG  +  length];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[LONG  +  length];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[LONG  +  length];	  int[]    indexRef    =    new    int[LONG];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
104	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  ERAs,  AmPmStrings.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  ERAs,  AmPmStrings.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  ERAs,  AmPmStrings.length);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
105	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  ERAs,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  ERAs,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  ERAs,  length);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
106	[BUG]  [BUGGY]  Int  length  =  mStandard.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  Int  length  =  mStandard.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	Int  length  =  mStandard.length();	  int    length    =    mStandard.length()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
107	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getAverageArguments();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getAverageArguments();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getAverageArguments();	  String[]    mValues    =    symbols.getArguments();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
108	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate  +  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  mMinimumLengthEstimate  +  1);	  String    token    =    parseToken(mPattern,    mMinimumLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
109	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate  +  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  mMinimumLengthEstimate  +  length);	  String    token    =    parseToken(mPattern,    mMinimumLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
110	[BUG]  [BUGGY]  String[]  shortMonths  =  symbols.getShortHourMonths();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  shortMonths  =  symbols.getShortHourMonths();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  shortMonths  =  symbols.getShortHourMonths();	  String[]    shortMonths    =    symbols.getHourMonths();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
111	[BUG]  [BUGGY]  int  len  =  parseToken(mStandard,  mDaylight,  mPattern,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mStandard,  mDaylight,  mPattern,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mStandard,  mDaylight,  mPattern,  mMaxLengthEstimate);	  int    len    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
112	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.FIELD_NAME);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.FIELD_NAME);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  AmPmStrings.FIELD_NAME);	  String    token    =    parseToken(mPattern,    AmPmStrings);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
113	[BUG]  [BUGGY]  int  length  =  mSymbols.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mSymbols.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mSymbols.length();	  int    length    =    this.symbols.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
114	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getMillis();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getMillis();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getMillis();	  String[]    mValues    =    symbols.getValues();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
115	[BUG]  [BUGGY]  char  len  =  parseToken(mPattern,  mMinLength);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  char  len  =  parseToken(mPattern,  mMinLength);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	char  len  =  parseToken(mPattern,  mMinLength);	  int    len    =    parseToken(mPattern,    mMinLength);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
116	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight  -  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mDaylight  -  1);	  int    len    =    parseToken(mPattern,    length    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
117	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight.length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight.length  -  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mDaylight.length  -  1);	  int    len    =    parseToken(mPattern,    length    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
118	[BUG]  [BUGGY]  int  length  =  mMStandard.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mMStandard.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mMStandard.length();	  int    length    =    mStandard.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
119	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getNullValues();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getNullValues();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getNullValues();	  String[]    mValues    =    symbols.getVisibleValues();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
120	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  mDaylight  +  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  mDaylight  +  1);	  int    len    =    parseToken(mPattern,    length    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
121	[BUG]  [BUGGY]  String[]  shortMonths  =  symbols.getShortMsg();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  shortMonths  =  symbols.getShortMsg();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  shortMonths  =  symbols.getShortMsg();	  String[]    shortMonths    =    symbols.getShortWeekdays();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
122	[BUG]  [BUGGY]  char  len  =  parseToken(mPattern,  mDaylight);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  char  len  =  parseToken(mPattern,  mDaylight);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	char  len  =  parseToken(mPattern,  mDaylight);	  int    len    =    parseToken(mPattern,    mDaylight);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
123	[BUG]  [BUGGY]  String  len  =  parseToken(mPattern,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  len  =  parseToken(mPattern,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  len  =  parseToken(mPattern,  length);	  char    len    =    parseToken(mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
124	[BUG]  [BUGGY]  char  len  =  parseToken(mPattern,  mStandard);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  char  len  =  parseToken(mPattern,  mStandard);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	char  len  =  parseToken(mPattern,  mStandard);	  int    len    =    parseToken(mPattern,    mStandard);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
125	[BUG]  [BUGGY]  int  len  =  length.length()  +  mPattern;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  length.length()  +  mPattern;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  length.length()  +  mPattern;	  int    len    =    mPattern.length()    +    length;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
126	[BUG]  [BUGGY]  int  length  =  this.mValues.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  this.mValues.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  this.mValues.length();	  int    length    =    mPattern.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
127	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getMeanValues();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getMeanValues();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getMeanValues();	  String[]    mValues    =    symbols.getVisibleValues();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
128	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getMonth();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getMonth();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getMonth();	  String[]    mValues    =    symbols.getMean();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
129	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate,  AmPmStrings.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  mMinimumLengthEstimate,  AmPmStrings.length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  mMinimumLengthEstimate,  AmPmStrings.length);	  String    token    =    parseToken(mPattern,    mMinimumLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
130	[BUG]  [BUGGY]  int[]  indexRef  =  new  int[length  /  1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int[]  indexRef  =  new  int[length  /  1];  [BUGGY]        for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int[]  indexRef  =  new  int[length  /  1];	  int[]    indexRef    =    new    int[length    -    1];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
131	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  this.mDaylight);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  this.mDaylight);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  this.mDaylight);	  String    token    =    parseToken(mPattern,    mDaylight);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
132	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getDeclaredValues();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getDeclaredValues();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getDeclaredValues();	  String[]    mValues    =    symbols.getVariables();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
133	[BUG]  [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.NUMBER);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  token  =  parseToken(mPattern,  AmPmStrings.NUMBER);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  token  =  parseToken(mPattern,  AmPmStrings.NUMBER);	  String    token    =    parseToken(mPattern,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
134	[BUG]  [BUGGY]  int  length  =  AmPmStrings.length  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  AmPmStrings.length  -  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  AmPmStrings.length  -  1;	  int    length    =    AmPmStrings.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
135	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getAssignedValues();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getAssignedValues();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getAssignedValues();	  String[]    mValues    =    symbols.getVars();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
136	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length,  mMaxLengthEstimate);	  int    len    =    parseToken(mStandard,    mPattern,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
137	[BUG]  [BUGGY]  String[]  mValues  =  symbols.getMask();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String[]  mValues  =  symbols.getMask();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String[]  mValues  =  symbols.getMask();	  String[]    mValues    =    symbols.getAstRoots();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
138	[BUG]  [BUGGY]  int  length  =  this.mStandard.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  this.mStandard.length();  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  this.mStandard.length();	  int    length    =    mStandard.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
139	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length,  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  amPmStrings.length,  length);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  amPmStrings.length,  length);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
140	[BUG]  [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.length  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mPattern,  length,  AmPmStrings.length  +  1);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mPattern,  length,  AmPmStrings.length  +  1);	  int    len    =    parseToken(mPattern,    length,    AmPmStrings.length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
141	[BUG]  [BUGGY]  String  len  =  parseToken(mPattern,  mLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  String  len  =  parseToken(mPattern,  mLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	String  len  =  parseToken(mPattern,  mLengthEstimate);	  char    len    =    parseToken(mPattern,    mMinLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
142	[BUG]  [BUGGY]  char  len  =  parseToken(mPattern,  amPmStrings);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  char  len  =  parseToken(mPattern,  amPmStrings);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	char  len  =  parseToken(mPattern,  amPmStrings);	  int    len    =    parseToken(mPattern,    amPmStrings);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
143	[BUG]  [BUGGY]  int  len  =  parseToken(mValue,  mMaxLengthEstimate);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  len  =  parseToken(mValue,  mMaxLengthEstimate);  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  len  =  parseToken(mValue,  mMaxLengthEstimate);	  int    len    =    parseToken(mStandard,    mMaxLengthEstimate);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
144	[BUG]  [BUGGY]  int  length  =  mValues.length  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mValues.length  -  1;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mValues.length  -  1;	  int    length    =    mValues.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
145	[BUG]  [BUGGY]  int  length  =  mValues.length;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  SerializationException      [CONTEXT]      List  rules  =  new  ArrayList();  String[]  ERAs  =  symbols.getEras();  String[]  months  =  symbols.getMonths();  String[]  shortMonths  =  symbols.getShortMonths();  String[]  weekdays  =  symbols.getWeekdays();  String[]  shortWeekdays  =  symbols.getShortWeekdays();  String[]  AmPmStrings  =  symbols.getAmPmStrings();  int  length  =  mPattern.length();      [BUGGY]  int  length  =  mValues.length;  [BUGGY]      int[]  indexRef  =  new  int[1];  for  (int  i  =  0;  i  <  length;  i++)  {  indexRef[0]  =  i;  String  token  =  parseToken(mPattern,  indexRef);  i  =  indexRef[0];  int  tokenLen  =  token.length();  if  (tokenLen  ==  0)  {  break;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	int  length  =  mValues.length;	  int    length    =    mValues.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
