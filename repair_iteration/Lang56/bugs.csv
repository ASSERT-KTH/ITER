bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); [FE] SerializationException [CONTEXT] rule = new TextField(Calendar.MONTH, months); } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { rule = TwoDigitMonthField.INSTANCE; } else { rule = UnpaddedMonthField.INSTANCE; } break; case 'd': // day in month (number) [BUGGY] rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); [BUGGY] break; case 'h': // hour in am/pm (number, 1..12) rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen)); break; case 'H': // hour in day (number, 0..23) rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen); break; case 'm': // minute in hour (number) rule = selectNumberRule(Calendar.MINUTE, tokenLen); break; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.4472135954999579	631	631	1	replace	
2	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] rule = new TextField(Calendar.MONTH, months); } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { rule = TwoDigitMonthField.INSTANCE; } else { rule = UnpaddedMonthField.INSTANCE; } break; case 'd': // day in month (number) [BUGGY] [BUGGY] rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); break; case 'h': // hour in am/pm (number, 1..12) rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen)); break; case 'H': // hour in day (number, 0..23) rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen); break; case 'm': // minute in hour (number) rule = selectNumberRule(Calendar.MINUTE, tokenLen); break; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.4472135954999579	631	631	1	add	
3	[BUG] [BUGGY] break; [FE] SerializationException [CONTEXT] } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { rule = TwoDigitMonthField.INSTANCE; } else { rule = UnpaddedMonthField.INSTANCE; } break; case 'd': // day in month (number) rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); [BUGGY] break; [BUGGY] case 'h': // hour in am/pm (number, 1..12) rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen)); break; case 'H': // hour in day (number, 0..23) rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen); break; case 'm': // minute in hour (number) rule = selectNumberRule(Calendar.MINUTE, tokenLen); break; case 's': // second in minute (number) [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.4472135954999579	632	632	1	replace	
4	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { rule = TwoDigitMonthField.INSTANCE; } else { rule = UnpaddedMonthField.INSTANCE; } break; case 'd': // day in month (number) rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); [BUGGY] [BUGGY] break; case 'h': // hour in am/pm (number, 1..12) rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen)); break; case 'H': // hour in day (number, 0..23) rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen); break; case 'm': // minute in hour (number) rule = selectNumberRule(Calendar.MINUTE, tokenLen); break; case 's': // second in minute (number) [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.4472135954999579	632	632	1	add	
5	[BUG] [BUGGY] return getInstance(pattern, null, null); [FE] SerializationException [CONTEXT] public static FastDateFormat getInstance(String pattern) { [BUGGY] return getInstance(pattern, null, null); [BUGGY] } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3779644730092272	167	167	1	replace	
6	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static FastDateFormat getInstance(String pattern) { [BUGGY] [BUGGY] return getInstance(pattern, null, null); } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3779644730092272	167	167	1	add	
7	[BUG] [BUGGY] locale = Locale.getDefault(); [FE] SerializationException [CONTEXT] mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { [BUGGY] locale = Locale.getDefault(); [BUGGY] } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.35355339059327373	553	553	1	replace	
8	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { [BUGGY] [BUGGY] locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.35355339059327373	553	553	1	add	
9	[BUG] [BUGGY] rule = selectNumberRule(Calendar.YEAR, tokenLen); [FE] SerializationException [CONTEXT] Rule rule; char c = token.charAt(0); switch (c) { case 'G': // era designator (text) rule = new TextField(Calendar.ERA, ERAs); break; case 'y': // year (number) if (tokenLen >= 4) { [BUGGY] rule = selectNumberRule(Calendar.YEAR, tokenLen); [BUGGY] } else { rule = TwoDigitYearField.INSTANCE; } break; case 'M': // month in year (text and number) if (tokenLen >= 4) { rule = new TextField(Calendar.MONTH, months); } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	replace	
10	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] Rule rule; char c = token.charAt(0); switch (c) { case 'G': // era designator (text) rule = new TextField(Calendar.ERA, ERAs); break; case 'y': // year (number) if (tokenLen >= 4) { [BUGGY] [BUGGY] rule = selectNumberRule(Calendar.YEAR, tokenLen); } else { rule = TwoDigitYearField.INSTANCE; } break; case 'M': // month in year (text and number) if (tokenLen >= 4) { rule = new TextField(Calendar.MONTH, months); } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	614	614	1	add	
11	[BUG] [BUGGY] rule = TwoDigitMonthField.INSTANCE; [FE] SerializationException [CONTEXT] } else { rule = TwoDigitYearField.INSTANCE; } break; case 'M': // month in year (text and number) if (tokenLen >= 4) { rule = new TextField(Calendar.MONTH, months); } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { [BUGGY] rule = TwoDigitMonthField.INSTANCE; [BUGGY] } else { rule = UnpaddedMonthField.INSTANCE; } break; case 'd': // day in month (number) rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); break; case 'h': // hour in am/pm (number, 1..12) rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen)); break; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	625	625	1	replace	
12	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] } else { rule = TwoDigitYearField.INSTANCE; } break; case 'M': // month in year (text and number) if (tokenLen >= 4) { rule = new TextField(Calendar.MONTH, months); } else if (tokenLen == 3) { rule = new TextField(Calendar.MONTH, shortMonths); } else if (tokenLen == 2) { [BUGGY] [BUGGY] rule = TwoDigitMonthField.INSTANCE; } else { rule = UnpaddedMonthField.INSTANCE; } break; case 'd': // day in month (number) rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); break; case 'h': // hour in am/pm (number, 1..12) rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen)); break; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	625	625	1	add	
13	[BUG] [BUGGY] return new PaddedNumberField(field, padding); [FE] SerializationException [CONTEXT] protected NumberRule selectNumberRule(int field, int padding) { switch (padding) { case 1: return new UnpaddedNumberField(field); case 2: return new TwoDigitNumberField(field); default: [BUGGY] return new PaddedNumberField(field, padding); [BUGGY] } } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] selectNumberRule [RETURN_TYPE] FastDateFormat$NumberRule  int field int padding [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle padding size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight inLiteral mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue peek value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	replace	
14	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected NumberRule selectNumberRule(int field, int padding) { switch (padding) { case 1: return new UnpaddedNumberField(field); case 2: return new TwoDigitNumberField(field); default: [BUGGY] [BUGGY] return new PaddedNumberField(field, padding); } } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] selectNumberRule [RETURN_TYPE] FastDateFormat$NumberRule  int field int padding [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle padding size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight inLiteral mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue peek value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.3333333333333333	777	777	1	add	
15	[BUG] [BUGGY] super(); [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { [BUGGY] super(); [BUGGY] if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	539	539	1	replace	
16	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { [BUGGY] [BUGGY] super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	539	539	1	add	
17	[BUG] [BUGGY] if (pattern == null) { [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); [BUGGY] if (pattern == null) { [BUGGY] throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone;  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	replace	
18	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); [BUGGY] [BUGGY] if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone;  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	540	540	1	add	
19	[BUG] [BUGGY] mPattern = pattern; [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } [BUGGY] mPattern = pattern; [BUGGY]  mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	543	543	1	replace	
20	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } [BUGGY] [BUGGY] mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	543	543	1	add	
21	[BUG] [BUGGY] mTimeZoneForced = (timeZone != null); [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; [BUGGY] mTimeZoneForced = (timeZone != null); [BUGGY] if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	545	545	1	replace	
22	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; [BUGGY] [BUGGY] mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	545	545	1	add	
23	[BUG] [BUGGY] if (timeZone == null) { [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); [BUGGY] if (timeZone == null) { [BUGGY] timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	546	546	1	replace	
24	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); [BUGGY] [BUGGY] if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	546	546	1	add	
25	[BUG] [BUGGY] timeZone = TimeZone.getDefault(); [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { [BUGGY] timeZone = TimeZone.getDefault(); [BUGGY] } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	547	547	1	replace	
26	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) { super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { [BUGGY] [BUGGY] timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	547	547	1	add	
27	[BUG] [BUGGY] mTimeZone = timeZone; [FE] SerializationException [CONTEXT] super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } [BUGGY] mTimeZone = timeZone; [BUGGY]  mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	549	549	1	replace	
28	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] super(); if (pattern == null) { throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } [BUGGY] [BUGGY] mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	549	549	1	add	
29	[BUG] [BUGGY] mLocaleForced = (locale != null); [FE] SerializationException [CONTEXT] throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; [BUGGY] mLocaleForced = (locale != null); [BUGGY] if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	551	551	1	replace	
30	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] throw new IllegalArgumentException("The pattern must not be null"); } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; [BUGGY] [BUGGY] mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	551	551	1	add	
31	[BUG] [BUGGY] if (locale == null) { [FE] SerializationException [CONTEXT] } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); [BUGGY] if (locale == null) { [BUGGY] locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	552	552	1	replace	
32	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] } mPattern = pattern; mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); [BUGGY] [BUGGY] if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	552	552	1	add	
33	[BUG] [BUGGY] mLocale = locale; [FE] SerializationException [CONTEXT] mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } [BUGGY] mLocale = locale; [BUGGY] } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	555	555	1	replace	
34	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] mTimeZoneForced = (timeZone != null); if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } [BUGGY] [BUGGY] mLocale = locale; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	555	555	1	add	
35	[BUG] [BUGGY] } [FE] SerializationException [CONTEXT] if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; [BUGGY] } [BUGGY]  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	556	556	1	replace	
36	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] if (timeZone == null) { timeZone = TimeZone.getDefault(); } mTimeZone = timeZone; mLocaleForced = (locale != null); if (locale == null) { locale = Locale.getDefault(); } mLocale = locale; [BUGGY] [BUGGY] } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern String[] mValues UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT mField mMaxLengthEstimate mSize mStyle Rule[] mRules TimeZone mTimeZone timeZone boolean mColon mLocaleForced mTimeZoneForced NumberRule mRule char mValue TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	556	556	1	add	
37	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static String cDefaultPattern; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	111	111	1	replace	
38	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static String cDefaultPattern; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	111	111	1	add	
39	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	112	112	1	replace	
40	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	112	112	1	add	
41	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	113	113	1	replace	
42	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	113	113	1	add	
43	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cDateInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	114	114	1	replace	
44	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cDateInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	114	114	1	add	
45	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cTimeInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	115	115	1	replace	
46	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] private static Map cTimeInstanceCache = new HashMap(7); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair  [VARIABLES] 	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	115	115	1	add	
47	[BUG] [BUGGY] FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { [BUGGY] FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); [BUGGY] FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	replace	
48	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { [BUGGY] [BUGGY] FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	213	213	1	add	
49	[BUG] [BUGGY] FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); [BUGGY] FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); [BUGGY] if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	214	214	1	replace	
50	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); [BUGGY] [BUGGY] FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	214	214	1	add	
51	[BUG] [BUGGY] if (format == null) { [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); [BUGGY] if (format == null) { [BUGGY] format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	215	215	1	replace	
52	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); [BUGGY] [BUGGY] if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	215	215	1	add	
53	[BUG] [BUGGY] format = emptyFormat; [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { [BUGGY] format = emptyFormat; [BUGGY] format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	
54	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { [BUGGY] [BUGGY] format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	add	
55	[BUG] [BUGGY] format.init();// convert shell format into usable one cInstanceCache.put(format, format); // this is OK! } [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; [BUGGY] format.init();// convert shell format into usable one   cInstanceCache.put(format, format); // this is OK!    } [BUGGY] cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	replace	
56	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; [BUGGY] [BUGGY] format.init();// convert shell format into usable one   cInstanceCache.put(format, format); // this is OK!    } cInstanceCache.put(format, format);// this is OK! } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	217	219	1	add	
57	[BUG] [BUGGY] cInstanceCache.put(format, format);// this is OK! } [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one [BUGGY] cInstanceCache.put(format, format);// this is OK!  } [BUGGY] } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	218	219	1	replace	
58	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one [BUGGY] [BUGGY] cInstanceCache.put(format, format);// this is OK!  } } return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	218	219	1	add	
59	[BUG] [BUGGY] return format; [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } [BUGGY] return format; [BUGGY] } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	replace	
60	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) { FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale); FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat); if (format == null) { format = emptyFormat; format.init();// convert shell format into usable one cInstanceCache.put(format, format);// this is OK! } [BUGGY] [BUGGY] return format; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] getInstance [RETURN_TYPE] FastDateFormat  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE FastDateFormat emptyFormat format String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT field mField mMaxLengthEstimate mSize mStyle size style Rule[] mRules TimeZone mTimeZone timeZone boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object mObj1 mObj2 obj1 obj2 Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	220	220	1	add	
61	[BUG] [BUGGY] List rulesList = parsePattern(); [FE] SerializationException [CONTEXT] protected void init() { [BUGGY] List rulesList = parsePattern(); [BUGGY] mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	562	562	1	replace	
62	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected void init() { [BUGGY] [BUGGY] List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	562	562	1	add	
63	[BUG] [BUGGY] mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); [BUGGY] mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); [BUGGY]  int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	563	563	1	replace	
64	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); [BUGGY] [BUGGY] mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	563	563	1	add	
65	[BUG] [BUGGY] int len = 0; [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); [BUGGY] int len = 0; [BUGGY] for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	565	565	1	replace	
66	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); [BUGGY] [BUGGY] int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	565	565	1	add	
67	[BUG] [BUGGY] for (int i=mRules.length; --i >= 0; ) { [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; [BUGGY] for (int i=mRules.length; --i >= 0; ) { [BUGGY] len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	566	566	1	replace	
68	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; [BUGGY] [BUGGY] for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	566	566	1	add	
69	[BUG] [BUGGY] len += mRules[i].estimateLength(); [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { [BUGGY] len += mRules[i].estimateLength(); [BUGGY] } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	567	567	1	replace	
70	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { [BUGGY] [BUGGY] len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	567	567	1	add	
71	[BUG] [BUGGY] mMaxLengthEstimate = len; [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } [BUGGY] mMaxLengthEstimate = len; [BUGGY] } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	570	570	1	replace	
72	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } [BUGGY] [BUGGY] mMaxLengthEstimate = len; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	570	570	1	add	
73	[BUG] [BUGGY] } [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; [BUGGY] } [BUGGY]  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	replace	
74	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected void init() { List rulesList = parsePattern(); mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]); int len = 0; for (int i=mRules.length; --i >= 0; ) { len += mRules[i].estimateLength(); } mMaxLengthEstimate = len; [BUGGY] [BUGGY] } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE String cDefaultPattern mDaylight mPattern mStandard mValue pattern value String[] mValues values UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len mField mMaxLengthEstimate mSize mStyle size style timeStyle Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 List rulesList Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	571	571	1	add	
75	[BUG] [BUGGY] DateFormatSymbols symbols = new DateFormatSymbols(mLocale); [FE] SerializationException [CONTEXT] protected List parsePattern() { [BUGGY] DateFormatSymbols symbols = new DateFormatSymbols(mLocale); [BUGGY] List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	582	582	1	replace	
76	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { [BUGGY] [BUGGY] DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	582	582	1	add	
77	[BUG] [BUGGY] List rules = new ArrayList(); [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); [BUGGY] List rules = new ArrayList(); [BUGGY]  String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	583	583	1	replace	
78	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); [BUGGY] [BUGGY] List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	583	583	1	add	
79	[BUG] [BUGGY] String[] ERAs = symbols.getEras(); [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); [BUGGY] String[] ERAs = symbols.getEras(); [BUGGY] String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	585	585	1	replace	
80	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); [BUGGY] [BUGGY] String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	585	585	1	add	
81	[BUG] [BUGGY] String[] months = symbols.getMonths(); [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); [BUGGY] String[] months = symbols.getMonths(); [BUGGY] String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	586	586	1	replace	
82	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); [BUGGY] [BUGGY] String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	586	586	1	add	
83	[BUG] [BUGGY] String[] shortMonths = symbols.getShortMonths(); [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); [BUGGY] String[] shortMonths = symbols.getShortMonths(); [BUGGY] String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	587	587	1	replace	
84	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); [BUGGY] [BUGGY] String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	587	587	1	add	
85	[BUG] [BUGGY] String[] weekdays = symbols.getWeekdays(); [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); [BUGGY] String[] weekdays = symbols.getWeekdays(); [BUGGY] String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	588	588	1	replace	
86	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); [BUGGY] [BUGGY] String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	588	588	1	add	
87	[BUG] [BUGGY] String[] shortWeekdays = symbols.getShortWeekdays(); [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); [BUGGY] String[] shortWeekdays = symbols.getShortWeekdays(); [BUGGY] String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0];  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	589	589	1	replace	
88	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); [BUGGY] [BUGGY] String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0];  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	589	589	1	add	
89	[BUG] [BUGGY] String[] AmPmStrings = symbols.getAmPmStrings(); [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); [BUGGY] String[] AmPmStrings = symbols.getAmPmStrings(); [BUGGY]  int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	590	590	1	replace	
90	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] protected List parsePattern() { DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); [BUGGY] [BUGGY] String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	590	590	1	add	
91	[BUG] [BUGGY] int length = mPattern.length(); [FE] SerializationException [CONTEXT] DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); [BUGGY] int length = mPattern.length(); [BUGGY] int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	592	592	1	replace	
92	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] DateFormatSymbols symbols = new DateFormatSymbols(mLocale); List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); [BUGGY] [BUGGY] int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	592	592	1	add	
93	[BUG] [BUGGY] int[] indexRef = new int[1]; [FE] SerializationException [CONTEXT] List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); [BUGGY] int[] indexRef = new int[1]; [BUGGY]  for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	replace	
94	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] List rules = new ArrayList(); String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); [BUGGY] [BUGGY] int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	593	593	1	add	
95	[BUG] [BUGGY] for (int i = 0; i < length; i++) { [FE] SerializationException [CONTEXT] String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; [BUGGY] for (int i = 0; i < length; i++) { [BUGGY] indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } Rule rule; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	595	595	1	replace	
96	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] String[] ERAs = symbols.getEras(); String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; [BUGGY] [BUGGY] for (int i = 0; i < length; i++) { indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } Rule rule; [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	595	595	1	add	
97	[BUG] [BUGGY] indexRef[0] = i; [FE] SerializationException [CONTEXT] String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { [BUGGY] indexRef[0] = i; [BUGGY] String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } Rule rule; char c = token.charAt(0); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	replace	
98	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] String[] months = symbols.getMonths(); String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { [BUGGY] [BUGGY] indexRef[0] = i; String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } Rule rule; char c = token.charAt(0); [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	596	596	1	add	
99	[BUG] [BUGGY] String token = parseToken(mPattern, indexRef); [FE] SerializationException [CONTEXT] String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; [BUGGY] String token = parseToken(mPattern, indexRef); [BUGGY] i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } Rule rule; char c = token.charAt(0);  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	replace	
100	[BUG] [BUGGY] [FE] SerializationException [CONTEXT] String[] shortMonths = symbols.getShortMonths(); String[] weekdays = symbols.getWeekdays(); String[] shortWeekdays = symbols.getShortWeekdays(); String[] AmPmStrings = symbols.getAmPmStrings(); int length = mPattern.length(); int[] indexRef = new int[1]; for (int i = 0; i < length; i++) { indexRef[0] = i; [BUGGY] [BUGGY] String token = parseToken(mPattern, indexRef); i = indexRef[0]; int tokenLen = token.length(); if (tokenLen == 0) { break; } Rule rule; char c = token.charAt(0);  [CLASS] FastDateFormat CharacterLiteral StringLiteral TextField UnpaddedNumberField UnpaddedMonthField PaddedNumberField TwoDigitNumberField TwoDigitYearField TwoDigitMonthField TwelveHourField TwentyFourHourField TimeZoneNameRule TimeZoneNumberRule TimeZoneDisplayKey Pair [METHOD] parsePattern [RETURN_TYPE] List  [VARIABLES] Locale locale mLocale TimeZoneNumberRule INSTANCE_COLON INSTANCE_NO_COLON TwoDigitYearField INSTANCE int[] indexRef String cDefaultPattern mDaylight mPattern mStandard mValue pattern sub token value String[] AmPmStrings ERAs mValues months shortMonths shortWeekdays values weekdays UnpaddedNumberField INSTANCE_YEAR long serialVersionUID int FULL LONG MEDIUM SHORT dateStyle field i len length mField mMaxLengthEstimate mSize mStyle size style timeStyle tokenLen Rule[] mRules TimeZone mTimeZone timeZone tz boolean colon daylight mColon mLocaleForced mTimeZoneForced timeZoneForced NumberRule mRule rule char c mValue value TwoDigitMonthField INSTANCE UnpaddedMonthField INSTANCE Object key mObj1 mObj2 obj1 obj2 DateFormatSymbols symbols List rules Rule rule Map cDateInstanceCache cDateTimeInstanceCache cInstanceCache cTimeInstanceCache cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	597	597	1	add	
